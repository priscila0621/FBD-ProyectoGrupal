/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 15.0 		*/
/*  Created On : 19-oct-2025 22:04:13 				*/
/*  DBMS       : SQL Server 2012 						*/
/* ---------------------------------------------------- */

/* Drop Foreign Key Constraints */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Tbl_Cliente_cat_estado_registro]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_Cliente] DROP CONSTRAINT [FK_Tbl_Cliente_cat_estado_registro]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Tbl_Cliente_cat_tipo_cliente]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_Cliente] DROP CONSTRAINT [FK_Tbl_Cliente_cat_tipo_cliente]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_incluye_DetalleFactura]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_DetalleFactura] DROP CONSTRAINT [FK_incluye_DetalleFactura]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_contiene_Factura]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_DetalleFactura] DROP CONSTRAINT [FK_contiene_Factura]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_contiene_OrdenCompra]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_DetalleOrdenCompra] DROP CONSTRAINT [FK_contiene_OrdenCompra]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_incluye_DetalleOrdenCompra]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_DetalleOrdenCompra] DROP CONSTRAINT [FK_incluye_DetalleOrdenCompra]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Tbl_Empleado_cat_estado_registro]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_Empleado] DROP CONSTRAINT [FK_Tbl_Empleado_cat_estado_registro]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Tbl_Factura_cast_estado_pago]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_Factura] DROP CONSTRAINT [FK_Tbl_Factura_cast_estado_pago]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Tbl_Factura_cat_metodo_pago]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_Factura] DROP CONSTRAINT [FK_Tbl_Factura_cat_metodo_pago]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_pertenece_Factura]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_Factura] DROP CONSTRAINT [FK_pertenece_Factura]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_emite_Empleado]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_Factura] DROP CONSTRAINT [FK_emite_Empleado]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_origina_OrdenServicio]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_Factura] DROP CONSTRAINT [FK_origina_OrdenServicio]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Tbl_OrdenCompra_cat_estado_orden_compra]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_OrdenCompra] DROP CONSTRAINT [FK_Tbl_OrdenCompra_cat_estado_orden_compra]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Tbl_OrdenCompra_cat_forma_envio]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_OrdenCompra] DROP CONSTRAINT [FK_Tbl_OrdenCompra_cat_forma_envio]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Tbl_OrdenCompra_cat_metodo_pago]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_OrdenCompra] DROP CONSTRAINT [FK_Tbl_OrdenCompra_cat_metodo_pago]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_crea_Empleado]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_OrdenCompra] DROP CONSTRAINT [FK_crea_Empleado]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_recibe_Proveedor]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_OrdenCompra] DROP CONSTRAINT [FK_recibe_Proveedor]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Tbl_OrdenServicio_cat_estado_orden_servicio]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_OrdenServicio] DROP CONSTRAINT [FK_Tbl_OrdenServicio_cat_estado_orden_servicio]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_solicita_Cliente]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_OrdenServicio] DROP CONSTRAINT [FK_solicita_Cliente]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_gestiona_Empleado]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_OrdenServicio] DROP CONSTRAINT [FK_gestiona_Empleado]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_recibe_Vehiculo]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_OrdenServicio] DROP CONSTRAINT [FK_recibe_Vehiculo]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_contiene_OrdenServicio]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_OrdenServicioDetalle] DROP CONSTRAINT [FK_contiene_OrdenServicio]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_incluye_OrdenServicioDetalle]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_OrdenServicioDetalle] DROP CONSTRAINT [FK_incluye_OrdenServicioDetalle]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Tbl_Proveedor_cat_estado_registro]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_Proveedor] DROP CONSTRAINT [FK_Tbl_Proveedor_cat_estado_registro]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Repuesto_Proveedor]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_Repuesto] DROP CONSTRAINT [FK_Repuesto_Proveedor]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Tbl_Repuesto_cat_categoria_repuesto]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_Repuesto] DROP CONSTRAINT [FK_Tbl_Repuesto_cat_categoria_repuesto]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Tbl_Repuesto_cat_estado_repuesto]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_Repuesto] DROP CONSTRAINT [FK_Tbl_Repuesto_cat_estado_repuesto]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Tbl_Servicio_cat_nivel_dificultad_servicio]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_Servicio] DROP CONSTRAINT [FK_Tbl_Servicio_cat_nivel_dificultad_servicio]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Tbl_Vehiculo_cat_categoria_vehiculo]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_Vehiculo] DROP CONSTRAINT [FK_Tbl_Vehiculo_cat_categoria_vehiculo]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Tbl_Vehiculo_cat_combustible]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_Vehiculo] DROP CONSTRAINT [FK_Tbl_Vehiculo_cat_combustible]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Tbl_Vehiculo_cat_estado_vehiculo]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_Vehiculo] DROP CONSTRAINT [FK_Tbl_Vehiculo_cat_estado_vehiculo]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Tbl_Vehiculo_cat_transmision]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Tbl_Vehiculo] DROP CONSTRAINT [FK_Tbl_Vehiculo_cat_transmision]
GO

/* Drop Tables */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[cat_categoria_repuesto]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [cat_categoria_repuesto]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[cat_categoria_vehiculo]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [cat_categoria_vehiculo]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[cat_combustible]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [cat_combustible]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[cat_estado_orden_compra]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [cat_estado_orden_compra]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[cat_estado_orden_servicio]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [cat_estado_orden_servicio]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[cat_estado_pago]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [cat_estado_pago]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[cat_estado_registro]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [cat_estado_registro]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[cat_estado_repuesto]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [cat_estado_repuesto]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[cat_estado_vehiculo]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [cat_estado_vehiculo]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[cat_forma_envio]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [cat_forma_envio]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[cat_metodo_pago]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [cat_metodo_pago]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[cat_nivel_dificultad_servicio]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [cat_nivel_dificultad_servicio]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[cat_tipo_cliente]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [cat_tipo_cliente]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[cat_transmision]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [cat_transmision]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Tbl_Cliente]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Tbl_Cliente]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Tbl_DetalleFactura]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Tbl_DetalleFactura]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Tbl_DetalleOrdenCompra]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Tbl_DetalleOrdenCompra]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Tbl_Empleado]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Tbl_Empleado]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Tbl_Factura]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Tbl_Factura]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Tbl_OrdenCompra]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Tbl_OrdenCompra]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Tbl_OrdenServicio]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Tbl_OrdenServicio]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Tbl_OrdenServicioDetalle]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Tbl_OrdenServicioDetalle]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Tbl_Proveedor]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Tbl_Proveedor]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Tbl_Repuesto]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Tbl_Repuesto]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Tbl_Servicio]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Tbl_Servicio]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Tbl_Vehiculo]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Tbl_Vehiculo]
GO

/* Create Tables */

CREATE TABLE [cat_categoria_repuesto]
(
	[id_categoria_rep] int NOT NULL,	-- Identificador técnico único de la categoría de repuesto, independiente de rótulos. Asegura relaciones estables con la entidad Repuesto y soporta trazabilidad histórica. No debe reutilizarse para otros significados. Actúa como ancla para reportes por familias y decisiones de abastecimiento. Refuerza la integridad del dominio.
	[nombre] varchar(40) NOT NULL,	-- Denominación normalizada de la categoría, única para evitar ambigüedad. Su gestión central asegura consistencia en capturas y tableros. No es clave relacional; su finalidad es comunicativa. Cambios en el nombre se documentan sin afectar la identidad técnica. Favorece filtros y análisis por familia.
	[descripcion] varchar(120) NULL,	-- Detalle explicativo del alcance de la categoría y ejemplos de piezas incluidas. Reduce errores de clasificación y ayuda a capacitar al personal. No interviene en validaciones; su valor es documental. Debe mantenerse actualizada ante cambios en el portafolio. Aporta contexto a auditorías.
	[es_activo] bit NOT NULL,	-- Señal que regula disponibilidad para nuevas asignaciones, manteniendo orden del dominio sin borrar historia. Las interfaces deben ocultar categorías inactivas. No reinterpreta ítems previos; actúa hacia futuro. Contribuye a la gobernanza del dato maestro y limpieza operativa.
	[fecha_creacion] date NOT NULL	-- Fecha de incorporación de la categoría al catálogo, útil para auditorías y análisis de evolución. No tiene efectos funcionales directos; es contexto histórico. Permite evidenciar cuándo se consolidó una familia en el portafolio. Debe registrarse al alta.
)
GO

CREATE TABLE [cat_categoria_vehiculo]
(
	[id_categoria_veh] int NOT NULL,	-- Identificador técnico único de la categoría, independiente del rótulo textual. Asegura relaciones estables con la entidad Vehículo y preserva trazabilidad histórica. Debe ser no reutilizable para otro significado. Es la base técnica de reportes por familia y de segmentación comercial. Refuerza integridad del dominio.
	[nombre] varchar(30) NOT NULL,	-- Denominación normalizada de la categoría, única para evitar ambigüedad. Se muestra en interfaces y reportes, con gestión centralizada para impedir variantes. No se usa como clave relacional; su rol es comunicativo. Cambios del rótulo no afectan la identidad técnica. Favorece filtros y análisis por familia.
	[descripcion] varchar(120) NULL,	-- Descripción que documenta alcance y ejemplos de modelos incluidos. Reduce errores de clasificación y apoya capacitación. No participa en reglas automáticas; su valor es documental. Debe actualizarse con la evolución del portafolio. Aporta contexto a auditorías y decisiones de catálogo.
	[es_activo] bit NOT NULL,	-- Bandera de vigencia para nuevas asignaciones, conservando referencias históricas. Permite retirar categorías sin borrar registros, manteniendo limpieza del dominio. Las pantallas deben ocultar valores inactivos. No reinterpreta unidades previas; regula el uso futuro. Es clave para gobernanza del dato maestro.
	[fecha_creacion] date NOT NULL	-- Fecha de incorporación del valor al catálogo, útil para auditorías y control de cambios. No tiene efectos funcionales; brinda contexto. Permite evidenciar el momento de adopción de una categoría. Debe registrarse de forma consistente.
)
GO

CREATE TABLE [cat_combustible]
(
	[id_combustible] int NOT NULL,	-- Clave técnica estable que identifica el tipo de combustible, independiente de etiquetas. Evita acoplar relaciones a textos susceptibles de cambio. Es no reutilizable, preservando trazabilidad histórica. Facilita reportes consistentes y comparaciones de portafolio. Refuerza integridad del dominio en la entidad Vehículo.
	[nombre] varchar(20) NOT NULL,	-- Denominación normalizada del combustible, única para prevenir ambigüedad. Se muestra en interfaces y documentos, bajo administración central para impedir variantes. No funciona como clave relacional; su uso es comunicativo. Cambios en el rótulo no afectan la identidad técnica. Favorece estandarización semántica.
	[decripcion] varchar(120) NULL,	-- Aclaración del tipo, con notas de alcance y ejemplos. Mejora la comprensión y reduce errores de captura. No interviene en validaciones; su función es documental y de capacitación. Debe mantenerse acorde a la evolución del portafolio. Aporta contexto útil a auditorías.
	[es_activo] bit NOT NULL,	-- Marca de vigencia para nuevas asignaciones, manteniendo históricos intactos. Permite retirar opciones sin borrar registros. Las interfaces deben ocultar combustibles inactivos. No reinterpreta unidades previas; regula el uso futuro. Es parte del gobierno del dato maestro.
	[fecha_creacion] date NOT NULL	-- Fecha de alta del valor en el catálogo, útil para control de cambios y evidencia histórica. No produce efectos funcionales; contextualiza adopciones. Permite seguimiento de evolución del portafolio. Debe registrarse al crear el registro.
)
GO

CREATE TABLE [cat_estado_orden_compra]
(
	[id_estado_oc ] int NOT NULL,	-- Identificador técnico y único del estado de orden de compra, diseñado para relaciones estables con documentos operativos. Su uso evita acoplar la lógica a rótulos textuales que pueden cambiar por políticas o procedimientos. Debe ser no reutilizable para conservar la trazabilidad histórica. Actúa como pivote para mediciones y conciliaciones del flujo de compras. Asegura integridad referencial y consistencia en reportes transversales.
	[nombre] varchar(25) NOT NULL,	-- Denominación normalizada del estado, visible en pantallas y reportes, que debe ser única para eliminar ambigüedades. Su gestión centralizada evita proliferación de variantes y mantiene homogeneidad semántica entre áreas. No se usa como clave de relación; su función es comunicativa. Cambios en la etiqueta no alteran la identidad técnica del valor. Favorece filtros consistentes y lectura uniforme del proceso.
	[descripcion] varchar(120) NULL,	-- Texto explicativo del alcance del estado, condiciones de transición y ejemplos de uso. Aporta claridad operativa, reduce errores de captura y sirve como guía para capacitación. No participa en reglas automáticas; su valor es documental y de gobierno del dato. Debe mantenerse alineada a políticas vigentes. Facilita auditorías al contextualizar decisiones.
	[es_activo] bit NOT NULL,	-- Marca de vigencia para nuevas asignaciones, permitiendo retirar estados del catálogo sin borrar referencias históricas. Las interfaces deben ocultar valores inactivos al seleccionar. No reinterpreta documentos ya emitidos; regula únicamente el uso futuro. Contribuye a mantener un dominio ordenado y estable. Su custodia recae en el administrador del catálogo.
	[fecha_creacion] date NOT NULL	-- Fecha de alta del valor en el dominio, útil para auditoría y reconstrucción de línea de tiempo. No implica caducidad ni afecta lógica de procesos; es un dato contextual. Evidencia cuándo se incorporó formalmente el estado. Apoya políticas de revisión periódica del catálogo. Debe registrarse consistentemente.
)
GO

CREATE TABLE [cat_estado_orden_servicio]
(
	[id_estado_os] int NOT NULL,	-- Clave lógica única que identifica cada estado del ciclo de órdenes de servicio. Su objetivo es habilitar relaciones consistentes desde OrdenServicio sin depender de cadenas textuales susceptibles a error. Debe ser estable y no reemitirse para otro significado a lo largo del tiempo. Soporta trazabilidad en reportes de flujo (apertura, cotización, ejecución, cierre) y auditorías de estado. Es el pivote técnico del dominio y respalda la interoperabilidad entre módulos.
	[nombre] varchar(25) NOT NULL,	-- Denominación normalizada del estado operativo de las órdenes (ej.: abierta, cotizada, aprobada, en_proceso, cerrada, cancelada). Debe ser única para evitar confusión y para permitir filtros consistentes en consultas. Se administra centralizadamente como parte del gobierno del dato maestro. Cambios en el rótulo no afectan la identidad del estado, que la provee la PK. Sirve para comunicación con usuarios y generación de documentos.
	[descripcion] varchar(120) NULL,	-- Detalle explicativo del estado, aclarando su uso, eventos que lo disparan y condiciones para transición. Fomenta una interpretación uniforme entre áreas operativas y reduce controversias por ambigüedad. Puede registrar políticas internas (ej., requisitos para aprobar o cerrar). No participa en claves ni en lógica de negocio directa; su valor es documental y de control. Facilita auditorías y capacitación.
	[es_activo] bit NOT NULL,	-- Marca de vigencia del estado para asignaciones nuevas, sin afectar referencias históricas en órdenes ya registradas. Permite administrar el ciclo de vida del propio dominio sin realizar borrados, conservando la historia. Las pantallas deben respetar este indicador al ofrecer opciones. Evita proliferación de estados en desuso que contaminen reportes. Responsable de su mantenimiento: administración del catálogo.
	[fecha_creacion] date NOT NULL	-- Fecha de alta lógica en el catálogo, útil para reconstruir cuándo ingresó el estado al dominio. Apoya controles de cambio y verificación de políticas de gestión del dato. No altera comportamientos funcionales per se; contextualiza decisiones de diseño y adopciones. Puede complementar bitácoras externas de gobierno de datos. Se registra una sola vez y no requiere actualización periódica.
)
GO

CREATE TABLE [cat_estado_pago]
(
	[id_estado_pago] int NOT NULL,	-- Identificador lógico del estado de pago de documentos (p. ej., facturas), asegurando relaciones consistentes con el módulo financiero. Es una clave sin significado de negocio por sí misma, diseñada para estabilidad y trazabilidad. Evita depender de etiquetas que podrían cambiar por normativas o criterios internos. Su unicidad impide colisiones semánticas y facilita auditoría. Actúa como vértice técnico para controles y reportes de cartera.
	[nombre] varchar(20) NOT NULL,	-- Etiqueta del estado de pago (ej.: pendiente, pagada, anulada) publicada a usuarios y reportes. Debe ser única, clara y breve, promoviendo lectura homogénea en toda la organización. Se gestiona de forma centralizada para evitar variantes terminológicas y garantizar comparabilidad histórica. No se usa como clave en relaciones; sirve de presentación human-readable. Cambios de denominación se documentan sin alterar la identidad técnica del estado.
	[descripcion] varchar(120) NULL,	-- Descripción extendida del criterio de uso de cada estado, incluyendo ejemplos y excepciones. Mejora la comprensión inter-áreas (ventas, cobranza, contabilidad) y reduce inconsistencias al aplicar estados. Puede especificar implicancias contables o fiscales a nivel informativo. Su rol es documental, no operativo. Aporta valor a la documentación automática y a procesos de auditoría.
	[es_activo] bit NOT NULL,	-- Controla si el estado puede ser seleccionado en nuevos documentos, preservando la integridad de históricos. Permite retirar valores obsoletos sin romper referencialidad. Las interfaces deben filtrar opciones inactivas, manteniendo limpieza del dominio. Esta señal no reinterpreta documentos ya emitidos; sólo regula nuevas asignaciones. Su mantenimiento corresponde a la administración del catálogo.
	[fecha_creacion] date NOT NULL	-- Fecha lógica de incorporación del estado al dominio, con utilidad en auditorías y control de gestión del dato. No tiene efectos computacionales directos; contextualiza la evolución del catálogo. Ayuda a rastrear cuándo se habilitaron nuevas prácticas o se consolidaron terminologías. Puede ser insumo para políticas internas de cambios. Se registra a modo de referencia histórica.
)
GO

CREATE TABLE [cat_estado_registro]
(
	[id_estado_reg] int NOT NULL,	-- Clave técnica que identifica unívocamente el estado de un registro maestro. Evita depender de textos y estabiliza relaciones con entidades hijas. No se reutiliza para otro significado, preservando trazabilidad histórica. Actúa como ancla para políticas comunes de activación y desactivación. Soporta auditorías y control interno.
	[nombre] varchar(20) NOT NULL,	-- Etiqueta normalizada del estado (activo, inactivo, bloqueado), única para evitar ambigüedad. Su gestión centralizada garantiza homogeneidad entre maestros. No se usa como clave relacional; su función es comunicativa. Cambios de rótulo se documentan sin alterar la identidad técnica. Facilita filtros y reportes coherentes.
	[descripcion] varchar(120) NULL,	-- Aclaración del significado y uso del estado, con ejemplos y condiciones de cambio. Alinea expectativas entre áreas, reduciendo errores por interpretaciones. No participa en validaciones; es documental y de capacitación. Debe mantenerse conforme a políticas vigentes. Aporta valor en auditorías.
	[es_activo] bit NOT NULL,	-- Indica si el estado puede asignarse en nuevas altas, preservando referencias en históricos. Permite retirar opciones sin borrar registros. Las interfaces deben respetar esta señal al ofrecer valores. No reinterpreta registros previos; regula el uso futuro. Contribuye al orden y limpieza del dominio.
	[fecha_creacion] date NULL	-- Registro de alta lógica en el catálogo, útil para control de cambios y evidencia histórica. No impone comportamientos; brinda contexto. Ayuda a trazar cuándo se adoptó una etiqueta particular. Complementa procesos de revisión del dominio maestro.
)
GO

CREATE TABLE [cat_estado_repuesto]
(
	[id_estado_rep] int NOT NULL,	-- Clave técnica única para identificar el estado de un repuesto, evitando dependencia de etiquetas. Su estabilidad facilita relaciones consistentes con procesos de compra y venta. Debe ser no reutilizable a fin de preservar la trazabilidad del dominio. Es el ancla para auditorías y análisis de disponibilidad. Permite interoperabilidad con otros módulos sin romper referencialidad.
	[nombre] varchar(20) NOT NULL,	-- Etiqueta compacta y normalizada que indica la vigencia o condición del repuesto. Debe ser única para eliminar ambigüedad en consultas y reportes. Su administración central evita variantes tipográficas y promueve homogeneidad en la operación. No se usa como clave relacional; es un descriptor de negocio. Cambios en el rótulo se documentan sin alterar la identidad técnica.
	[descripcion] varchar(120) NULL,	-- Aclaración de uso para cada estado, incluyendo criterios de asignación y ejemplos. Mejora la comprensión entre compras, almacén y ventas, reduciendo errores de clasificación. No participa en validaciones; su aporte es documental y de capacitación. Debe mantenerse al día conforme cambien políticas. Facilita auditoría contextual de decisiones.
	[es_activo] bit NOT NULL,	-- Indica si el estado se ofrece en selecciones futuras, preservando referencias en registros históricos. Permite “retirar” sin borrar, manteniendo orden y limpieza del dominio. Las interfaces deben filtrar valores inactivos. No modifica la semántica de repuestos ya clasificados; regula el uso futuro. Es parte de la gobernanza del dato maestro.
	[fecha_creacion] date NOT NULL	-- Momento de alta lógica del valor en el catálogo. Es útil para trazar evolución y demostrar control de cambios. No impone efectos automáticos; contextualiza la incorporación del estado. Sirve de respaldo en auditorías y políticas internas de revisión. Debe registrarse en el momento de creación del registro.
)
GO

CREATE TABLE [cat_estado_vehiculo]
(
	[id_estado_vehiculo] int NOT NULL,	-- Identificador lógico único del estado de vehículo dentro del dominio de referencia. Se utiliza como clave primaria para asegurar unicidad y permitir la relación consistente desde entidades operativas (p. ej., Vehículo) sin acoplarse a etiquetas textuales. Debe ser estable en el tiempo y no reutilizable, preservando la trazabilidad histórica de los valores. Su asignación responde a criterios administrativos del catálogo y no a atributos del negocio. Actúa como ancla semántica para reportes y auditorías, evitando dependencias de nombres o traducciones.
	[nombre] varchar(20) NOT NULL,	-- Etiqueta normalizada y legible del estado (ej.: disponible, reservado, vendido) que los usuarios reconocerán en interfaces y reportes. Debe ser única dentro del catálogo para evitar ambigüedad y favorecer la uniformidad semántica en todo el sistema. Se gestiona centralizadamente para prevenir variantes tipográficas y cambios no controlados. Su función es comunicativa; no debe usarse como clave técnica en relaciones. Cambios en esta etiqueta deben registrarse como actualización del catálogo sin romper la historia del identificador.
	[descripcion] varchar(120) NULL,	-- Texto explicativo que documenta el alcance, condiciones de uso y límites de cada estado del vehículo. Ayuda a estandarizar la interpretación entre áreas (comercial, taller, inventario) y reduce incidencias por significados implícitos. Puede incluir ejemplos y notas sobre transiciones permitidas o prohibidas. No participa en relaciones ni en lógica transaccional, pero enriquece la documentación generada automáticamente. Su mantenimiento es opcional, recomendado para capacitación y auditoría.
	[es_activo] bit NOT NULL,	-- Indicador lógico que determina si el valor del estado está vigente para nuevas asignaciones en las entidades hijas. Permite descontinuar opciones sin eliminar registros, preservando la consistencia de históricos y la integridad referencial. Debe usarse por las interfaces para filtrar opciones disponibles al usuario. No modifica la semántica de registros ya históricos; actúa como política de disponibilidad hacia futuro. Su administración es responsabilidad del custodio del catálogo.
	[fecha_creacion] date NOT NULL	-- Fecha lógica de alta del valor en el catálogo, útil para auditorías, controles de cambio y análisis de adopción. No implica temporalidad del uso en registros hijos, sino el momento en que el dominio incorporó formalmente el estado. Facilita reconstruir líneas de tiempo del catálogo y validar prácticas de gobernanza de datos. Puede emplearse para políticas internas (por ejemplo, congelar cambios tras cierto período). Se mantiene como dato informativo, sin efectos automáticos sobre relaciones.
)
GO

CREATE TABLE [cat_forma_envio]
(
	[id_forma_envio] int NOT NULL,	-- Identificador lógico único de la modalidad de envío utilizada en órdenes de compra u operaciones logísticas. Proporciona un ancla técnica estable para relacionar documentos sin depender de descripciones textuales susceptibles a cambios. Debe ser no reutilizable, facilitando trazabilidad histórica y auditorías. Su función es sostener la integridad relacional y la interoperabilidad con otros módulos. Constituye el pivote del dominio logístico en el modelo.
	[nombre] varchar(25) NOT NULL,	-- Denominación normalizada de la modalidad (ej.: retiro, mensajería, paquetería, transporte propio), visible en interfaces y reportes. La unicidad evita confusión y asegura comparabilidad de indicadores operativos. Se administra centralmente para impedir variantes y mantener la consistencia en toda la organización. No es clave relacional; su rol es comunicacional. Cambios en el rótulo no invalidan la identidad del valor.
	[descripcion] varchar(120) NULL,	-- Detalle explicativo sobre alcance, condiciones y restricciones de uso de cada forma de envío. Facilita acuerdos entre compras, logística y recepción, reduciendo malentendidos operativos. Puede incluir ejemplos y notas de costos o tiempos típicos a nivel informativo. No incide en reglas de integridad, pero fortalece la documentación y el entrenamiento. Se recomienda mantenerla actualizada ante cambios procedimentales.
	[es_activo] bit NOT NULL,	-- Marca de disponibilidad para asignaciones nuevas, permitiendo retirar opciones sin borrar registros y conservando la historia. Las interfaces deben filtrar las formas inactivas al momento de selección. No reinterpreta documentos previos; regula uso futuro. Es una herramienta de gobierno del dato maestro para mantener el catálogo ordenado. Su gestión corresponde al área responsable del proceso logístico.
	[fecha_creacion] date NOT NULL	-- Fecha lógica de incorporación de la forma de envío al catálogo de referencia. Sirve de respaldo en auditorías y facilita análisis evolutivo del dominio. No implica caducidad automática ni afecta relaciones existentes; es un dato contextual y estable. Puede apoyar políticas de revisión o certificación periódica. Contribuye a la transparencia en la administración del catálogo.
)
GO

CREATE TABLE [cat_metodo_pago]
(
	[id_metodo_pago] int NOT NULL,	-- Clave técnica única para identificar métodos de pago aceptados por la organización. Habilita referencias desde módulos de ventas y compras sin acoplarse a rótulos cambiantes. Debe permanecer estable y no reutilizarse para otros significados, facilitando trazabilidad financiera. Permite incorporar nuevos métodos sin impactar relaciones existentes. Es el punto de anclaje del dominio y base de interoperabilidad.
	[nombre] varchar(20) NOT NULL,	-- Nombre normalizado del método (ej.: contado, crédito, transferencia, tarjeta), expuesto en interfaces y reportes. Requiere unicidad para evitar ambigüedad y consolidar métricas comparables. Su gestión centralizada minimiza variaciones terminológicas entre áreas y documentos. No se usa como clave relacional; es un descriptor amigable. Cambios en el rótulo no afectan la identidad del método.
	[descripcion] varchar(120) NULL,	-- Aclaración semántica y operativa del método de pago, incluyendo condiciones, restricciones o notas de uso. Favorece interpretación homogénea y reduce errores de captura o clasificación. Puede registrar prácticas internas (plazos, verificación requerida) a nivel informativo. No participa en reglas de integridad; su valor es documental. Enriquece la salida de documentación y la capacitación del usuario.
	[es_activo] bit NOT NULL,	-- Indicador de disponibilidad para nuevas transacciones, preservando la consistencia histórica de documentos antiguos. Permite retirar métodos sin eliminar registros, facilitando gobierno del dominio. Las interfaces deben ocultar métodos inactivos en selección. No altera transacciones pasadas; actúa sobre asignaciones futuras. Su administración recae en el custodio del catálogo.
	[fecha_creacion] date NOT NULL	-- Fecha de alta lógica del método en el dominio de referencia. Resulta útil para auditorías, control de cambios y análisis de adopción. No establece validez temporal en documentos; contextualiza el momento de incorporación. Puede servir para políticas de revisión periódica del catálogo. Es un dato informativo y estable.
)
GO

CREATE TABLE [cat_nivel_dificultad_servicio]
(
	[id_nivel] int NOT NULL,	-- Identificador técnico del nivel de dificultad, estable y no reutilizable. Permite relaciones consistentes con la entidad Servicio sin depender de textos cambiantes. Es el ancla para reportes y análisis de complejidad. Asegura integridad referencial y trazabilidad de decisiones. Facilita interoperabilidad con planificación y control.
	[nombre] varchar(20) NOT NULL,	-- Etiqueta del nivel (básico, medio, avanzado), única para evitar ambigüedad. Se utiliza en interfaces y documentos, con administración centralizada para evitar variantes. No es clave relacional; su rol es comunicativo. Cambios de rótulo no alteran la identidad técnica. Favorece lectura homogénea del catálogo.
	[descripcion] varchar(120) NULL,	-- Texto que contextualiza el alcance del nivel y ejemplos de servicios típicos. Mejora la uniformidad de criterios y reduce discrepancias en planeación. No participa en validaciones; es informativo. Debe mantenerse actualizado según prácticas del taller. Aporta claridad a capacitación y auditorías.
	[es_activo] bit NOT NULL,	-- Indicador de vigencia para nuevas asignaciones, conservando históricos. Permite retirar niveles sin borrar registros. Las pantallas deben filtrar valores inactivos. No reinterpreta clasificaciones pasadas; opera hacia futuro. Es clave para gobernanza del dominio y orden semántico.
	[fecha_creacion] date NOT NULL	-- Fecha de incorporación del nivel al catálogo, relevante para auditorías y control de cambios. No genera efectos automáticos; brinda contexto. Permite rastrear adopción y evolución de criterios. Debe registrarse de manera consistente.
)
GO

CREATE TABLE [cat_tipo_cliente]
(
	[id_tipo_cliente] int NOT NULL,	-- Identificador técnico único que define el tipo de cliente sin depender de textos. Su estabilidad soporta relaciones con Factura, OS y otros procesos. Es no reutilizable para conservar trazabilidad histórica y consistencia en segmentación. Sirve como ancla para tableros de rentabilidad y estrategias de pricing. Asegura integridad referencial.
	[nombre] varchar(20) NOT NULL,	-- Denominación normalizada del tipo (minorista, corporativo, distribuidor, interno). La unicidad elimina ambigüedad, favorece filtros y reportes comparables. Se administra de forma centralizada para evitar variantes. No se usa como clave relacional; su rol es comunicativo. Cambios de rótulo no afectan la identidad técnica.
	[descripcion] varchar(120) NULL,	-- Texto que detalla el alcance del tipo, ejemplos y consideraciones de política comercial. Apoya una interpretación uniforme entre áreas y reduce errores de clasificación. No participa en validaciones automáticas; su valor es documental. Debe mantenerse al día con las prácticas de negocio. Facilita auditorías y capacitación.
	[es_activo] bit NOT NULL,	-- Control de vigencia para nuevas asignaciones, preservando históricos y manteniendo el dominio ordenado. Las interfaces deben ocultar los tipos inactivos al momento de selección. No reinterpreta registros previos; opera sobre futuras altas. Es una herramienta de gobierno del dato y limpieza semántica.
	[fecha_creacion] date NOT NULL	-- Fecha de alta del tipo en el catálogo, útil para auditorías y control de cambios. No afecta lógicas ni caducidades; aporta contexto histórico. Permite evidenciar cuándo se introdujo un tipo específico. Complementa políticas de revisión periódica del dominio. Debe registrarse consistentemente.
)
GO

CREATE TABLE [cat_transmision]
(
	[id_transmision] int NOT NULL,	-- Identificador técnico único y estable para el tipo de transmisión, no dependiente de textos. Facilita relaciones consistentes y trazabilidad. No se reutiliza para otro significado, preservando historia. Funciona como pivote para reportes y análisis de portafolio. Refuerza integridad referencial en la entidad Vehículo.
	[nombre] varchar(20) NULL,	-- Rótulo normalizado del tipo de transmisión, único para evitar confusiones. Visible en interfaces y documentos, bajo control central para impedir variantes. No es clave relacional; su uso es comunicativo. Cambios en el nombre se documentan sin alterar la identidad técnica. Favorece estandarización semántica.
	[descripcion] varchar(120) NULL,	-- Texto informativo que delimita el alcance de la categoría y ejemplos típicos. Reduce errores de clasificación y apoya la capacitación. No participa en reglas automáticas; es valor documental. Debe mantenerse actualizado según evolución tecnológica. Aporta contexto de auditoría.
	[es_activo] bit NOT NULL,	-- Indicador de vigencia que regula nuevas asignaciones sin afectar históricos. Permite retirar valores sin borrar registros. Las interfaces deben filtrar opciones inactivas. No reinterpreta unidades pasadas; opera hacia futuro. Es herramienta de gobierno del dato maestro.
	[fecha_creacion] date NOT NULL	-- Fecha de alta del valor, relevante para control de cambios y evidencia histórica. No impacta lógicas; contextualiza adopciones. Facilita seguimiento de evolución del dominio. Debe registrarse en el alta.
)
GO

CREATE TABLE [Tbl_Cliente]
(
	[id_cliente] int NOT NULL,	-- Identificador técnico único del cliente dentro del sistema. Se utiliza como clave primaria estable, no reciclable, que permite enlazar sin ambigüedad facturas, órdenes de servicio y cualquier interacción histórica. Su valor no depende del documento de identidad ni del correo, de forma que cambios en esos datos no rompen la referencialidad. Es el eje para reportes de recurrencia, cartera y segmentación comercial. Debe preservarse inalterado para mantener la trazabilidad legal y operativa a lo largo del tiempo. 
	[nombre] varchar(50) NOT NULL,	-- Primer componente del nombre legal o comercial mostrado en documentos y reportes. Debe respetar convenciones de capitalización para uniformidad. Se valida como no vacío y con caracteres alfabéticos/espacios para mejorar calidad del dato. Se usa en búsquedas y listados operativos. Complementa a “apellido” en clientes naturales.
	[apellido] varchar(50) NULL,	-- Atributo que complementa la identificación nominal en clientes naturales; puede omitirse en personas jurídicas. Ayuda a diferenciar homónimos y ordenar listados. Debe mantener coherencia ortográfica. Se usa en composición de nombre completo en reportes y comunicaciones. Su mantenimiento correcto mejora la precisión de segmentación.
	[telefono] varchar(20) NOT NULL,	-- Canal de contacto prioritario para coordinación de citas, notificaciones y cobranza. A nivel lógico, se conserva como texto para cubrir extensiones y signos “+”. Se recomienda longitud razonable (7–20). La calidad del teléfono impacta recordatorios y SLA de servicio. Puede auditarse contra eventos de comunicación.
	[email] varchar(100) NOT NULL,	-- Correo principal para notificaciones formales y facturación electrónica. Se define único para minimizar duplicados y suplantaciones. Debe ser válido y verificable; el formato se documenta con una expresión  a implementar en físico o aplicación. Es clave para segmentación y flujos automatizados. Cambios deben quedar registrados.
	[direccion] varchar(255) NOT NULL,	-- Domicilio fiscal o de correspondencia utilizado en documentos, entregas y visitas técnicas. Se pide completo para facilitar logística y cumplimiento legal. Cambios sustantivos deben conservar trazabilidad. Su consistencia habilita análisis geográficos y cruces con códigos postales. Impacta eficiencia de rutas y precisión de envíos.
	[ciudad] varchar(50) NOT NULL,	-- Localidad/municipio asociado al domicilio del cliente para segmentaciones y reportes territoriales. Debe ser coherente con la dirección registrada. Se utiliza para análisis de cobertura y planeación comercial. Facilita filtros en consultas y tableros. Mantener estandarización evita dispersiones por sinónimos.
	[tipo_cliente] varchar(20) NOT NULL,	-- Clasifica al cliente según su naturaleza para fines fiscales y operativos (p. ej., natural, juridico). Esta distinción afecta formatos de documentos y validaciones (uso/omisión de “apellido”). Debe provenir de lista controlada para evitar variantes. Es útil para segmentar estrategias comerciales y reportes. Se mantiene estable salvo reclasificación formal.
	[estado_cliente] varchar(50) NOT NULL,	-- Situación vigente del cliente (por catálogo controlado) que gobierna si puede generar nuevas transacciones. Cambios de estado deben auditarse con fecha/motivo. Es fundamental para cumplimiento de políticas comerciales/crediticias y bloqueos operativos. Se recomienda lista cerrada (p. ej., activo, inactivo, suspendido, bloqueado). Impacta directamente en procesos de facturación y OS.
	[fecha_registro] date NOT NULL,	-- Fecha de alta oficial en el sistema, usada para medir antigüedad y crecimiento de cartera. No debe ser futura; cambios se limitan a correcciones justificadas. Importa en promociones o beneficios ligados al tiempo de relación. Permite cortes históricos y auditorías. Es referencia para KPIs de captación.
	[id_tipo_cliente] int NULL,
	[id_estado_reg] int NULL
)
GO

CREATE TABLE [Tbl_DetalleFactura]
(
	[id_detalle] int NOT NULL,	-- Clave primaria que identifica cada línea facturada, ya sea servicio, repuesto o vehículo, con su cantidad y precio unitario fijados. Permite totalizaciones, notas de crédito y auditorías a nivel renglón sin ambigüedades. Garantiza trazabilidad entre el documento y los ítems efectivamente cobrados. Es esencial para análisis de rentabilidad y conciliaciones contra proformas u órdenes. Su valor permanece estable para preservar la historia fiscal.
	[id_factura] int NOT NULL,	-- Llave foránea al encabezado Factura, que agrupa todas las líneas del documento. Garantiza que no existan líneas fuera de un contexto fiscal válido y habilita la relación Factura 1 — DetalleFactura 1..*. Su obligatoriedad preserva la integridad referencial y simplifica totalizaciones, impuestos y cierres. La presencia de este vínculo es condición para cualquier registro del detalle. Es el conector natural hacia cartera y reportes de ventas.
	[id_vehiculo] int NULL,	-- Referencia opcional a Vehiculo cuando la línea represente venta de unidad. Es NULL si la línea es de servicio o repuesto, conservando la exclusividad. Su presencia respalda reportes por unidad vendida, cálculo de comisiones y auditoría de precios. Debe garantizarse por proceso que una misma unidad no se facture en dos documentos activos. La línea puede incorporar condiciones específicas de la transacción.
	[id_repuesto] int NULL,	-- Referencia opcional al catálogo Repuesto cuando la línea sea venta de pieza. Debe estar NULL si la línea es de servicio o vehículo, manteniendo la regla de exclusividad. Su uso habilita márgenes por producto, rotación y conciliación con inventario. El precio se congela en el detalle para trazabilidad y no debe volverse negativo por descuentos mal aplicados. Evita líneas genéricas sin artículo.
	[cantidad] int NOT NULL,	-- Cantidad facturada del ítem seleccionado; debe ser estrictamente mayor que 0 para evitar líneas nulas o devoluciones mal registradas. Impacta directamente el subtotal y los impuestos calculados. Cambios posteriores requieren documento fiscal de ajuste, no edición directa. En servicios suele ser horas/unidades de labor; en repuestos o vehículos, unidades físicas. Es clave para métricas de volumen y productividad.
	[precio_unitario] decimal(12,2) NOT NULL,	-- Importe por unidad a la fecha de emisión; debe ser = 0. Congelar el precio en el detalle preserva trazabilidad contable y evita recomputar por modificaciones de listas. Puede ser 0 en casos excepcionales (bonificaciones) documentados formalmente. Afecta márgenes, descuentos y percepciones/impuestos. Su modificación tras emitir la factura solo procede mediante notas de crédito.
	[subtotal] decimal(12,2) NOT NULL,	-- Importe de la línea calculado como cantidad × precio_unitario. Debe ser coherente y no negativo; idealmente se valida con un check lógico de igualdad. Sirve de base para totales, impuestos y estados de cuenta. Guardarlo explícitamente simplifica conciliaciones y auditorías, incluso si luego hay descuentos globales. Cambios requieren documentos de corrección para conservar el rastro fiscal.
	[id_servicio] int NULL	-- Referencia opcional al catálogo Servicio cuando la línea represente mano de obra. Se mantiene NULL en líneas de repuesto o vehículo para sostener la exclusividad del ítem. Congela el precio negociado en el momento de facturación, sin depender de cambios posteriores en tarifas. Permite análisis de ingresos por tipo de servicio y conciliación con lo planificado en Orden de Servicio cuando aplique. No debe apuntar a servicios inactivos.
)
GO

CREATE TABLE [Tbl_DetalleOrdenCompra]
(
	[id_detalle_orden_compra] int NOT NULL,	-- Identificador único de la línea del pedido de compra. Distingue inequívocamente el artículo, cantidad y precio pactados por renglón, permitiendo recepciones parciales y conciliación fina por ítem. Su estabilidad facilita auditorías de valorización y control de desviaciones frente a lo recibido y facturado. Constituye la unidad mínima de compromiso económico en la orden. No se modifica ni se reutiliza tras ser emitida.
	[id_orden_compra] int NOT NULL,	-- Llave foránea al encabezado OrdenCompra que agrupa todas las líneas del pedido. Asegura que ninguna línea exista fuera del contexto de una orden válida y habilita la relación 1:N (una OC tiene muchas líneas). La obligatoriedad preserva la integridad referencial y simplifica reportes por documento. Es fundamental para cierres, recepciones parciales y valorización.
	[id_repuesto] int NOT NULL,	-- Identifica el Repuesto específico solicitado en esta línea. Define la unidad de compra y el objeto sobre el que se aplican cantidad y precio. Su presencia evita líneas genéricas sin artículo y asegura que la compra sea conciliable con inventario. Es clave para análisis por ítem, negociación de costos y control de catálogos. La FK impide referencias a repuestos inexistentes o inactivos.
	[cantidad] int NOT NULL,	-- Cantidad comprometida para el repuesto en esta línea. Debe ser estrictamente > 0 para evitar pedidos nulos o negativos. Su valor impacta la planificación de recepciones, el cálculo de subtotales y la generación de alertas de sobrepedido. Cambios posteriores requieren autorización y pueden afectar la conciliación contra la factura del proveedor. Es un dato crítico para cobertura y rotación.
	[precio_unitario] decimal(10,2) NOT NULL,	-- Precio negociado por unidad del repuesto en esta línea, en la moneda operativa del sistema. Debe ser = 0; si es 0, se trata de cortesía o bonificación documentada. Fijarlo en el detalle congela la condición económica del pedido, aún si la lista del proveedor cambia. Afecta márgenes y valorizaciones; su modificación requiere proceso controlado.
	[subtotal] decimal(12,2) NOT NULL	-- Importe de la línea al momento del pedido, idealmente igual a cantidad × precio_unitario. Se guarda para trazabilidad contable, conciliaciones y comparación contra la factura del proveedor. No debe ser negativo. Si se recalcula por descuentos o cargos, el cambio debe justificarse y conservar rastro. Es base para totalizar la OC y sus reportes.
)
GO

CREATE TABLE [Tbl_Empleado]
(
	[id_empleado] int NOT NULL,	-- Identificador técnico único del empleado, usado como clave primaria y llave de enlace hacia todos los documentos que requieren traza de responsable. Debe ser positivo, no reutilizable y estable en el tiempo para preservar auditoría. Su naturaleza sustitutiva evita depender de datos personales o del cargo, que pueden cambiar. Es el ancla de integridad referencial en relaciones 1:N con procesos de emisión y ejecución.
	[nombre] varchar(50) NOT NULL,	-- Primer componente del nombre legal del empleado, utilizado en encabezados, firmas y reportes internos. Se exige no vacío y con capitalización/alfanumérica coherente para asegurar uniformidad. Es clave para búsquedas y asignaciones operativas. Debe mantenerse actualizado si hay cambios administrativos. Complementa a apellido para construir el nombre completo visible en documentos.
	[apellido] varchar(50) NOT NULL,	-- Segundo componente del nombre legal, requerido para desambiguar homónimos en reportes, asignaciones de tarea y métricas. Se recomienda estandarizar ortografía y acentos para mantener consistencia. Su presencia mejora la claridad en tableros de seguimiento y en auditorías. No se admiten cadenas vacías; su gestión sigue las políticas de RR. HH.
	[telefono] varchar(20) NOT NULL,	-- Medio de contacto laboral/operativo para coordinación y notificaciones internas. Se guarda como texto para permitir prefijos internacionales y extensiones. Debe cumplir longitudes plausibles y mantenerse vigente. Es usado por supervisión para comunicación de incidentes o aprobaciones. Su calidad impacta tiempos de respuesta.
	[email] varchar(100) NOT NULL,	-- Correo corporativo de referencia para comunicaciones formales y accesos. Debe ser único para evitar conflictos de identidad y trazas ambiguas en emisión/ejecución. Se verifica formato mínimo (patrón @.*) a nivel lógico; validaciones más fuertes irán en aplicación o físico. Cambios exigen proceso controlado para no romper la vinculación histórica de documentos.
	[direccion] varchar(255) NOT NULL,	-- Domicilio administrativo del empleado (o sede) relevante para comunicaciones y cumplimiento de políticas internas. Debe registrarse con suficiente detalle para fines de RR. HH. y logística. Su mantenimiento actualizado evita incidencias en notificaciones formales. Contribuye a segmentaciones internas por ubicación cuando aplican. No se aceptan valores vacíos.
	[fecha_contratacion] date NOT NULL,	-- Fecha oficial de alta del empleado, usada para antigüedad, elegibilidad y ventanas de evaluación. No debe ser futura; modificaciones posteriores solo por corrección justificada. Se ocupa en cortes históricos y métricas de dotación. Aporta contexto temporal a la trazabilidad de documentos emitidos/ejecutados.
	[cargo] varchar(50) NOT NULL,	-- Rol/posición del empleado dentro de la organización (p. ej., asesor, cajero, técnico, comprador, jefe de taller). Sirve para políticas de permisos, segregación de funciones y reportes de productividad por rol. Debe provenir de una lista controlada para evitar variantes libres. Los cambios de cargo se registran por motivos administrativos y pueden afectar autorizaciones.
	[salario] decimal(12,2) NOT NULL,	-- Remuneración base del empleado expresada como valor numérico, utilizada para fines administrativos y de control interno. Debe registrarse en la misma moneda operativa del sistema y mantenerse actualizada conforme a movimientos de nómina autorizados. No se permiten valores negativos y su modificación requiere procedimiento formal que preserve trazabilidad (fecha y responsable). Este dato no se expone en documentos comerciales y se considera de acceso restringido según políticas internas. Se declara NOT NULL para evitar registros incompletos que afecten reportes y controles administrativos.
	[estado_empleado] varchar(20) NOT NULL,	-- Condición operativa del empleado (p. ej., activo, inactivo, suspendido), que gobierna si puede originar o ejecutar operaciones en el sistema. La lista debe ser cerrada y coherente con políticas internas. Cambios requieren justificación y quedan auditados. Su control evita emisiones/ejecuciones por personal no habilitado.
	[id_estado_reg] int NULL
)
GO

CREATE TABLE [Tbl_Factura]
(
	[id_factura] int NOT NULL,	-- Identificador técnico único del documento. Sirve como clave primaria y ancla para las relaciones con DetalleFactura y cobros. Es un valor numérico secuencial que no debe reutilizarse ni modificarse tras la emisión, ya que preserva la trazabilidad del documento y su rastro contable. La PK asegura unicidad y permite enlazar procesos fiscales, auditorías y correcciones futuras sin ambigüedad. Su estabilidad lo convierte en la base del registro histórico de facturación.
	[id_empleado] int NOT NULL,	-- Llave foránea que vincula la factura con el empleado responsable de su emisión. Permite identificar al colaborador autorizado para generar documentos, garantizando control interno y segregación de funciones. Facilita reportes de productividad, rendimiento y cumplimiento de metas comerciales. Su obligatoriedad asegura trazabilidad en auditorías y revisiones de cumplimiento. En caso de reasignaciones, se deben documentar formalmente.
	[observaciones] varchar(255) NULL,	-- Campo descriptivo opcional que permite registrar notas aclaratorias sobre el documento o condiciones particulares de la venta. No afecta el valor fiscal pero añade contexto operativo o comercial. Se utiliza para observaciones sobre métodos de pago, entregas o acuerdos específicos con el cliente. Su uso mejora la documentación del proceso de facturación.
	[id_cliente] int NOT NULL,	-- Llave foránea hacia la entidad Cliente, que identifica al titular del documento. Cada factura debe pertenecer a un cliente existente, evitando facturas sin receptor válido. Este vínculo mantiene integridad referencial y soporte para reportes de ventas, cobranzas y cartera. Su gestión adecuada es fundamental para cumplir obligaciones fiscales y análisis de recurrencia o comportamiento de clientes.
	[id_ordenServicio] int NULL,	-- Referencia opcional a la Orden de Servicio que originó la factura. Se deja NULL cuando la venta no proviene del taller. Permite conciliar el flujo operativo entre servicio ejecutado y cobro realizado, evitando doble facturación. Refuerza trazabilidad del ciclo operativo-financiero y apoya auditorías de eficiencia. Su existencia en el modelo lógico refleja la dependencia opcional sin forzar facturación por orden.
	[fecha_emision] date NOT NULL,	-- Fecha oficial de emisión del documento. Determina la vigencia del cobro, cálculo de impuestos y antigüedad en cuentas por cobrar. No puede ser futura ni posterior al cierre contable. Debe mantenerse congruente con el detalle y las transacciones de origen. Su control garantiza precisión en cortes de mes, reportes regulatorios y auditorías de cumplimiento fiscal.
	[monto_total] decimal(12,2) NOT NULL,	-- Monto total a pagar, resultado de sumar todos los subtotales de las líneas e impuestos aplicables. Debe ser = 0 y representar el valor fiscal del documento. Se congela al momento de emisión y solo puede modificarse mediante una nota de crédito o documento de ajuste. Es la base de los reportes de ventas, ingresos y análisis de facturación. Su precisión es vital para balances contables.
	[estado_pago] varchar(20) NOT NULL,	-- Refleja el estado actual de la factura (por ejemplo: ‘pendiente’, ‘pagada’, ‘anulada’). Controla las operaciones posibles sobre el documento y asegura cumplimiento del flujo contable. El campo debe aceptar solo valores válidos, definidos por política. Las transiciones de estado deben quedar registradas con fecha y responsable, garantizando trazabilidad total. Su consistencia es esencial para reportes financieros.
	[fecha_vencimiento] date NOT NULL,	-- Indica el límite de pago del documento. Se calcula según políticas de crédito (por ejemplo, 15 o 30 días después de emisión). Es esencial para gestionar la cartera y los indicadores de morosidad. La fecha no debe ser anterior a la de emisión. Controlar este valor asegura correcta periodificación y facilita reportes de antigüedad de saldos. Cambios posteriores solo deben realizarse con autorización.
	[id_estado_pago] int NULL,
	[id_metodo_pago] int NULL
)
GO

CREATE TABLE [Tbl_OrdenCompra]
(
	[id_orden_compra] int NOT NULL,	-- Identificador técnico único de la orden. Actúa como clave primaria estable y no reutilizable para preservar el rastro del ciclo completo (emisión, recepción, cierre o cancelación). Es el ancla para su detalle, recepciones y conciliaciones contra la factura del proveedor. Su estabilidad facilita auditorías, reportes y trazas de aprobación. No depende de numeraciones externas del proveedor.
	[id_proveedor] int NOT NULL,	-- Enlace al Proveedor al que se emite la orden. Garantiza que el pedido tenga un destinatario comercial válido y vigente, habilitando evaluaciones de cumplimiento por proveedor. Evita órdenes huérfanas y estandariza reportes de compras. Cambios posteriores requieren procedimiento controlado para no romper la historia. Es fundamental para negociar precios, plazos y garantías.
	[fecha_orden] date NOT NULL,	-- Fecha en que se genera la orden. No puede ser futura y fija el inicio del ciclo para plazos de entrega, vigencia de precios y cortes de gestión. Debe ser coherente con las recepciones y con la fecha de entrega pactada. Cambios posteriores se limitan a correcciones justificadas. Es base para análisis de tiempos de abastecimiento.
	[fecha_entrega] date NOT NULL,	-- Fecha prevista de entrega pactada con el proveedor. Debe ser igual o posterior a fecha_orden para conservar coherencia temporal. Sirve para seguimiento de cumplimiento, planificación de stock y priorización de trabajos dependientes. Si cambia, se recomienda registrar motivo y nueva promesa. Aporta información clave a indicadores de servicio del proveedor.
	[estado_orden] varchar(30) NOT NULL,	-- Situación actual del documento (por ejemplo: abierta, en_proceso, parcialmente_recibida, recibida, cerrada, cancelada). Controla qué acciones están permitidas (p. ej., no modificar líneas cuando esté cerrada). Los cambios de estado deben quedar auditados con fecha y responsable. Mantener una codificación consistente mejora KPIs de abastecimiento y cumplimiento.
	[total_orden] decimal(12,2) NOT NULL,	-- Importe total acordado al crear la OC, suma de sus líneas (precio×cantidad). Debe ser = 0 y quedar congelado para trazabilidad, aun si luego hay cambios con notas o enmiendas. Es base para compromisos de gasto, conciliación con la factura del proveedor y reportes de compras. Cualquier corrección debe dejar rastro.
	[observaciones] varchar(255) NULL,	-- Notas complementarias (condiciones especiales, acuerdos de garantías, instrucciones logísticas). No impacta cálculos, pero agrega contexto útil para recepción y auditoría. Debe usarse con criterio y mantenerse alineado a políticas de compras. Ideal para documentar cambios pactados.
	[id_empleado] int NOT NULL,	-- Identifica al empleado que crea o autoriza la orden. Aporta trazabilidad de responsabilidades y soporta segregación de funciones. Permite métricas de productividad y control de permisos del proceso de compras. Su obligatoriedad evita documentos sin responsable. Cualquier reasignación debe quedar auditada con fecha y motivo.
	[id_forma_envio] int NOT NULL,
	[id_metodo_pago] int NOT NULL,
	[id_estado_oc] int NULL
)
GO

CREATE TABLE [Tbl_OrdenServicio]
(
	[id_ordenServicio] int NOT NULL,	-- Identificador técnico único de la orden. Se declara como clave primaria estable y no reutilizable para preservar la historia del trabajo de taller. Sirve de ancla para el detalle operativo (si existe), para la factura que la tome como origen y para reportes de eficiencia. No se modifica tras la creación y permite auditorías completas del ciclo. Es imprescindible para relacionar evidencias (fotos, diagnósticos, aprobaciones) con un solo expediente.
	[id_vehiculo] int NOT NULL,	-- Referencia al Vehiculo que recibe el servicio. Asegura la construcción de un historial técnico por unidad y la conciliación de costos de preparación/mantenimiento. Debe apuntar a un vehículo vigente; la orden no debe cerrarse si la unidad cambia de situación en forma incompatible (según tus políticas). Este vínculo es base para análisis por unidad, campañas técnicas y métricas de calidad.
	[fecha_orden] date NOT NULL,	-- Fecha de apertura de la orden. No puede ser futura y es la referencia temporal para SLA, vencimientos de cotización y cortes operativos. Su corrección solo procede con justificación y rastro de responsable. Debe ser coherente con la cronología del vehículo y con la eventual factura de origen. Habilita reportes de antigüedad y capacidad del taller.
	[estado_orden] varchar(20) NOT NULL,	-- Estado del ciclo de la orden (ej.: abierta, cotizada, aprobada, en_proceso, cerrada, cancelada). Controla qué acciones son válidas en cada etapa (por ejemplo, no facturar líneas nuevas si está cerrada). Cambios de estado requieren guardar fecha y responsable para auditoría. Mantener un dominio cerrado evita etiquetas libres y asegura consistencia de tableros y KPIs.
	[observaciones] varchar(255) NULL,	-- Campo opcional para notas de diagnóstico, autorizaciones o condiciones particulares del trabajo. No afecta cálculos, pero aporta contexto operativo y comercial. Debe usarse con criterios objetivos (no sustituye evidencias formales). Su mantenimiento adecuado facilita auditorías y atención posventa. Puede contener referencias a anexos o documentos externos.
	[id_cliente] int NULL,	-- Llave foránea al Cliente titular de la orden. Garantiza que el trabajo esté asociado a una persona o entidad válida para autorizaciones, comunicaciones y facturación posterior. Su obligatoriedad evita órdenes huérfanas y habilita reportes de recurrencia por cliente. Cambios posteriores (p. ej., traspaso) deben ser excepcionales y quedar auditados. Es clave para el cumplimiento legal y la trazabilidad comercial.
	[id_empleado] int NOT NULL,	-- Identifica al empleado (asesor/técnico responsable) que abre o gestiona la orden. Permite mediciones de productividad, control de cargas de trabajo y segregación de funciones. Es obligatorio para auditar responsabilidades y autorías de cambios. Reasignaciones deben documentarse con fecha y motivo, preservando trazabilidad.
	[id_estado_os] int NOT NULL
)
GO

CREATE TABLE [Tbl_OrdenServicioDetalle]
(
	[id_ordendetalle] int NOT NULL,	-- Identificador único de cada línea asociada al encabezado de la orden de servicio. Permite distinguir con precisión el ítem planificado (servicio o repuesto), su cantidad y su precio unitario congelado. Facilita aprobaciones, conciliaciones con la factura y análisis de desviaciones entre lo presupuestado y lo ejecutado. Aporta granularidad para auditorías y cálculos de rentabilidad por concepto. Su valor es inmutable tras la creación de la línea.
	[cantidad] int NOT NULL,	-- Cantidad planificada para el ítem seleccionado; debe ser > 0 para impedir líneas nulas o negativas. En servicios suele representar horas/unidades de labor; en repuestos, unidades físicas. Impacta el costo estimado de la orden y las comparaciones contra lo ejecutado y facturado. Cambios tras la aprobación exigen autorización documentada. Es un dato crítico para planificación y control.
	[id_ordenServicio] int NOT NULL,	-- Llave foránea al encabezado OrdenServicio que agrupa todas las líneas. Asegura que ninguna línea exista fuera del contexto de una orden válida y habilita la relación OrdenServicio 1 — OrdenServicioDetalle 1..*. Este vínculo es indispensable para totalizaciones, aprobación por bloque y posterior conciliación con la facturación. Evita “líneas sueltas” sin expediente operativo.
	[precio_unitario] decimal(12,2) NOT NULL,	-- Precio negociado por unidad a nivel de línea. Debe ser = 0; si es 0, se trata de cortesía/bonificación aprobada. Fijarlo aquí guarda la condición económica aprobada de la OS y facilita conciliaciones posteriores con la factura. Afecta directamente los totales de la orden y su rentabilidad estimada. Modificaciones posteriores requieren rastro de responsable y motivo.
	[id_servicio] int NULL,	-- Referencia al catálogo Servicio cuando la línea es de mano de obra. Debe permanecer NULL si la línea es de repuesto, cumpliendo la exclusividad por fila. Congelar aquí el precio de referencia evita recálculos si cambian tarifas después de la aprobación. Permite análisis de tiempos/costos por concepto y trazabilidad hacia la ejecución real. No debe apuntar a servicios inactivos.
	[id_repuesto] int NULL	-- Referencia al catálogo Repuesto cuando la línea corresponde a una pieza. Se mantiene NULL si la línea es de servicio, preservando la exclusividad. El uso correcto de esta FK habilita control de disponibilidad, costos y conciliación con compras/stock. Evita líneas genéricas sin artículo específico y mejora KPIs de rotación y margen. No debe apuntar a repuestos inactivos.
)
GO

CREATE TABLE [Tbl_Proveedor]
(
	[id_proveedor] int NOT NULL,	-- Identificador técnico único que distingue de forma inequívoca a cada proveedor registrado en el sistema. Se utiliza como clave primaria y como punto de referencia para relaciones con órdenes de compra y control de pagos. No debe repetirse ni alterarse tras su asignación para preservar trazabilidad histórica. Garantiza la integridad referencial y la consistencia de las operaciones. Es un campo obligatorio y su generación debe ser controlada o automática para evitar errores humanos.
	[nombre] varchar(150) NOT NULL,	-- Contiene la razón social o nombre comercial del proveedor, utilizado en reportes, contratos y documentos fiscales. Es obligatorio, y debe coincidir con la denominación legal registrada en la documentación del proveedor. Su correcta escritura asegura la identificación exacta del proveedor y evita duplicados. Los registros deben mantenerse uniformes para facilitar búsquedas, auditorías y evaluaciones.
	[codigo_postal] varchar(10) NOT NULL,	-- Código postal asociado a la dirección del proveedor, utilizado para fines de localización, correspondencia y reportes estadísticos. Debe cumplir formato numérico o alfanumérico dependiendo del país. Este dato complementa la información geográfica del proveedor y facilita integraciones con sistemas externos de logística.
	[contacto_principal] varchar(100) NOT NULL,	-- Nombre de la persona de contacto responsable de la comunicación directa con la empresa. Es esencial para agilizar cotizaciones, reclamos o consultas. Este dato permite identificar a la persona encargada de responder en nombre del proveedor y facilita la coordinación operativa. Debe mantenerse actualizado para garantizar la efectividad de los procesos de compra.
	[tipo_proveedor] varchar(50) NOT NULL,	-- Clasifica al proveedor según su origen o alcance, distinguiendo entre local e internacional. Esta información determina el tratamiento logístico, fiscal y aduanero que se aplicará en cada compra. Su valor debe provenir de un conjunto controlado para mantener coherencia entre registros. Es un campo clave para reportes de gestión y cumplimiento normativo.
	[fecha_registro] date NOT NULL,	-- Fecha en que el proveedor fue registrado o actualizado en el sistema. No puede ser futura y se usa para cálculos de antigüedad, vigencia contractual y control de auditorías. Su mantenimiento correcto garantiza reportes históricos confiables. Este campo refuerza la trazabilidad del maestro de proveedores.
	[telefono] varchar(20) NOT NULL,	-- Número telefónico principal para contacto operativo o comercial. Se define como texto para permitir formatos internacionales, prefijos y extensiones. Es esencial para la comunicación efectiva en procesos de compras y seguimiento logístico. Debe tener longitud válida (entre 7 y 20 caracteres) y actualizarse cuando cambie la información del proveedor. No se permiten valores vacíos o inconsistentes.
	[email] varchar(100) NOT NULL,	-- Dirección de correo principal del proveedor para correspondencia formal y envío de órdenes o facturas electrónicas. Debe tener formato válido (%@%.%) y ser único en la base de datos. Permite comunicación eficiente y trazabilidad documental. Es un campo obligatorio, ya que la mayoría de los procesos de compra utilizan comunicación digital. Cualquier cambio requiere verificación previa para mantener la integridad del registro.
	[direccion] varchar(255) NOT NULL,	-- Domicilio físico o fiscal del proveedor, necesario para procesos logísticos, auditorías y validación de documentación legal. Debe ser completo, actual y verificable. Este dato permite segmentar la ubicación geográfica de los proveedores y facilita reportes por región. La ausencia o inexactitud del dato puede afectar la entrega o validación de pedidos.
	[ciudad] varchar(50) NOT NULL,	-- Nombre de la ciudad donde se ubica el proveedor o su sede principal. Es fundamental para la planificación de entregas y análisis de cobertura geográfica. Su consistencia es importante para cálculos de tiempos de entrega y reportes logísticos. La información debe mantenerse estandarizada y sin abreviaturas no oficiales.
	[estado_proveedor] varchar(50) NOT NULL,	-- Define la situación actual del proveedor dentro del sistema. Solo puede tomar valores como “activo”, “inactivo” o “bloqueado”, reflejando su disponibilidad para recibir órdenes. Este campo permite controlar las operaciones y evitar transacciones con proveedores suspendidos. Cambios en el estado deben quedar documentados para conservar trazabilidad.
	[id_estado_reg] int NULL
)
GO

CREATE TABLE [Tbl_Repuesto]
(
	[id_repuesto] int NOT NULL,	-- Identificador único del artículo de inventario, independiente de códigos comerciales o descripciones. Permite enlazar compras, consumo planificado/real y ventas sin ambigüedad, aun si cambian nombres o codificaciones. Es esencial para control de stock, rotación y márgenes por ítem. Garantiza consistencia en conciliaciones entre abastecimiento, taller y facturación. Debe conservarse inmutable para mantener la historia de costos y movimientos.
	[codigo_repuesto] varchar(100) NOT NULL,	-- Código comercial legible usado en catálogos, etiquetas y documentos externos; puede corresponder al SKU interno o al código del proveedor normalizado. Su unicidad evita duplicidades de publicación y reduce errores en picking, compras y ventas. Debe definirse siguiendo una convención estable (por ejemplo, prefijos por familia). Cambios requieren procedimiento controlado para no romper referencias en sistemas satélite. Es clave para búsquedas rápidas en mostrador y en almacén.
	[nombre] varchar(100) NOT NULL,	-- Denominación comercial del repuesto, utilizada en listas de precios, consultas y documentos. Debe ser clara, sin abreviaturas ambiguas, y mantener capitalización uniforme para mejorar búsquedas. Conviene incluir rasgos diferenciales (capacidad, tamaño o serie) para distinguir variantes cercanas. Es base para catálogos y publicaciones a clientes. No se admiten cadenas vacías ni nombres genéricos que induzcan a error.
	[descripcion] varchar(255) NULL,	-- Detalle ampliado del artículo con especificaciones, compatibilidades o notas de uso. Aunque opcional, mejora la precisión de ventas y evita devoluciones por selección incorrecta. Debe mantenerse coherente con fichas técnicas del proveedor. Se recomienda evitar lenguaje promocional y enfocarse en características objetivas. Útil en integraciones con comercio electrónico o soporte técnico.
	[precio_unitario] decimal(10,2) NOT NULL,	-- Precio vigente por unidad a la fecha de alta o última actualización. Debe ser = 0 y expresarse en la moneda operativa del sistema. Cuando cambie el precio, se debe conservar rastro de vigencia (histórico) en el físico o en un módulo de listas/tarifas; a nivel lógico se congela en documentos de venta/compra para trazabilidad. Es insumo para márgenes, ofertas y val
	[stock_actual] int NOT NULL,	-- Cantidad disponible en inventario físico/contable. No puede ser negativa; representa existencias listas para venta o consumo. Debe actualizarse por entradas, salidas y ajustes autorizados, manteniendo conciliación con compras y ventas. Su valor es crítico para promesas de entrega y planificación de compras. Participa en alertas de ruptura cuando cae por debajo del mínimo.
	[estado_repuesto] varchar(20) NOT NULL,	-- Estatus operativo que define su disponibilidad (ej.: activo, inactivo, descontinuado). Controla si puede figurar en compras o ventas y si admite movimientos. Cambios de estado deben quedar justificados (fin de vida, sustitución, error de alta). Previene selección de ítems obsoletos en documentos. Es fundamental para higiene del catálogo y cumplimiento de políticas de producto.
	[stock_minimo] int NOT NULL,	-- Umbral inferior recomendado para reabastecimiento. No debe ser negativo y, por política, suele ser = 0. No se impone que stock_actual = stock_minimo como constraint duro (para permitir detectar quiebres); más bien se usa para alertar a compras. Sustenta reportes de puntos de pedido, cobertura y rotación. Ajustes requieren revisión de demanda y tiempo de reposición.
	[id_proveedor] int NOT NULL,	-- Llave foránea conceptual al proveedor principal del repuesto. Garantiza que cada artículo tenga una fuente de suministro responsable para compras, garantías y consultas técnicas. Su mantenimiento permite evaluar desempeño por proveedor y negociar condiciones. No debe apuntar a registros inactivos o bloqueados. En el físico se implementa como FK a Proveedor(id_proveedor).
	[fecha_ingreso] date NOT NULL,	-- Fecha de alta del repuesto en el sistema (o de su última configuración inicial). No debe ser futura; sirve para cortes históricos, análisis de antigüedad del catálogo y ventanas de promoción. Cambios posteriores solo por corrección con evidencia. Se utiliza además para auditorías de creación y actualización del maestro.
	[ubicacion_almacen] varchar(100) NOT NULL,	-- Referencia de localización interna (pasillo, estante, bin) que facilita picking y conteos cíclicos. Debe seguir una nomenclatura establecida para evitar ambigüedades. Su precisión reduce tiempos operativos y errores de despacho. Cambios de layout deben acompañarse de actualización masiva controlada. Evita búsquedas manuales y pérdidas.
	[categoria] varchar(50) NOT NULL,	-- Clasificación del repuesto por familia o línea de producto (ej.: frenos, filtros, suspensión). Debe provenir de un conjunto controlado para asegurar consistencia analítica y reglas de precios/bonificaciones por familia. La categoría correcta facilita reabastecimiento, organización de almacén y reportes de rotación. Impacta agrupaciones y dashboards de abastecimiento.
	[id_estado_rep] int NULL,
	[id_categoria_rep] int NULL
)
GO

CREATE TABLE [Tbl_Servicio]
(
	[id_servicio] int NOT NULL,	-- Identificador técnico único del servicio. Se usa como clave primaria y ancla de todas las referencias desde OrdenServicioDetalle y DetalleFactura. No se reutiliza ni se modifica tras su creación, preservando trazabilidad histórica de tarifas y políticas. Permite auditorías y conciliaciones por concepto. Su estabilidad evita depender de cambios en el nombre comercial.
	[requiere_repuesto] bit NOT NULL,	-- Indica si la ejecución requiere repuestos (ej.: 'si'/'no'). Esta bandera guía la planificación de materiales, evita proformas incompletas y posibilita validaciones de stock. Debe estar alineada con el alcance definido en el catálogo. Cambios implican revisar procedimientos asociados. Mejora la coherencia entre OS/Factura y consumo real.
	[nivel_dificultad] varchar(50) NOT NULL,	-- Clasificación operativa del esfuerzo (ej.: 'baja', 'media', 'alta'). Se usa para asignar técnicos, estimar tiempos adicionales o aplicar recargos según política. Mantener un dominio cerrado asegura homogeneidad analítica y evita etiquetas libres. Es base para métricas de productividad y para capacitación. Cambios requieren consenso del área técnica.
	[fecha_creacion] date NOT NULL,	-- Fecha en que el servicio fue incorporado al catálogo. No debe ser futura. Es útil para cortes históricos, auditorías y análisis de vigencia de tarifas. Cambios posteriores se limitan a correcciones justificadas. Ayuda a reconstruir contextos cuando se comparan cotizaciones antiguas.
	[observaciones] varchar(255) NULL,	-- Notas adicionales, condiciones particulares o advertencias operativas. No afecta cálculos pero aporta contexto de ejecución y comercial. Debe usarse con criterio y mantenerse consistente con políticas. Útil para aclaraciones internas o mensajes en documentos.
	[nombre] varchar(50) NOT NULL,	-- Denominación comercial del servicio. Debe ser clara, específica y sin abreviaturas ambiguas para facilitar búsquedas y lectura en documentos. Es la etiqueta visible en cotizaciones y facturas, por lo que conviene mantener normas de estilo y capitalización. Evita términos genéricos que se confundan con otros servicios. Es crítico para reportes y para diferenciar variantes similares.
	[descripcion] varchar(255) NULL,	-- Detalle explicativo del alcance, pasos o condiciones del servicio. Aunque opcional, mejora la precisión de ventas y reduce reclamos por expectativas incorrectas. Debe mantenerse técnica y objetivamente, sin lenguaje promocional. Sirve como apoyo al personal nuevo y para documentación de procesos. Ayuda en integraciones con portales o apps.
	[costo] decimal(10,2) NOT NULL,	-- Precio de lista de la mano de obra (importe por unidad) vigente a la fecha de creación. Debe ser = 0 y se usa como referencia para proformas; el valor efectivo se congela en OS/Factura. Las actualizaciones requieren procedimiento controlado para preservar el rastro de cambios. Impacta márgenes y análisis de rentabilidad. Su correcta captura es esencial para KPIs comerciales.
	[duracion_horas] int NOT NULL,	-- Estimación de horas/persona requeridas. Debe ser = 0; si se usa planificación, sirve para asignación de recursos y citas. No representa la duración real ejecutada, que puede variar por diagnóstico; sin embargo, fija expectativas y soporta promesas de entrega. En dashboards, ayuda a medir precisión de la planificación y productividad. Cambios requieren revisión del proceso.
	[garantia_meses] int NOT NULL,	-- Meses de garantía ofrecidos por el servicio. Debe ser = 0 y alinearse con la política comercial y legal vigente. Un valor de cero indica que no aplica garantía adicional. Su registro uniforme reduce disputas y facilita posventa. Afecta comunicaciones a cliente y hojas de trabajo.
	[id_nivel] int NULL
)
GO

CREATE TABLE [Tbl_Vehiculo]
(
	[id_vehiculo] int NOT NULL,	-- Clave primaria que distingue cada unidad del inventario o taller, independientemente de placa o número de chasis. Asegura la construcción de un historial técnico por vehículo y su correcta vinculación con órdenes de servicio y ventas. Permite auditar cambios de estado (disponible, reservado, vendido) sin perder continuidad. Es fundamental para reportes por unidad, campañas técnicas y trazabilidad comercial. Su valor no se recicla ni se altera tras la creación.
	[placa] varchar(10) NULL,	-- Columna textual que almacena la matrícula del vehículo cuando exista; se permite NULL para unidades aún no registradas. Debe ser única entre valores informados para eliminar colisiones de identidad y facilitar búsquedas exactas. Conviene normalizar mayúsculas/espacios en la aplicación para mantener uniformidad de captura. Su estabilidad respalda controles legales y consultas operativas de taller. Cambios en este campo deben ser poco frecuentes y registrados para conservar el rastro de modificaciones.
	[numero_chasis] varchar(17) NOT NULL,	-- Identificador de chasis/VIN que distingue inequívocamente la unidad dentro del sistema. Se define NOT NULL y UNIQUE para impedir duplicidades y reforzar controles antifraude. Es fundamental para conciliaciones con documentos de transporte, compra y venta, así como para verificaciones técnicas. La longitud y el formato se validan en la aplicación para evitar capturas incompletas o erróneas. Su estabilidad asegura correspondencia entre inventario físico y registros del sistema.
	[marca] varchar(50) NOT NULL,	-- Nombre del fabricante capturado como texto y requerido para clasificar y filtrar. Debe escribirse de forma consistente siguiendo una lista operativa de valores aceptados para mantener calidad de reportes. Su presencia facilita análisis de rotación y comparativas comerciales por fabricante. También contribuye a búsquedas rápidas por parte de usuarios no técnicos. No se permiten cadenas vacías; debe existir un valor informativo.
	[modelo] varchar(50) NOT NULL,	-- Designación del modelo de la unidad, requerida para segmentaciones y consultas combinadas con marca y año. Se almacena como texto y debe respetar una nomenclatura uniforme para evitar duplicados por variaciones ortográficas. Interviene en reportes de demanda y en publicaciones comerciales del inventario. Su captura correcta facilita comparación entre configuraciones en oferta. No se aceptan valores en blanco ni marcadores genéricos.
	[anio] int NOT NULL,	-- Año de fabricación o del modelo representado como número entero. Debe ser NOT NULL y cumplir un rango razonable documentado a nivel lógico (por ejemplo, desde 1980 hasta el año actual+1) para prevenir valores fuera de contexto. Su validez incide en tasaciones, garantías y comparativas internas por generación. No se permiten ceros ni negativos; se espera un entero coherente con la realidad del negocio. Las consultas por año combinadas con marca y modelo son frecuentes.
	[color] varchar(30) NOT NULL,	-- Color principal de la carrocería capturado como texto y requerido para distinguir unidades en inventario. Se sugiere utilizar un conjunto operativo de valores aceptados para evitar sinónimos o variantes que compliquen la analítica. Es útil para búsquedas por preferencias del cliente y para logística de exhibición. No se aceptan cadenas vacías, de modo que el valor represente un atributo real del vehículo. Favorece reportes estandarizados y consistentes.
	[combustible] varchar(30) NOT NULL,	-- Tipo de combustible expresado en texto y obligatorio en el registro. Debe restringirse a un conjunto cerrado de valores operativos (por ejemplo: 'gasolina', 'diesel', 'hibrido', 'electrico') para asegurar uniformidad. Este dominio textual facilita filtros y evita divergencias semánticas en reportes. No se permiten cadenas vacías ni valores no listados. Su consistencia simplifica segmentaciones y comparativas internas.
	[kilometraje] int NOT NULL,	-- Lectura del odómetro expresada como número entero no negativo. Se documenta un CHECK lógico que impida valores menores a cero para mantener integridad. Este dato interviene en consultas de clasificación de unidades y comunicaciones operativas. No se exige un máximo, pero la validación de plausibilidad se maneja a nivel de aplicación. Actualizaciones posteriores deben conservar coherencia con el historial de la unidad.
	[transmision] varchar(30) NOT NULL,	-- Tipo de transmisión, almacenado como texto obligatorio con valores acotados operativamente (por ejemplo: 'manual', 'automatica', 'cvt', 'secuencial'). La restricción a un conjunto cerrado previene variantes innecesarias y facilita la estandarización de consultas. No se aceptan cadenas vacías ni valores fuera de la lista definida por el negocio. Este dato contribuye a búsquedas y publicaciones uniformes. Se emplea en reportes de oferta y preferencias.
	[categoria] varchar(50) NOT NULL,	-- Clasificación comercial del vehículo almacenada como texto obligatorio, restringida a una lista operativa (por ejemplo: 'sedan', 'suv', 'pickup', 'hatchback', 'comercial'). La limitación a valores definidos asegura calidad analítica y comparabilidad entre períodos. No se aceptan cadenas vacías ni etiquetas improvisadas que rompan la consistencia. Se usa para segmentar inventario y medir rotación por familia. Facilita la preparación de listados comerciales coherentes.
	[precio_venta] decimal(12,2) NOT NULL,	-- Precio de referencia de la unidad expresado como número, requerido y no negativo. Se documenta un CHECK a nivel lógico que impida capturas inferiores a cero para preservar coherencia económica. Este valor participa en consultas de valorización, márgenes y reportes de oferta. No requiere valores por defecto y puede actualizarse bajo control de la operación. Conviene revisar límites máximos razonables en la aplicación para evitar errores de digitación.
	[id_estado_vehiculo] int NOT NULL,	-- Estado comercial actual del vehículo y obligatorio para controlar disponibilidad. Se define un CHECK de lista cerrada (por ejemplo: 'disponible', 'reservado', 'vendido') para impedir estados no contemplados. No se admiten cadenas vacías ni variantes fuera del conjunto. Este dato es clave en paneles y filtros de inventario. Las transiciones entre estados deben ser consistentes con los procesos del negocio.
	[fecha_ingreso] date NOT NULL,	-- Fecha de alta en inventario registrada como tipo fecha y requerida. Se documenta un CHECK lógico que impida fechas futuras respecto al día de captura, preservando la cronología de eventos. Es relevante para reportes de antigüedad de stock y planificación de ventas. No requiere valor por defecto salvo que la operación lo disponga expresamente. Su modificación posterior debe ser excepcional y controlada.
	[id_combustible] int NULL,
	[id_transmision] int NULL,
	[id_categoria_veh] int NULL
)
GO

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE [cat_categoria_repuesto] 
 ADD CONSTRAINT [PK_cat_categoria_repuesto]
	PRIMARY KEY CLUSTERED ([id_categoria_rep] ASC)
GO

ALTER TABLE [cat_categoria_repuesto] 
 ADD CONSTRAINT [UQ_cat_categoria_repuesto_Nombre] UNIQUE NONCLUSTERED ([nombre] ASC)
GO

ALTER TABLE [cat_categoria_repuesto] 
 ADD CONSTRAINT [CK_cat_categoria_repuesto_EstadoBit] CHECK (es_activo IN (0,1))
GO

ALTER TABLE [cat_categoria_repuesto] 
 ADD CONSTRAINT [CK_cat_categoria_repuesto_NombreNotBlank] CHECK (LEN(LTRIM(RTRIM(nombre))) > 0)
GO

ALTER TABLE [cat_categoria_vehiculo] 
 ADD CONSTRAINT [PK_cat_categoria_vehiculo]
	PRIMARY KEY CLUSTERED ([id_categoria_veh] ASC)
GO

ALTER TABLE [cat_categoria_vehiculo] 
 ADD CONSTRAINT [UQ_cat_categoria_vehiculo_Nombre] UNIQUE NONCLUSTERED ([nombre] ASC)
GO

ALTER TABLE [cat_categoria_vehiculo] 
 ADD CONSTRAINT [CK_cat_categoria_vehiculo_EstadoBit] CHECK (es_activo IN (0,1))
GO

ALTER TABLE [cat_categoria_vehiculo] 
 ADD CONSTRAINT [CK_cat_categoria_vehiculo_NombreNotBlank] CHECK (LEN(LTRIM(RTRIM(nombre))) > 0)
GO

ALTER TABLE [cat_combustible] 
 ADD CONSTRAINT [PK_cat_combustible]
	PRIMARY KEY CLUSTERED ([id_combustible] ASC)
GO

ALTER TABLE [cat_combustible] 
 ADD CONSTRAINT [CK_cat_combustible_EstadoBit] CHECK (es_activo IN (0,1))
GO

ALTER TABLE [cat_combustible] 
 ADD CONSTRAINT [CK_cat_combustible_NombreNotBlank] CHECK (LEN(LTRIM(RTRIM(nombre))) > 0)
GO

ALTER TABLE [cat_combustible] 
 ADD CONSTRAINT [CK_cat_combustible_NombreLista] CHECK (nombre IN (N'gasolina',N'diésel',N'híbrido',N'eléctrico'))
GO

CREATE NONCLUSTERED INDEX [UQ_cat_combustible_Nombre] 
 ON [cat_combustible] ([nombre] ASC)
GO

ALTER TABLE [cat_estado_orden_compra] 
 ADD CONSTRAINT [PK_cat_estado_orden_compra]
	PRIMARY KEY CLUSTERED ([id_estado_oc ] ASC)
GO

ALTER TABLE [cat_estado_orden_compra] 
 ADD CONSTRAINT [UQ_cat_estado_orden_compra_Nombre] UNIQUE NONCLUSTERED ([nombre] ASC)
GO

ALTER TABLE [cat_estado_orden_compra] 
 ADD CONSTRAINT [CK_cat_estado_orden_compra_EstadoBit] CHECK (es_activo IN (0,1))
GO

ALTER TABLE [cat_estado_orden_compra] 
 ADD CONSTRAINT [CK_cat_estado_orden_compra_NombreNotBlank] CHECK (LEN(LTRIM(RTRIM(nombre))) > 0)
GO

ALTER TABLE [cat_estado_orden_compra] 
 ADD CONSTRAINT [CK_cat_estado_orden_compra_NombreLista] CHECK (nombre IN (N'abierta',N'en_proceso',N'parcialmente_recibida',N'recibida',N'cerrada',N'cancelada'))
GO

ALTER TABLE [cat_estado_orden_servicio] 
 ADD CONSTRAINT [PK_cast_orden_servicio]
	PRIMARY KEY CLUSTERED ([id_estado_os] ASC)
GO

ALTER TABLE [cat_estado_orden_servicio] 
 ADD CONSTRAINT [UQ_cat_estado_orden_servicio_Nombre] UNIQUE NONCLUSTERED ([nombre] ASC)
GO

ALTER TABLE [cat_estado_orden_servicio] 
 ADD CONSTRAINT [CK_cat_estado_orden_servicio_EstadoBit] CHECK (es_activo IN (0,1))
GO

ALTER TABLE [cat_estado_orden_servicio] 
 ADD CONSTRAINT [CK_cat_estado_orden_servicio_NombreNotBlank] CHECK (LEN(LTRIM(RTRIM(nombre))) > 0)
GO

ALTER TABLE [cat_estado_orden_servicio] 
 ADD CONSTRAINT [CK_cat_estado_orden_servicio_NombreLista] CHECK (nombre IN (N'abierta',N'en_proceso',N'cerrada',N'cancelada'))
GO

ALTER TABLE [cat_estado_pago] 
 ADD CONSTRAINT [PK_cast_estado_pago]
	PRIMARY KEY CLUSTERED ([id_estado_pago] ASC)
GO

ALTER TABLE [cat_estado_pago] 
 ADD CONSTRAINT [UQ_cat_estado_pago_Nombre] UNIQUE NONCLUSTERED ([nombre] ASC)
GO

ALTER TABLE [cat_estado_pago] 
 ADD CONSTRAINT [CK_cat_estado_pago_EstadoBit] CHECK (es_activo IN (0,1))
GO

ALTER TABLE [cat_estado_pago] 
 ADD CONSTRAINT [CK_cat_estado_pago_NombreNotBlank] CHECK (LEN(LTRIM(RTRIM(nombre))) > 0)
GO

ALTER TABLE [cat_estado_pago] 
 ADD CONSTRAINT [CK_cat_estado_pago_NombreLista] CHECK (nombre IN (N'pendiente',N'pagado',N'anulado'))
GO

ALTER TABLE [cat_estado_registro] 
 ADD CONSTRAINT [PK_cat_estado_registro]
	PRIMARY KEY CLUSTERED ([id_estado_reg] ASC)
GO

ALTER TABLE [cat_estado_registro] 
 ADD CONSTRAINT [UQ_cat_estado_registro_Nombre] UNIQUE NONCLUSTERED ([nombre] ASC)
GO

ALTER TABLE [cat_estado_registro] 
 ADD CONSTRAINT [CK_cat_estado_registro_EstadoBit] CHECK (es_activo IN (0,1))
GO

ALTER TABLE [cat_estado_registro] 
 ADD CONSTRAINT [CK_cat_estado_registro_NombreNotBlank] CHECK (LEN(LTRIM(RTRIM(nombre))) > 0)
GO

ALTER TABLE [cat_estado_registro] 
 ADD CONSTRAINT [CK_cat_estado_registro_NombreLista] CHECK (nombre IN (N'activo',N'inactivo'))
GO

ALTER TABLE [cat_estado_repuesto] 
 ADD CONSTRAINT [PK_cat_estado_repuesto]
	PRIMARY KEY CLUSTERED ([id_estado_rep] ASC)
GO

ALTER TABLE [cat_estado_repuesto] 
 ADD CONSTRAINT [UQ_cat_estado_repuesto_Nombre] UNIQUE NONCLUSTERED ([nombre] ASC)
GO

ALTER TABLE [cat_estado_repuesto] 
 ADD CONSTRAINT [CK_cat_estado_repuesto_EstadoBit] CHECK (es_activo IN (0,1))
GO

ALTER TABLE [cat_estado_repuesto] 
 ADD CONSTRAINT [CK_cat_estado_repuesto_NombreNotBlank] CHECK (LEN(LTRIM(RTRIM(nombre))) > 0)
GO

ALTER TABLE [cat_estado_repuesto] 
 ADD CONSTRAINT [CK_cat_estado_repuesto_NombreLista] CHECK (nombre IN (N'activo',N'descontinuado',N'dañado'))
GO

ALTER TABLE [cat_estado_vehiculo] 
 ADD CONSTRAINT [PK_cast_estado_vehiculo]
	PRIMARY KEY CLUSTERED ([id_estado_vehiculo] ASC)
GO

ALTER TABLE [cat_estado_vehiculo] 
 ADD CONSTRAINT [UQ_cat_estado_vehiculo_Nombre] UNIQUE NONCLUSTERED ([nombre] ASC)
GO

ALTER TABLE [cat_estado_vehiculo] 
 ADD CONSTRAINT [CK_cat_estado_vehiculo_EstadoBit] CHECK (es_activo IN (0,1))
GO

ALTER TABLE [cat_estado_vehiculo] 
 ADD CONSTRAINT [CK_cat_estado_vehiculo_NombreNotBlank] CHECK (LEN(LTRIM(RTRIM(nombre))) > 0)
GO

ALTER TABLE [cat_estado_vehiculo] 
 ADD CONSTRAINT [CK_cat_estado_vehiculo_NombreLista] CHECK (nombre IN (N'disponible',N'reservado',N'vendido'))
GO

ALTER TABLE [cat_forma_envio] 
 ADD CONSTRAINT [PK_cat_forma_envio]
	PRIMARY KEY CLUSTERED ([id_forma_envio] ASC)
GO

ALTER TABLE [cat_forma_envio] 
 ADD CONSTRAINT [UQ_cat_forma_envio_Nombre] UNIQUE NONCLUSTERED ([nombre] ASC)
GO

ALTER TABLE [cat_forma_envio] 
 ADD CONSTRAINT [CK_cat_forma_envio_EstadoBit] CHECK (es_activo IN (0,1))
GO

ALTER TABLE [cat_forma_envio] 
 ADD CONSTRAINT [CK_cat_forma_envio_NombreNotBlank] CHECK (LEN(LTRIM(RTRIM(nombre))) > 0)
GO

ALTER TABLE [cat_forma_envio] 
 ADD CONSTRAINT [CK_cat_forma_envio_NombreLista] CHECK (nombre IN (N'retiro',N'mensajería',N'paquetería',N'transporte_propio'))
GO

ALTER TABLE [cat_metodo_pago] 
 ADD CONSTRAINT [PK_cat_metodo_pago]
	PRIMARY KEY CLUSTERED ([id_metodo_pago] ASC)
GO

ALTER TABLE [cat_metodo_pago] 
 ADD CONSTRAINT [UQ_cat_metodo_pago_Nombre] UNIQUE NONCLUSTERED ([nombre] ASC)
GO

ALTER TABLE [cat_metodo_pago] 
 ADD CONSTRAINT [CK_cat_metodo_pago_EstadoBit] CHECK (es_activo IN (0,1))
GO

ALTER TABLE [cat_metodo_pago] 
 ADD CONSTRAINT [CK_cat_metodo_pago_NombreNotBlank] CHECK (LEN(LTRIM(RTRIM(nombre))) > 0)
GO

ALTER TABLE [cat_metodo_pago] 
 ADD CONSTRAINT [CK_cat_metodo_pago_NombreLista] CHECK (nombre IN (N'contado',N'crédito',N'transferencia'))
GO

ALTER TABLE [cat_nivel_dificultad_servicio] 
 ADD CONSTRAINT [PK_cat_nivel_dificultad_servicio]
	PRIMARY KEY CLUSTERED ([id_nivel] ASC)
GO

ALTER TABLE [cat_nivel_dificultad_servicio] 
 ADD CONSTRAINT [UQ_cat_nivel_dificultad_servicio_Nombre] UNIQUE NONCLUSTERED ([nombre] ASC)
GO

ALTER TABLE [cat_nivel_dificultad_servicio] 
 ADD CONSTRAINT [CK_cat_nivel_dificultad_servicio_EstadoBit] CHECK (es_activo IN (0,1))
GO

ALTER TABLE [cat_nivel_dificultad_servicio] 
 ADD CONSTRAINT [CK_cat_nivel_dificultad_servicio_NombreNotBlank] CHECK (LEN(LTRIM(RTRIM(nombre))) > 0)
GO

ALTER TABLE [cat_nivel_dificultad_servicio] 
 ADD CONSTRAINT [CK_cat_nivel_dificultad_servicio_NombreLista] CHECK (nombre IN (N'básico',N'medio',N'avanzado'))
GO

ALTER TABLE [cat_tipo_cliente] 
 ADD CONSTRAINT [PK_cat_tipo_cliente]
	PRIMARY KEY CLUSTERED ([id_tipo_cliente] ASC)
GO

ALTER TABLE [cat_tipo_cliente] 
 ADD CONSTRAINT [UQ_cat_tipo_cliente_Nombre] UNIQUE NONCLUSTERED ([nombre] ASC)
GO

ALTER TABLE [cat_tipo_cliente] 
 ADD CONSTRAINT [CK_cat_tipo_cliente_EstadoBit] CHECK (es_activo IN (0,1))
GO

ALTER TABLE [cat_tipo_cliente] 
 ADD CONSTRAINT [CK_cat_tipo_cliente_NombreNotBlank] CHECK (LEN(LTRIM(RTRIM(nombre))) > 0)
GO

ALTER TABLE [cat_tipo_cliente] 
 ADD CONSTRAINT [CK_cat_tipo_cliente_NombreLista] CHECK (nombre IN (N'minorista',N'corporativo',N'distribuidor',N'interno'))
GO

ALTER TABLE [cat_transmision] 
 ADD CONSTRAINT [PK_cat_transmision]
	PRIMARY KEY CLUSTERED ([id_transmision] ASC)
GO

ALTER TABLE [cat_transmision] 
 ADD CONSTRAINT [UQ_cat_transmision_Nombre] UNIQUE NONCLUSTERED ([nombre] ASC)
GO

ALTER TABLE [cat_transmision] 
 ADD CONSTRAINT [CK_cat_transmision_EstadoBit] CHECK (es_activo IN (0,1))
GO

ALTER TABLE [cat_transmision] 
 ADD CONSTRAINT [CK_cat_transmision_NombreNotBlank] CHECK (LEN(LTRIM(RTRIM(nombre))) > 0)
GO

ALTER TABLE [cat_transmision] 
 ADD CONSTRAINT [CK_cat_transmision_NombreLista] CHECK (nombre IN (N'manual',N'automática',N'cvt'))
GO

ALTER TABLE [Tbl_Cliente] 
 ADD CONSTRAINT [PK_Cliente]
	PRIMARY KEY CLUSTERED ([id_cliente] ASC)
GO

ALTER TABLE [Tbl_Cliente] 
 ADD CONSTRAINT [UQ_Cliente_Email] UNIQUE NONCLUSTERED ([email] ASC)
GO

ALTER TABLE [Tbl_Cliente] 
 ADD CONSTRAINT [CHK_Cliente_Id_Positive] CHECK (id_cliente > 0)
GO

ALTER TABLE [Tbl_Cliente] 
 ADD CONSTRAINT [CHK_Cliente_Estado_Lista] CHECK (estado_cliente IN ('activo','inactivo','suspendido','bloqueado'))
GO

ALTER TABLE [Tbl_Cliente] 
 ADD CONSTRAINT [CHK_Cliente_Tipo_Lista] CHECK (tipo_cliente IN ('minorista','corporativo','distribuidor','interno'))
GO

ALTER TABLE [Tbl_Cliente] 
 ADD CONSTRAINT [CHK_Cliente_Telefono_Longitud] CHECK (LEN(telefono) BETWEEN 7 AND 20)
GO

ALTER TABLE [Tbl_Cliente] 
 ADD CONSTRAINT [CHK_Cliente_Email_Formato] CHECK (email LIKE '%@%.%')
GO

ALTER TABLE [Tbl_Cliente] 
 ADD CONSTRAINT [CHK_Cliente_Fecha_No_Futura] CHECK (fecha_registro <= GETDATE())
GO

CREATE NONCLUSTERED INDEX [IXFK_Tbl_Cliente_cat_estado_registro] 
 ON [Tbl_Cliente] ([id_estado_reg] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Tbl_Cliente_cat_tipo_cliente] 
 ON [Tbl_Cliente] ([id_tipo_cliente] ASC)
GO

ALTER TABLE [Tbl_DetalleFactura] 
 ADD CONSTRAINT [PK_DetalleFactura]
	PRIMARY KEY CLUSTERED ([id_detalle] ASC)
GO

ALTER TABLE [Tbl_DetalleFactura] 
 ADD CONSTRAINT [UQ_DetalleFactura_Factura_Servicio] UNIQUE NONCLUSTERED ([id_factura] ASC,[id_servicio] ASC)
GO

ALTER TABLE [Tbl_DetalleFactura] 
 ADD CONSTRAINT [UQ_DetalleFactura_Factura_Repuesto] UNIQUE NONCLUSTERED ([id_factura] ASC,[id_repuesto] ASC)
GO

ALTER TABLE [Tbl_DetalleFactura] 
 ADD CONSTRAINT [UQ_DetalleFactura_Factura_Vehiculo] UNIQUE NONCLUSTERED ([id_factura] ASC,[id_vehiculo] ASC)
GO

ALTER TABLE [Tbl_DetalleFactura] 
 ADD CONSTRAINT [CHK_DetalleFactura_Cantidad_Pos] CHECK (cantidad > 0)
GO

ALTER TABLE [Tbl_DetalleFactura] 
 ADD CONSTRAINT [CHK_DetalleFactura_Precio_NoNeg] CHECK (precio_unitario >= 0)
GO

ALTER TABLE [Tbl_DetalleFactura] 
 ADD CONSTRAINT [CHK_DetalleFactura_Subtotal_Calculo] CHECK (subtotal = cantidad * precio_unitario)
GO

ALTER TABLE [Tbl_DetalleOrdenCompra] 
 ADD CONSTRAINT [PK_DetalleOrdenCompra]
	PRIMARY KEY CLUSTERED ([id_detalle_orden_compra] ASC)
GO

ALTER TABLE [Tbl_DetalleOrdenCompra] 
 ADD CONSTRAINT [UQ_DetalleOC_OC_Repuesto] UNIQUE NONCLUSTERED ([id_orden_compra] ASC,[id_repuesto] ASC)
GO

ALTER TABLE [Tbl_DetalleOrdenCompra] 
 ADD CONSTRAINT [CHK_DetalleOC_Cantidad_Pos] CHECK (cantidad > 0)
GO

ALTER TABLE [Tbl_DetalleOrdenCompra] 
 ADD CONSTRAINT [CHK_DetalleOC_Precio_NoNeg] CHECK (precio_unitario >= 0)
GO

ALTER TABLE [Tbl_DetalleOrdenCompra] 
 ADD CONSTRAINT [CHK_DetalleOC_Subtotal_Calculo] CHECK (subtotal = cantidad * precio_unitario)
GO

ALTER TABLE [Tbl_Empleado] 
 ADD CONSTRAINT [PK_Empleado]
	PRIMARY KEY CLUSTERED ([id_empleado] ASC)
GO

ALTER TABLE [Tbl_Empleado] 
 ADD CONSTRAINT [UQ_Empleado_Email] UNIQUE NONCLUSTERED ([email] ASC)
GO

ALTER TABLE [Tbl_Empleado] 
 ADD CONSTRAINT [CHK_Empleado_Salario_NoNegativo] CHECK (salario >= 0)
GO

ALTER TABLE [Tbl_Empleado] 
 ADD CONSTRAINT [CHK_Empleado_Id_Positive] CHECK (id_empleado > 0)
GO

ALTER TABLE [Tbl_Empleado] 
 ADD CONSTRAINT [CHK_Empleado_Telefono_Longitud] CHECK (LEN(telefono) BETWEEN 7 AND 20)
GO

ALTER TABLE [Tbl_Empleado] 
 ADD CONSTRAINT [CHK_Empleado_Email_Formato] CHECK (email LIKE '%@%.%')
GO

ALTER TABLE [Tbl_Empleado] 
 ADD CONSTRAINT [CHK_Empleado_Estado] CHECK (estado_empleado IN ('activo','inactivo','suspendido'))
GO

ALTER TABLE [Tbl_Empleado] 
 ADD CONSTRAINT [CHK_Empleado_Cargo_Listado] CHECK (cargo IN ('asesor','cajero','tecnico','comprador','jefe_taller'))
GO

ALTER TABLE [Tbl_Empleado] 
 ADD CONSTRAINT [CHK_Empleado_Fecha_NoFutura] CHECK (fecha_contratacion <= GETDATE())
GO

CREATE NONCLUSTERED INDEX [IXFK_Tbl_Empleado_cat_estado_registro] 
 ON [Tbl_Empleado] ([id_estado_reg] ASC)
GO

ALTER TABLE [Tbl_Factura] 
 ADD CONSTRAINT [PK_Factura]
	PRIMARY KEY CLUSTERED ([id_factura] ASC)
GO

ALTER TABLE [Tbl_Factura] 
 ADD CONSTRAINT [CHK_Factura_EstadoPago] CHECK (estado_pago IN ('pendiente','pagada','anulada'))
GO

ALTER TABLE [Tbl_Factura] 
 ADD CONSTRAINT [CHK_Factura_Fechas_Validas] CHECK (fecha_emision <= fecha_vencimiento)
GO

ALTER TABLE [Tbl_Factura] 
 ADD CONSTRAINT [CHK_Factura_Monto_NoNeg] CHECK (monto_total >= 0)
GO

CREATE NONCLUSTERED INDEX [IXFK_Tbl_Factura_cast_estado_pago] 
 ON [Tbl_Factura] ([id_estado_pago] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Tbl_Factura_cat_metodo_pago] 
 ON [Tbl_Factura] ([id_metodo_pago] ASC)
GO

ALTER TABLE [Tbl_OrdenCompra] 
 ADD CONSTRAINT [PK_OrdenCompra]
	PRIMARY KEY CLUSTERED ([id_orden_compra] ASC)
GO

ALTER TABLE [Tbl_OrdenCompra] 
 ADD CONSTRAINT [CHK_OC_Fechas_Coherentes] CHECK (fecha_orden <= GETDATE() AND fecha_entrega >= fecha_orden)
GO

ALTER TABLE [Tbl_OrdenCompra] 
 ADD CONSTRAINT [CHK_OC_Total_NoNeg] CHECK (total_orden >= 0)
GO

ALTER TABLE [Tbl_OrdenCompra] 
 ADD CONSTRAINT [CHK_OC_Estado_Valido] CHECK (estado_orden IN ('abierta','en_proceso','parcialmente_recibida','recibida','cerrada','cancelada'))
GO

CREATE NONCLUSTERED INDEX [IXFK_Tbl_OrdenCompra_cat_estado_orden_compra] 
 ON [Tbl_OrdenCompra] ([id_estado_oc] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Tbl_OrdenCompra_cat_forma_envio] 
 ON [Tbl_OrdenCompra] ([id_forma_envio] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Tbl_OrdenCompra_cat_metodo_pago] 
 ON [Tbl_OrdenCompra] ([id_metodo_pago] ASC)
GO

ALTER TABLE [Tbl_OrdenServicio] 
 ADD CONSTRAINT [PK_OrdenServicio]
	PRIMARY KEY CLUSTERED ([id_ordenServicio] ASC)
GO

ALTER TABLE [Tbl_OrdenServicio] 
 ADD CONSTRAINT [CHK_OS_Fecha_NoFutura] CHECK (fecha_orden <= GETDATE())
GO

CREATE NONCLUSTERED INDEX [IXFK_solicita_Cliente] 
 ON [Tbl_OrdenServicio] ([id_ordenServicio] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Tbl_OrdenServicio_cat_estado_orden_servicio] 
 ON [Tbl_OrdenServicio] ([id_estado_os] ASC)
GO

ALTER TABLE [Tbl_OrdenServicioDetalle] 
 ADD CONSTRAINT [PK_OrdenServicioDetalle]
	PRIMARY KEY CLUSTERED ([id_ordendetalle] ASC)
GO

ALTER TABLE [Tbl_OrdenServicioDetalle] 
 ADD CONSTRAINT [CHK_OSDet_Item_Exclusivo] CHECK (id_servicio IS NOT NULL OR id_repuesto IS NOT NULL)
GO

ALTER TABLE [Tbl_OrdenServicioDetalle] 
 ADD CONSTRAINT [CHK_OSDet_Cantidad_Pos] CHECK (cantidad > 0)
GO

ALTER TABLE [Tbl_OrdenServicioDetalle] 
 ADD CONSTRAINT [CHK_OSDet_Precio_NoNeg] CHECK (precio_unitario >= 0)
GO

ALTER TABLE [Tbl_Proveedor] 
 ADD CONSTRAINT [PK_Proveedor]
	PRIMARY KEY CLUSTERED ([id_proveedor] ASC)
GO

ALTER TABLE [Tbl_Proveedor] 
 ADD CONSTRAINT [UQ_Proveedor_Email] UNIQUE NONCLUSTERED ([email] ASC)
GO

ALTER TABLE [Tbl_Proveedor] 
 ADD CONSTRAINT [CHK_Proveedor_Tipo] CHECK (tipo_proveedor IN ('local','internacional'))
GO

ALTER TABLE [Tbl_Proveedor] 
 ADD CONSTRAINT [CHK_Proveedor_Estado] CHECK (estado_proveedor IN ('activo','inactivo','bloqueado'))
GO

ALTER TABLE [Tbl_Proveedor] 
 ADD CONSTRAINT [CHK_Proveedor_EmailFormato] CHECK (email LIKE '%@%.%')
GO

ALTER TABLE [Tbl_Proveedor] 
 ADD CONSTRAINT [CHK_Proveedor_TelefonoLongitud] CHECK (LEN(telefono) BETWEEN 7 AND 20)
GO

ALTER TABLE [Tbl_Proveedor] 
 ADD CONSTRAINT [CHK_Proveedor_FechaNoFutura] CHECK (fecha_registro <= GETDATE())
GO

ALTER TABLE [Tbl_Proveedor] 
 ADD CONSTRAINT [CHK_Proveedor_CodigoPostalFormato] CHECK (LEN(codigo_postal) BETWEEN 4 AND 10)
GO

CREATE NONCLUSTERED INDEX [IXFK_Tbl_Proveedor_cat_estado_registro] 
 ON [Tbl_Proveedor] ([id_estado_reg] ASC)
GO

ALTER TABLE [Tbl_Repuesto] 
 ADD CONSTRAINT [PK_Repuesto]
	PRIMARY KEY CLUSTERED ([id_repuesto] ASC)
GO

ALTER TABLE [Tbl_Repuesto] 
 ADD CONSTRAINT [UQ_Repuesto_Codigo] UNIQUE NONCLUSTERED ([codigo_repuesto] ASC)
GO

ALTER TABLE [Tbl_Repuesto] 
 ADD CONSTRAINT [CHK_Repuesto_Precio_NoNegativo] CHECK (precio_unitario >= 0)
GO

ALTER TABLE [Tbl_Repuesto] 
 ADD CONSTRAINT [CHK_Repuesto_Stock_NoNegativo] CHECK (stock_actual >= 0)
GO

ALTER TABLE [Tbl_Repuesto] 
 ADD CONSTRAINT [CHK_Repuesto_StockMin_NoNegativo] CHECK (stock_minimo >= 20)
GO

ALTER TABLE [Tbl_Repuesto] 
 ADD CONSTRAINT [CHK_Repuesto_Estado_Lista] CHECK (estado_repuesto IN ('activo','inactivo','descontinuado'))
GO

ALTER TABLE [Tbl_Repuesto] 
 ADD CONSTRAINT [CHK_Repuesto_Categoria_Lista] CHECK (categoria IN ('frenos','filtros','suspension','motor','electricidad'))
GO

ALTER TABLE [Tbl_Repuesto] 
 ADD CONSTRAINT [CHK_Repuesto_Fecha_NoFutura] CHECK (fecha_ingreso <= GETDATE())
GO

CREATE NONCLUSTERED INDEX [IXFK_Repuesto_Proveedor] 
 ON [Tbl_Repuesto] ([id_proveedor] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Tbl_Repuesto_cat_categoria_repuesto] 
 ON [Tbl_Repuesto] ([id_categoria_rep] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Tbl_Repuesto_cat_estado_repuesto] 
 ON [Tbl_Repuesto] ([id_estado_rep] ASC)
GO

ALTER TABLE [Tbl_Servicio] 
 ADD CONSTRAINT [PK_Servicio]
	PRIMARY KEY CLUSTERED ([id_servicio] ASC)
GO

ALTER TABLE [Tbl_Servicio] 
 ADD CONSTRAINT [UQ_Servicio_Nombre] UNIQUE NONCLUSTERED ([nombre] ASC)
GO

ALTER TABLE [Tbl_Servicio] 
 ADD CONSTRAINT [CHK_Servicio_Costo_NoNeg] CHECK (costo >= 0)
GO

ALTER TABLE [Tbl_Servicio] 
 ADD CONSTRAINT [CHK_Servicio_Duracion_NoNeg] CHECK (duracion_horas >= 0)
GO

ALTER TABLE [Tbl_Servicio] 
 ADD CONSTRAINT [CHK_Servicio_Garantia_NoNeg] CHECK (garantia_meses >= 0)
GO

ALTER TABLE [Tbl_Servicio] 
 ADD CONSTRAINT [CHK_Servicio_Requiere_Lista] CHECK (requiere_repuesto IN ('si','no'))
GO

ALTER TABLE [Tbl_Servicio] 
 ADD CONSTRAINT [CHK_Servicio_Dificultad_Lista] CHECK (nivel_dificultad IN ('baja','media','alta'))
GO

ALTER TABLE [Tbl_Servicio] 
 ADD CONSTRAINT [CHK_Servicio_Fecha_NoFutura] CHECK (fecha_creacion <= GETDATE())
GO

CREATE NONCLUSTERED INDEX [IXFK_Tbl_Servicio_cat_nivel_dificultad_servicio] 
 ON [Tbl_Servicio] ([id_nivel] ASC)
GO

ALTER TABLE [Tbl_Vehiculo] 
 ADD CONSTRAINT [PK_Vehiculo]
	PRIMARY KEY CLUSTERED ([id_vehiculo] ASC)
GO

ALTER TABLE [Tbl_Vehiculo] 
 ADD CONSTRAINT [UQ_Vehiculo_numero_chasis] UNIQUE NONCLUSTERED ([numero_chasis] ASC)
GO

ALTER TABLE [Tbl_Vehiculo] 
 ADD CONSTRAINT [UQ_Vehiculo_placa_NN] UNIQUE NONCLUSTERED ([placa] ASC)
GO

ALTER TABLE [Tbl_Vehiculo] 
 ADD CONSTRAINT [CHK_Vehiculo_Precio_NoNegativo] CHECK (precio_venta = 0)
GO

ALTER TABLE [Tbl_Vehiculo] 
 ADD CONSTRAINT [CHK_Vehiculo_Km_NoNegativo] CHECK (kilometraje >= 0)
GO

ALTER TABLE [Tbl_Vehiculo] 
 ADD CONSTRAINT [CHK_Vehiculo_Anio_Rango] CHECK (anio >= 1980 AND anio <= 2026)
GO

ALTER TABLE [Tbl_Vehiculo] 
 ADD CONSTRAINT [CHK_Vehiculo_Combustible] CHECK (combustible IN ('gasolina','diesel','hibrido','electrico'))
GO

ALTER TABLE [Tbl_Vehiculo] 
 ADD CONSTRAINT [CHK_Vehiculo_Transmision] CHECK (transmision IN ('manual','automatica','cvt','secuencial'))
GO

ALTER TABLE [Tbl_Vehiculo] 
 ADD CONSTRAINT [CHK_Vehiculo_Categoria] CHECK (categoria IN ('sedan','suv','pickup','hatchback','comercial'))
GO

ALTER TABLE [Tbl_Vehiculo] 
 ADD CONSTRAINT [CHK_Vehiculo_VIN_Longitud] CHECK (LEN(numero_chasis) = 17)
GO

ALTER TABLE [Tbl_Vehiculo] 
 ADD CONSTRAINT [CHK_Vehiculo_FechaIngreso_NoFutura] CHECK (fecha_ingreso <= GETDATE())
GO

CREATE NONCLUSTERED INDEX [IXFK_Tbl_Vehiculo_cat_categoria_vehiculo] 
 ON [Tbl_Vehiculo] ([id_categoria_veh] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Tbl_Vehiculo_cat_combustible] 
 ON [Tbl_Vehiculo] ([id_combustible] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Tbl_Vehiculo_cat_estado_vehiculo] 
 ON [Tbl_Vehiculo] ([id_estado_vehiculo] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Tbl_Vehiculo_cat_transmision] 
 ON [Tbl_Vehiculo] ([id_transmision] ASC)
GO

/* Create Foreign Key Constraints */

ALTER TABLE [Tbl_Cliente] ADD CONSTRAINT [FK_Tbl_Cliente_cat_estado_registro]
	FOREIGN KEY ([id_estado_reg]) REFERENCES [cat_estado_registro] ([id_estado_reg]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_Cliente] ADD CONSTRAINT [FK_Tbl_Cliente_cat_tipo_cliente]
	FOREIGN KEY ([id_tipo_cliente]) REFERENCES [cat_tipo_cliente] ([id_tipo_cliente]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_DetalleFactura] ADD CONSTRAINT [FK_incluye_DetalleFactura]
	FOREIGN KEY ([id_servicio]) REFERENCES [Tbl_Servicio] ([id_servicio]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_DetalleFactura] ADD CONSTRAINT [FK_contiene_Factura]
	FOREIGN KEY ([id_factura]) REFERENCES [Tbl_Factura] ([id_factura]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_DetalleOrdenCompra] ADD CONSTRAINT [FK_contiene_OrdenCompra]
	FOREIGN KEY ([id_orden_compra]) REFERENCES [Tbl_OrdenCompra] ([id_orden_compra]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_DetalleOrdenCompra] ADD CONSTRAINT [FK_incluye_DetalleOrdenCompra]
	FOREIGN KEY ([id_repuesto]) REFERENCES [Tbl_Repuesto] ([id_repuesto]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_Empleado] ADD CONSTRAINT [FK_Tbl_Empleado_cat_estado_registro]
	FOREIGN KEY ([id_estado_reg]) REFERENCES [cat_estado_registro] ([id_estado_reg]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_Factura] ADD CONSTRAINT [FK_Tbl_Factura_cast_estado_pago]
	FOREIGN KEY ([id_estado_pago]) REFERENCES [cat_estado_pago] ([id_estado_pago]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_Factura] ADD CONSTRAINT [FK_Tbl_Factura_cat_metodo_pago]
	FOREIGN KEY ([id_metodo_pago]) REFERENCES [cat_metodo_pago] ([id_metodo_pago]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_Factura] ADD CONSTRAINT [FK_pertenece_Factura]
	FOREIGN KEY ([id_cliente]) REFERENCES [Tbl_Cliente] ([id_cliente]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_Factura] ADD CONSTRAINT [FK_emite_Empleado]
	FOREIGN KEY ([id_empleado]) REFERENCES [Tbl_Empleado] ([id_empleado]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_Factura] ADD CONSTRAINT [FK_origina_OrdenServicio]
	FOREIGN KEY ([id_ordenServicio]) REFERENCES [Tbl_OrdenServicio] ([id_ordenServicio]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_OrdenCompra] ADD CONSTRAINT [FK_Tbl_OrdenCompra_cat_estado_orden_compra]
	FOREIGN KEY ([id_estado_oc]) REFERENCES [cat_estado_orden_compra] ([id_estado_oc ]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_OrdenCompra] ADD CONSTRAINT [FK_Tbl_OrdenCompra_cat_forma_envio]
	FOREIGN KEY ([id_forma_envio]) REFERENCES [cat_forma_envio] ([id_forma_envio]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_OrdenCompra] ADD CONSTRAINT [FK_Tbl_OrdenCompra_cat_metodo_pago]
	FOREIGN KEY ([id_metodo_pago]) REFERENCES [cat_metodo_pago] ([id_metodo_pago]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_OrdenCompra] ADD CONSTRAINT [FK_crea_Empleado]
	FOREIGN KEY ([id_empleado]) REFERENCES [Tbl_Empleado] ([id_empleado]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_OrdenCompra] ADD CONSTRAINT [FK_recibe_Proveedor]
	FOREIGN KEY ([id_proveedor]) REFERENCES [Tbl_Proveedor] ([id_proveedor]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_OrdenServicio] ADD CONSTRAINT [FK_Tbl_OrdenServicio_cat_estado_orden_servicio]
	FOREIGN KEY ([id_estado_os]) REFERENCES [cat_estado_orden_servicio] ([id_estado_os]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_OrdenServicio] ADD CONSTRAINT [FK_solicita_Cliente]
	FOREIGN KEY ([id_ordenServicio]) REFERENCES [Tbl_Cliente] ([id_cliente]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_OrdenServicio] ADD CONSTRAINT [FK_gestiona_Empleado]
	FOREIGN KEY ([id_empleado]) REFERENCES [Tbl_Empleado] ([id_empleado]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_OrdenServicio] ADD CONSTRAINT [FK_recibe_Vehiculo]
	FOREIGN KEY ([id_vehiculo]) REFERENCES [Tbl_Vehiculo] ([id_vehiculo]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_OrdenServicioDetalle] ADD CONSTRAINT [FK_contiene_OrdenServicio]
	FOREIGN KEY ([id_ordenServicio]) REFERENCES [Tbl_OrdenServicio] ([id_ordenServicio]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_OrdenServicioDetalle] ADD CONSTRAINT [FK_incluye_OrdenServicioDetalle]
	FOREIGN KEY ([id_servicio]) REFERENCES [Tbl_Servicio] ([id_servicio]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_Proveedor] ADD CONSTRAINT [FK_Tbl_Proveedor_cat_estado_registro]
	FOREIGN KEY ([id_estado_reg]) REFERENCES [cat_estado_registro] ([id_estado_reg]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_Repuesto] ADD CONSTRAINT [FK_Repuesto_Proveedor]
	FOREIGN KEY ([id_proveedor]) REFERENCES [Tbl_Proveedor] ([id_proveedor]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_Repuesto] ADD CONSTRAINT [FK_Tbl_Repuesto_cat_categoria_repuesto]
	FOREIGN KEY ([id_categoria_rep]) REFERENCES [cat_categoria_repuesto] ([id_categoria_rep]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_Repuesto] ADD CONSTRAINT [FK_Tbl_Repuesto_cat_estado_repuesto]
	FOREIGN KEY ([id_estado_rep]) REFERENCES [cat_estado_repuesto] ([id_estado_rep]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_Servicio] ADD CONSTRAINT [FK_Tbl_Servicio_cat_nivel_dificultad_servicio]
	FOREIGN KEY ([id_nivel]) REFERENCES [cat_nivel_dificultad_servicio] ([id_nivel]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_Vehiculo] ADD CONSTRAINT [FK_Tbl_Vehiculo_cat_categoria_vehiculo]
	FOREIGN KEY ([id_categoria_veh]) REFERENCES [cat_categoria_vehiculo] ([id_categoria_veh]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_Vehiculo] ADD CONSTRAINT [FK_Tbl_Vehiculo_cat_combustible]
	FOREIGN KEY ([id_combustible]) REFERENCES [cat_combustible] ([id_combustible]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_Vehiculo] ADD CONSTRAINT [FK_Tbl_Vehiculo_cat_estado_vehiculo]
	FOREIGN KEY ([id_estado_vehiculo]) REFERENCES [cat_estado_vehiculo] ([id_estado_vehiculo]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Tbl_Vehiculo] ADD CONSTRAINT [FK_Tbl_Vehiculo_cat_transmision]
	FOREIGN KEY ([id_transmision]) REFERENCES [cat_transmision] ([id_transmision]) ON DELETE No Action ON UPDATE No Action
GO

/* Create Table Comments */

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'cat_categoria_repuesto', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Catálogo que agrupa repuestos por familias (ej., frenos, filtros, suspensión, eléctrico, motor), mejorando análisis de compras, rotación y márgenes. Evita etiquetas libres y dispersas, habilitando reportes y políticas coherentes por categoría. Permite desactivar valores obsoletos sin borrar historia. Contribuye a la planificación del inventario y a la priorización de abastecimiento. Es base para dashboards y análisis de portafolio.', 'SCHEMA', 'dbo', 'table', 'cat_categoria_repuesto' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Catálogo que agrupa repuestos por familias (ej., frenos, filtros, suspensión, eléctrico, motor), mejorando análisis de compras, rotación y márgenes. Evita etiquetas libres y dispersas, habilitando reportes y políticas coherentes por categoría. Permite desactivar valores obsoletos sin borrar historia. Contribuye a la planificación del inventario y a la priorización de abastecimiento. Es base para dashboards y análisis de portafolio.', 'SCHEMA', 'dbo', 'table', 'cat_categoria_repuesto' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identificador técnico único de la categoría de repuesto, independiente de rótulos. Asegura relaciones estables con la entidad Repuesto y soporta trazabilidad histórica. No debe reutilizarse para otros significados. Actúa como ancla para reportes por familias y decisiones de abastecimiento. Refuerza la integridad del dominio.', 'Schema', [dbo], 'table', [cat_categoria_repuesto], 'column', [id_categoria_rep]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Denominación normalizada de la categoría, única para evitar ambigüedad. Su gestión central asegura consistencia en capturas y tableros. No es clave relacional; su finalidad es comunicativa. Cambios en el nombre se documentan sin afectar la identidad técnica. Favorece filtros y análisis por familia.', 'Schema', [dbo], 'table', [cat_categoria_repuesto], 'column', [nombre]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Detalle explicativo del alcance de la categoría y ejemplos de piezas incluidas. Reduce errores de clasificación y ayuda a capacitar al personal. No interviene en validaciones; su valor es documental. Debe mantenerse actualizada ante cambios en el portafolio. Aporta contexto a auditorías.', 'Schema', [dbo], 'table', [cat_categoria_repuesto], 'column', [descripcion]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Señal que regula disponibilidad para nuevas asignaciones, manteniendo orden del dominio sin borrar historia. Las interfaces deben ocultar categorías inactivas. No reinterpreta ítems previos; actúa hacia futuro. Contribuye a la gobernanza del dato maestro y limpieza operativa.', 'Schema', [dbo], 'table', [cat_categoria_repuesto], 'column', [es_activo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha de incorporación de la categoría al catálogo, útil para auditorías y análisis de evolución. No tiene efectos funcionales directos; es contexto histórico. Permite evidenciar cuándo se consolidó una familia en el portafolio. Debe registrarse al alta.', 'Schema', [dbo], 'table', [cat_categoria_repuesto], 'column', [fecha_creacion]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_repuesto', 'CONSTRAINT', 'PK_cat_categoria_repuesto')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'PK que soporta la identidad de la familia de repuestos. Mejora el rendimiento en joins con inventario y órdenes. Previene duplicados por ID y aporta orden al maestro. Estable en el tiempo para análisis longitudinales.', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_repuesto', 'CONSTRAINT', 'PK_cat_categoria_repuesto' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'PK que soporta la identidad de la familia de repuestos. Mejora el rendimiento en joins con inventario y órdenes. Previene duplicados por ID y aporta orden al maestro. Estable en el tiempo para análisis longitudinales.', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_repuesto', 'CONSTRAINT', 'PK_cat_categoria_repuesto' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_repuesto', 'CONSTRAINT', 'UQ_cat_categoria_repuesto_Nombre')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Impide categorías duplicadas, elevando la calidad de clasificación. El índice único acelera búsquedas por nombre. La unicidad se valida antes de confirmar la transacción, evitando errores silenciosos. Facilita reporting por familia.', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_repuesto', 'CONSTRAINT', 'UQ_cat_categoria_repuesto_Nombre' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Impide categorías duplicadas, elevando la calidad de clasificación. El índice único acelera búsquedas por nombre. La unicidad se valida antes de confirmar la transacción, evitando errores silenciosos. Facilita reporting por familia.', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_repuesto', 'CONSTRAINT', 'UQ_cat_categoria_repuesto_Nombre' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_repuesto', 'CONSTRAINT', 'CK_cat_categoria_repuesto_EstadoBit')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Asegura un control de vigencia binario para la categoría. Simplifica filtros operativos y decisiones de catálogo. Mínimo coste de evaluación. Mantiene coherencia entre ambientes.', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_repuesto', 'CONSTRAINT', 'CK_cat_categoria_repuesto_EstadoBit' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Asegura un control de vigencia binario para la categoría. Simplifica filtros operativos y decisiones de catálogo. Mínimo coste de evaluación. Mantiene coherencia entre ambientes.', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_repuesto', 'CONSTRAINT', 'CK_cat_categoria_repuesto_EstadoBit' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_repuesto', 'CONSTRAINT', 'CK_cat_categoria_repuesto_NombreNotBlank')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita etiquetas vacías que degradan reportes y selectores. Frena inconsistencias desde la base. Protección simple y efectiva ante cargas masivas defectuosas. Mantiene orden documental.', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_repuesto', 'CONSTRAINT', 'CK_cat_categoria_repuesto_NombreNotBlank' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita etiquetas vacías que degradan reportes y selectores. Frena inconsistencias desde la base. Protección simple y efectiva ante cargas masivas defectuosas. Mantiene orden documental.', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_repuesto', 'CONSTRAINT', 'CK_cat_categoria_repuesto_NombreNotBlank' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'cat_categoria_vehiculo', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Catálogo que organiza los vehículos por categorías (sedán, suv, pickup, hatchback, etc.) para mejorar filtros, análisis y presentaciones. Evita etiquetas libres y garantiza reportes homogéneos. Permite desactivar valores sin borrar historia, manteniendo orden del dominio. Sirve de base para dashboards comerciales y de stock. Centraliza la semántica y refuerza la gobernanza del dato maestro.', 'SCHEMA', 'dbo', 'table', 'cat_categoria_vehiculo' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Catálogo que organiza los vehículos por categorías (sedán, suv, pickup, hatchback, etc.) para mejorar filtros, análisis y presentaciones. Evita etiquetas libres y garantiza reportes homogéneos. Permite desactivar valores sin borrar historia, manteniendo orden del dominio. Sirve de base para dashboards comerciales y de stock. Centraliza la semántica y refuerza la gobernanza del dato maestro.', 'SCHEMA', 'dbo', 'table', 'cat_categoria_vehiculo' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identificador técnico único de la categoría, independiente del rótulo textual. Asegura relaciones estables con la entidad Vehículo y preserva trazabilidad histórica. Debe ser no reutilizable para otro significado. Es la base técnica de reportes por familia y de segmentación comercial. Refuerza integridad del dominio.', 'Schema', [dbo], 'table', [cat_categoria_vehiculo], 'column', [id_categoria_veh]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Denominación normalizada de la categoría, única para evitar ambigüedad. Se muestra en interfaces y reportes, con gestión centralizada para impedir variantes. No se usa como clave relacional; su rol es comunicativo. Cambios del rótulo no afectan la identidad técnica. Favorece filtros y análisis por familia.', 'Schema', [dbo], 'table', [cat_categoria_vehiculo], 'column', [nombre]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Descripción que documenta alcance y ejemplos de modelos incluidos. Reduce errores de clasificación y apoya capacitación. No participa en reglas automáticas; su valor es documental. Debe actualizarse con la evolución del portafolio. Aporta contexto a auditorías y decisiones de catálogo.', 'Schema', [dbo], 'table', [cat_categoria_vehiculo], 'column', [descripcion]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Bandera de vigencia para nuevas asignaciones, conservando referencias históricas. Permite retirar categorías sin borrar registros, manteniendo limpieza del dominio. Las pantallas deben ocultar valores inactivos. No reinterpreta unidades previas; regula el uso futuro. Es clave para gobernanza del dato maestro.', 'Schema', [dbo], 'table', [cat_categoria_vehiculo], 'column', [es_activo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha de incorporación del valor al catálogo, útil para auditorías y control de cambios. No tiene efectos funcionales; brinda contexto. Permite evidenciar el momento de adopción de una categoría. Debe registrarse de forma consistente.', 'Schema', [dbo], 'table', [cat_categoria_vehiculo], 'column', [fecha_creacion]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_vehiculo', 'CONSTRAINT', 'PK_cat_categoria_vehiculo')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Define identidad física de categorías de unidades (sedán, SUV, etc.). Contribuye a integridad y rendimiento de consultas. Permite un gobierno ordenado del maestro. Indispensable para análisis de inventario y ventas.', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_vehiculo', 'CONSTRAINT', 'PK_cat_categoria_vehiculo' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Define identidad física de categorías de unidades (sedán, SUV, etc.). Contribuye a integridad y rendimiento de consultas. Permite un gobierno ordenado del maestro. Indispensable para análisis de inventario y ventas.', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_vehiculo', 'CONSTRAINT', 'PK_cat_categoria_vehiculo' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_vehiculo', 'CONSTRAINT', 'UQ_cat_categoria_vehiculo_Nombre')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Garantiza nombres únicos por categoría. Mejora precisión en filtros y agregaciones. La validación transaccional evita duplicados aún en cargas paralelas. Reduce limpieza posterior.', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_vehiculo', 'CONSTRAINT', 'UQ_cat_categoria_vehiculo_Nombre' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Garantiza nombres únicos por categoría. Mejora precisión en filtros y agregaciones. La validación transaccional evita duplicados aún en cargas paralelas. Reduce limpieza posterior.', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_vehiculo', 'CONSTRAINT', 'UQ_cat_categoria_vehiculo_Nombre' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_vehiculo', 'CONSTRAINT', 'CK_cat_categoria_vehiculo_EstadoBit')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Dominio binario de vigencia para controlar disponibilidad de categorías. Simplifica lógica de UI y procesos por lotes. Evaluación barata y estable. Promueve consistencia.', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_vehiculo', 'CONSTRAINT', 'CK_cat_categoria_vehiculo_EstadoBit' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Dominio binario de vigencia para controlar disponibilidad de categorías. Simplifica lógica de UI y procesos por lotes. Evaluación barata y estable. Promueve consistencia.', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_vehiculo', 'CONSTRAINT', 'CK_cat_categoria_vehiculo_EstadoBit' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_vehiculo', 'CONSTRAINT', 'CK_cat_categoria_vehiculo_NombreNotBlank')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Impide strings vacíos, elevando la confiabilidad del catálogo. Beneficia directamente a reporting y a integraciones. Bajo coste, alta efectividad. Buen patrón reutilizable.', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_vehiculo', 'CONSTRAINT', 'CK_cat_categoria_vehiculo_NombreNotBlank' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Impide strings vacíos, elevando la confiabilidad del catálogo. Beneficia directamente a reporting y a integraciones. Bajo coste, alta efectividad. Buen patrón reutilizable.', 'SCHEMA', 'dbo', 'TABLE', 'cat_categoria_vehiculo', 'CONSTRAINT', 'CK_cat_categoria_vehiculo_NombreNotBlank' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'cat_combustible', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Catálogo de tipos de combustible (gasolina, diésel, híbrido, eléctrico) usados para tipificar vehículos de manera consistente. Elimina variantes libres, mejora filtros y reportes, y soporta análisis de portafolio y tendencia. Permite desactivar valores sin borrar historia. Asegura un lenguaje común entre operación y comercial. Es la referencia única para la característica energética del vehículo.', 'SCHEMA', 'dbo', 'table', 'cat_combustible' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Catálogo de tipos de combustible (gasolina, diésel, híbrido, eléctrico) usados para tipificar vehículos de manera consistente. Elimina variantes libres, mejora filtros y reportes, y soporta análisis de portafolio y tendencia. Permite desactivar valores sin borrar historia. Asegura un lenguaje común entre operación y comercial. Es la referencia única para la característica energética del vehículo.', 'SCHEMA', 'dbo', 'table', 'cat_combustible' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Clave técnica estable que identifica el tipo de combustible, independiente de etiquetas. Evita acoplar relaciones a textos susceptibles de cambio. Es no reutilizable, preservando trazabilidad histórica. Facilita reportes consistentes y comparaciones de portafolio. Refuerza integridad del dominio en la entidad Vehículo.', 'Schema', [dbo], 'table', [cat_combustible], 'column', [id_combustible]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Denominación normalizada del combustible, única para prevenir ambigüedad. Se muestra en interfaces y documentos, bajo administración central para impedir variantes. No funciona como clave relacional; su uso es comunicativo. Cambios en el rótulo no afectan la identidad técnica. Favorece estandarización semántica.', 'Schema', [dbo], 'table', [cat_combustible], 'column', [nombre]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Aclaración del tipo, con notas de alcance y ejemplos. Mejora la comprensión y reduce errores de captura. No interviene en validaciones; su función es documental y de capacitación. Debe mantenerse acorde a la evolución del portafolio. Aporta contexto útil a auditorías.', 'Schema', [dbo], 'table', [cat_combustible], 'column', [decripcion]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Marca de vigencia para nuevas asignaciones, manteniendo históricos intactos. Permite retirar opciones sin borrar registros. Las interfaces deben ocultar combustibles inactivos. No reinterpreta unidades previas; regula el uso futuro. Es parte del gobierno del dato maestro.', 'Schema', [dbo], 'table', [cat_combustible], 'column', [es_activo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha de alta del valor en el catálogo, útil para control de cambios y evidencia histórica. No produce efectos funcionales; contextualiza adopciones. Permite seguimiento de evolución del portafolio. Debe registrarse al crear el registro.', 'Schema', [dbo], 'table', [cat_combustible], 'column', [fecha_creacion]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_combustible', 'CONSTRAINT', 'PK_cat_combustible')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'PK física para el tipo de combustible, esencial para consultas técnicas y comerciales. Refuerza integridad y mejora cardinalidad estimada. Mantenerla estable garantiza reproducibilidad de reportes. Base de FKs en vehículos.', 'SCHEMA', 'dbo', 'TABLE', 'cat_combustible', 'CONSTRAINT', 'PK_cat_combustible' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'PK física para el tipo de combustible, esencial para consultas técnicas y comerciales. Refuerza integridad y mejora cardinalidad estimada. Mantenerla estable garantiza reproducibilidad de reportes. Base de FKs en vehículos.', 'SCHEMA', 'dbo', 'TABLE', 'cat_combustible', 'CONSTRAINT', 'PK_cat_combustible' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_combustible', 'INDEX', 'UQ_cat_combustible_Nombre')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Previene nombres duplicados (p. ej., dos “diésel”), lo que reduce errores en informes y ETL. Índice útil para búsqueda por etiqueta. La validación ocurre en el motor y es transaccional. Baja carga operativa.', 'SCHEMA', 'dbo', 'TABLE', 'cat_combustible', 'INDEX', 'UQ_cat_combustible_Nombre' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Previene nombres duplicados (p. ej., dos “diésel”), lo que reduce errores en informes y ETL. Índice útil para búsqueda por etiqueta. La validación ocurre en el motor y es transaccional. Baja carga operativa.', 'SCHEMA', 'dbo', 'TABLE', 'cat_combustible', 'INDEX', 'UQ_cat_combustible_Nombre' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_combustible', 'CONSTRAINT', 'CK_cat_combustible_EstadoBit')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Establece dominio binario, simplificando activación/desactivación de opciones. El motor frena datos inválidos en escrituras. Aporta coherencia y facilita depuración en cascada. Evaluación trivial.', 'SCHEMA', 'dbo', 'TABLE', 'cat_combustible', 'CONSTRAINT', 'CK_cat_combustible_EstadoBit' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Establece dominio binario, simplificando activación/desactivación de opciones. El motor frena datos inválidos en escrituras. Aporta coherencia y facilita depuración en cascada. Evaluación trivial.', 'SCHEMA', 'dbo', 'TABLE', 'cat_combustible', 'CONSTRAINT', 'CK_cat_combustible_EstadoBit' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_combustible', 'CONSTRAINT', 'CK_cat_combustible_NombreNotBlank')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Impide registrar etiquetas vacías. Mejora usabilidad y calidad del dato maestro. Verificación determinista, costo mínimo. Compatible con cargas bulk y transacciones.', 'SCHEMA', 'dbo', 'TABLE', 'cat_combustible', 'CONSTRAINT', 'CK_cat_combustible_NombreNotBlank' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Impide registrar etiquetas vacías. Mejora usabilidad y calidad del dato maestro. Verificación determinista, costo mínimo. Compatible con cargas bulk y transacciones.', 'SCHEMA', 'dbo', 'TABLE', 'cat_combustible', 'CONSTRAINT', 'CK_cat_combustible_NombreNotBlank' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_combustible', 'CONSTRAINT', 'CK_cat_combustible_NombreLista')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Dominio controlado que alinea reportes y reglas de negocio. Evita sinónimos y traducciones no estándar. Cambios se gestionan vía DDL versionado. Muy bajo coste de evaluación.', 'SCHEMA', 'dbo', 'TABLE', 'cat_combustible', 'CONSTRAINT', 'CK_cat_combustible_NombreLista' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Dominio controlado que alinea reportes y reglas de negocio. Evita sinónimos y traducciones no estándar. Cambios se gestionan vía DDL versionado. Muy bajo coste de evaluación.', 'SCHEMA', 'dbo', 'TABLE', 'cat_combustible', 'CONSTRAINT', 'CK_cat_combustible_NombreLista' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'cat_estado_orden_compra', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Catálogo que estandariza el ciclo de vida de las órdenes de compra, garantizando una lista cerrada y gobernada de estados coherentes con el proceso de abastecimiento. Centraliza la semántica (abierta, en_proceso, parcialmente_recibida, recibida, cerrada, cancelada) y evita variantes tipográficas o interpretaciones locales. Permite desactivar valores obsoletos sin borrar registros, preservando la historia. Mejora la trazabilidad y la comparabilidad de reportes operativos. Sirve de referencia única para auditorías y control interno.', 'SCHEMA', 'dbo', 'table', 'cat_estado_orden_compra' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Catálogo que estandariza el ciclo de vida de las órdenes de compra, garantizando una lista cerrada y gobernada de estados coherentes con el proceso de abastecimiento. Centraliza la semántica (abierta, en_proceso, parcialmente_recibida, recibida, cerrada, cancelada) y evita variantes tipográficas o interpretaciones locales. Permite desactivar valores obsoletos sin borrar registros, preservando la historia. Mejora la trazabilidad y la comparabilidad de reportes operativos. Sirve de referencia única para auditorías y control interno.', 'SCHEMA', 'dbo', 'table', 'cat_estado_orden_compra' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identificador técnico y único del estado de orden de compra, diseñado para relaciones estables con documentos operativos. Su uso evita acoplar la lógica a rótulos textuales que pueden cambiar por políticas o procedimientos. Debe ser no reutilizable para conservar la trazabilidad histórica. Actúa como pivote para mediciones y conciliaciones del flujo de compras. Asegura integridad referencial y consistencia en reportes transversales.', 'Schema', [dbo], 'table', [cat_estado_orden_compra], 'column', [id_estado_oc ]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Denominación normalizada del estado, visible en pantallas y reportes, que debe ser única para eliminar ambigüedades. Su gestión centralizada evita proliferación de variantes y mantiene homogeneidad semántica entre áreas. No se usa como clave de relación; su función es comunicativa. Cambios en la etiqueta no alteran la identidad técnica del valor. Favorece filtros consistentes y lectura uniforme del proceso.', 'Schema', [dbo], 'table', [cat_estado_orden_compra], 'column', [nombre]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Texto explicativo del alcance del estado, condiciones de transición y ejemplos de uso. Aporta claridad operativa, reduce errores de captura y sirve como guía para capacitación. No participa en reglas automáticas; su valor es documental y de gobierno del dato. Debe mantenerse alineada a políticas vigentes. Facilita auditorías al contextualizar decisiones.', 'Schema', [dbo], 'table', [cat_estado_orden_compra], 'column', [descripcion]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Marca de vigencia para nuevas asignaciones, permitiendo retirar estados del catálogo sin borrar referencias históricas. Las interfaces deben ocultar valores inactivos al seleccionar. No reinterpreta documentos ya emitidos; regula únicamente el uso futuro. Contribuye a mantener un dominio ordenado y estable. Su custodia recae en el administrador del catálogo.', 'Schema', [dbo], 'table', [cat_estado_orden_compra], 'column', [es_activo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha de alta del valor en el dominio, útil para auditoría y reconstrucción de línea de tiempo. No implica caducidad ni afecta lógica de procesos; es un dato contextual. Evidencia cuándo se incorporó formalmente el estado. Apoya políticas de revisión periódica del catálogo. Debe registrarse consistentemente.', 'Schema', [dbo], 'table', [cat_estado_orden_compra], 'column', [fecha_creacion]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_compra', 'CONSTRAINT', 'PK_cat_estado_orden_compra')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Identificador físico único para cada estado del ciclo de la OC. Optimiza joins y búsqueda por claves en Tbl_OrdenCompra. Permite planes de ejecución predecibles y elimina riesgos de duplicados. Es una pieza estructural para la trazabilidad del proceso de abastecimiento. La PK garantiza integridad y desempeño consistente.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_compra', 'CONSTRAINT', 'PK_cat_estado_orden_compra' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Identificador físico único para cada estado del ciclo de la OC. Optimiza joins y búsqueda por claves en Tbl_OrdenCompra. Permite planes de ejecución predecibles y elimina riesgos de duplicados. Es una pieza estructural para la trazabilidad del proceso de abastecimiento. La PK garantiza integridad y desempeño consistente.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_compra', 'CONSTRAINT', 'PK_cat_estado_orden_compra' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_compra', 'CONSTRAINT', 'UQ_cat_estado_orden_compra_Nombre')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Asegura unicidad de etiquetas de estado de compra. El índice subyacente acelera búsquedas por nombre y evita resultados ambiguos en tableros. La validación ocurre a nivel de motor y reduce fallback de validaciones en capa de presentación. Su mantenimiento es automático por SQL Server.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_compra', 'CONSTRAINT', 'UQ_cat_estado_orden_compra_Nombre' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Asegura unicidad de etiquetas de estado de compra. El índice subyacente acelera búsquedas por nombre y evita resultados ambiguos en tableros. La validación ocurre a nivel de motor y reduce fallback de validaciones en capa de presentación. Su mantenimiento es automático por SQL Server.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_compra', 'CONSTRAINT', 'UQ_cat_estado_orden_compra_Nombre' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_compra', 'CONSTRAINT', 'CK_cat_estado_orden_compra_EstadoBit')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Impone dominio binario al indicador de vigencia del estado. Este control simplifica lógicas de filtrado en consultas y restricciones de UI. El motor lo aplica por fila, preservando exactitud incluso en cargas masivas. Permite sunset controlado de estados sin borrado físico.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_compra', 'CONSTRAINT', 'CK_cat_estado_orden_compra_EstadoBit' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Impone dominio binario al indicador de vigencia del estado. Este control simplifica lógicas de filtrado en consultas y restricciones de UI. El motor lo aplica por fila, preservando exactitud incluso en cargas masivas. Permite sunset controlado de estados sin borrado físico.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_compra', 'CONSTRAINT', 'CK_cat_estado_orden_compra_EstadoBit' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_compra', 'CONSTRAINT', 'CK_cat_estado_orden_compra_NombreNotBlank')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Obliga a que la descripción de estado sea no vacía, fortaleciendo la consistencia del catálogo. Previene fallos en informes que esperan valores significativos. Su evaluación es determinista y de bajo costo. Protege contra entradas defectuosas de integraciones.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_compra', 'CONSTRAINT', 'CK_cat_estado_orden_compra_NombreNotBlank' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Obliga a que la descripción de estado sea no vacía, fortaleciendo la consistencia del catálogo. Previene fallos en informes que esperan valores significativos. Su evaluación es determinista y de bajo costo. Protege contra entradas defectuosas de integraciones.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_compra', 'CONSTRAINT', 'CK_cat_estado_orden_compra_NombreNotBlank' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_compra', 'CONSTRAINT', 'CK_cat_estado_orden_compra_NombreLista')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Normaliza el vocabulario del ciclo de compras con una lista cerrada. La restricción se aplica en el motor garantizando coherencia en todos los canales (UI, ETL, API). Facilita métricas por etapa y reduce “clases” funcionales espurias. Su modificación requiere cambio controlado del DDL, aportando gobernanza.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_compra', 'CONSTRAINT', 'CK_cat_estado_orden_compra_NombreLista' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Normaliza el vocabulario del ciclo de compras con una lista cerrada. La restricción se aplica en el motor garantizando coherencia en todos los canales (UI, ETL, API). Facilita métricas por etapa y reduce “clases” funcionales espurias. Su modificación requiere cambio controlado del DDL, aportando gobernanza.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_compra', 'CONSTRAINT', 'CK_cat_estado_orden_compra_NombreLista' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'cat_estado_orden_servicio', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Catálogo de control para el ciclo de vida de las órdenes de servicio. Define una lista cerrada de estados operativos (por ejemplo: abierta, cotizada, aprobada, en_proceso, cerrada, cancelada), garantizando trazabilidad, coordinación y reportes comparables. Evita etiquetas libres y permite desactivar estados sin pérdida de historia. Su centralización mejora la calidad del dato y la auditoría del proceso operativo.', 'SCHEMA', 'dbo', 'table', 'cat_estado_orden_servicio' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Catálogo de control para el ciclo de vida de las órdenes de servicio. Define una lista cerrada de estados operativos (por ejemplo: abierta, cotizada, aprobada, en_proceso, cerrada, cancelada), garantizando trazabilidad, coordinación y reportes comparables. Evita etiquetas libres y permite desactivar estados sin pérdida de historia. Su centralización mejora la calidad del dato y la auditoría del proceso operativo.', 'SCHEMA', 'dbo', 'table', 'cat_estado_orden_servicio' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Clave lógica única que identifica cada estado del ciclo de órdenes de servicio. Su objetivo es habilitar relaciones consistentes desde OrdenServicio sin depender de cadenas textuales susceptibles a error. Debe ser estable y no reemitirse para otro significado a lo largo del tiempo. Soporta trazabilidad en reportes de flujo (apertura, cotización, ejecución, cierre) y auditorías de estado. Es el pivote técnico del dominio y respalda la interoperabilidad entre módulos.', 'Schema', [dbo], 'table', [cat_estado_orden_servicio], 'column', [id_estado_os]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Denominación normalizada del estado operativo de las órdenes (ej.: abierta, cotizada, aprobada, en_proceso, cerrada, cancelada). Debe ser única para evitar confusión y para permitir filtros consistentes en consultas. Se administra centralizadamente como parte del gobierno del dato maestro. Cambios en el rótulo no afectan la identidad del estado, que la provee la PK. Sirve para comunicación con usuarios y generación de documentos.', 'Schema', [dbo], 'table', [cat_estado_orden_servicio], 'column', [nombre]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Detalle explicativo del estado, aclarando su uso, eventos que lo disparan y condiciones para transición. Fomenta una interpretación uniforme entre áreas operativas y reduce controversias por ambigüedad. Puede registrar políticas internas (ej., requisitos para aprobar o cerrar). No participa en claves ni en lógica de negocio directa; su valor es documental y de control. Facilita auditorías y capacitación.', 'Schema', [dbo], 'table', [cat_estado_orden_servicio], 'column', [descripcion]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Marca de vigencia del estado para asignaciones nuevas, sin afectar referencias históricas en órdenes ya registradas. Permite administrar el ciclo de vida del propio dominio sin realizar borrados, conservando la historia. Las pantallas deben respetar este indicador al ofrecer opciones. Evita proliferación de estados en desuso que contaminen reportes. Responsable de su mantenimiento: administración del catálogo.', 'Schema', [dbo], 'table', [cat_estado_orden_servicio], 'column', [es_activo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha de alta lógica en el catálogo, útil para reconstruir cuándo ingresó el estado al dominio. Apoya controles de cambio y verificación de políticas de gestión del dato. No altera comportamientos funcionales per se; contextualiza decisiones de diseño y adopciones. Puede complementar bitácoras externas de gobierno de datos. Se registra una sola vez y no requiere actualización periódica.', 'Schema', [dbo], 'table', [cat_estado_orden_servicio], 'column', [fecha_creacion]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_servicio', 'CONSTRAINT', 'PK_cast_orden_servicio')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'PK física que sustenta la identidad del estado de OS. Envía señal clara al optimizador para accesos por FK desde Tbl_OrdenServicio. Elimina duplicidad de registros y mejora la cardinalidad estimada en planes de consulta. Indispensable para auditoría del ciclo de taller. Su estabilidad es requisito para reproducibilidad.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_servicio', 'CONSTRAINT', 'PK_cast_orden_servicio' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'PK física que sustenta la identidad del estado de OS. Envía señal clara al optimizador para accesos por FK desde Tbl_OrdenServicio. Elimina duplicidad de registros y mejora la cardinalidad estimada en planes de consulta. Indispensable para auditoría del ciclo de taller. Su estabilidad es requisito para reproducibilidad.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_servicio', 'CONSTRAINT', 'PK_cast_orden_servicio' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_servicio', 'CONSTRAINT', 'UQ_cat_estado_orden_servicio_Nombre')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'El índice único previene etiquetas repetidas, blindando la semántica del flujo operativo. Mejora la performance en búsquedas por nombre y en validaciones de UI. Su mantenimiento recae en el motor, sin necesidad de triggers. Reduce significativamente limpieza posterior de datos.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_servicio', 'CONSTRAINT', 'UQ_cat_estado_orden_servicio_Nombre' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'El índice único previene etiquetas repetidas, blindando la semántica del flujo operativo. Mejora la performance en búsquedas por nombre y en validaciones de UI. Su mantenimiento recae en el motor, sin necesidad de triggers. Reduce significativamente limpieza posterior de datos.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_servicio', 'CONSTRAINT', 'UQ_cat_estado_orden_servicio_Nombre' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_servicio', 'CONSTRAINT', 'CK_cat_estado_orden_servicio_EstadoBit')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Controla vigencia binaria, permitiendo “apagar” estados sin perder historia. Esta simplificación impacta positivamente en reporting y autorizaciones. La verificación nativa minimiza dependencia de reglas en capa de aplicación. Costo de evaluación mínimo.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_servicio', 'CONSTRAINT', 'CK_cat_estado_orden_servicio_EstadoBit' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Controla vigencia binaria, permitiendo “apagar” estados sin perder historia. Esta simplificación impacta positivamente en reporting y autorizaciones. La verificación nativa minimiza dependencia de reglas en capa de aplicación. Costo de evaluación mínimo.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_servicio', 'CONSTRAINT', 'CK_cat_estado_orden_servicio_EstadoBit' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_servicio', 'CONSTRAINT', 'CK_cat_estado_orden_servicio_NombreNotBlank')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Impide valores vacíos, fortaleciendo integridad semántica. Evita errores en renders de UI y exportaciones. Su naturaleza escalar hace la validación muy barata computacionalmente. Funciona idéntico en operaciones bulk dentro de transacción.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_servicio', 'CONSTRAINT', 'CK_cat_estado_orden_servicio_NombreNotBlank' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Impide valores vacíos, fortaleciendo integridad semántica. Evita errores en renders de UI y exportaciones. Su naturaleza escalar hace la validación muy barata computacionalmente. Funciona idéntico en operaciones bulk dentro de transacción.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_servicio', 'CONSTRAINT', 'CK_cat_estado_orden_servicio_NombreNotBlank' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_servicio', 'CONSTRAINT', 'CK_cat_estado_orden_servicio_NombreLista')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Establece un dominio cerrado simple, suficiente para el flujo actual. El motor bloquea valores fuera del conjunto, evitando derivas funcionales. Facilita KPIs de avance y análisis de cuellos de botella. Si el catálogo evoluciona, el cambio se orquesta en DDL con control de despliegue.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_servicio', 'CONSTRAINT', 'CK_cat_estado_orden_servicio_NombreLista' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Establece un dominio cerrado simple, suficiente para el flujo actual. El motor bloquea valores fuera del conjunto, evitando derivas funcionales. Facilita KPIs de avance y análisis de cuellos de botella. Si el catálogo evoluciona, el cambio se orquesta en DDL con control de despliegue.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_orden_servicio', 'CONSTRAINT', 'CK_cat_estado_orden_servicio_NombreLista' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'cat_estado_pago', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Catálogo que normaliza los estados de pago de las facturas, asegurando coherencia financiera y uniformidad fiscal. Estandariza etiquetas como “pendiente”, “pagada” o “anulada” para eliminar variantes y facilitar la medición de cartera. Admite la inactivación de valores obsoletos sin afectar históricos. Es referencia única para conciliaciones, auditorías y tableros de cobranza, mejorando la gobernanza del dato contable.', 'SCHEMA', 'dbo', 'table', 'cat_estado_pago' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Catálogo que normaliza los estados de pago de las facturas, asegurando coherencia financiera y uniformidad fiscal. Estandariza etiquetas como “pendiente”, “pagada” o “anulada” para eliminar variantes y facilitar la medición de cartera. Admite la inactivación de valores obsoletos sin afectar históricos. Es referencia única para conciliaciones, auditorías y tableros de cobranza, mejorando la gobernanza del dato contable.', 'SCHEMA', 'dbo', 'table', 'cat_estado_pago' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identificador lógico del estado de pago de documentos (p. ej., facturas), asegurando relaciones consistentes con el módulo financiero. Es una clave sin significado de negocio por sí misma, diseñada para estabilidad y trazabilidad. Evita depender de etiquetas que podrían cambiar por normativas o criterios internos. Su unicidad impide colisiones semánticas y facilita auditoría. Actúa como vértice técnico para controles y reportes de cartera.', 'Schema', [dbo], 'table', [cat_estado_pago], 'column', [id_estado_pago]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Etiqueta del estado de pago (ej.: pendiente, pagada, anulada) publicada a usuarios y reportes. Debe ser única, clara y breve, promoviendo lectura homogénea en toda la organización. Se gestiona de forma centralizada para evitar variantes terminológicas y garantizar comparabilidad histórica. No se usa como clave en relaciones; sirve de presentación human-readable. Cambios de denominación se documentan sin alterar la identidad técnica del estado.', 'Schema', [dbo], 'table', [cat_estado_pago], 'column', [nombre]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Descripción extendida del criterio de uso de cada estado, incluyendo ejemplos y excepciones. Mejora la comprensión inter-áreas (ventas, cobranza, contabilidad) y reduce inconsistencias al aplicar estados. Puede especificar implicancias contables o fiscales a nivel informativo. Su rol es documental, no operativo. Aporta valor a la documentación automática y a procesos de auditoría.', 'Schema', [dbo], 'table', [cat_estado_pago], 'column', [descripcion]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Controla si el estado puede ser seleccionado en nuevos documentos, preservando la integridad de históricos. Permite retirar valores obsoletos sin romper referencialidad. Las interfaces deben filtrar opciones inactivas, manteniendo limpieza del dominio. Esta señal no reinterpreta documentos ya emitidos; sólo regula nuevas asignaciones. Su mantenimiento corresponde a la administración del catálogo.', 'Schema', [dbo], 'table', [cat_estado_pago], 'column', [es_activo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha lógica de incorporación del estado al dominio, con utilidad en auditorías y control de gestión del dato. No tiene efectos computacionales directos; contextualiza la evolución del catálogo. Ayuda a rastrear cuándo se habilitaron nuevas prácticas o se consolidaron terminologías. Puede ser insumo para políticas internas de cambios. Se registra a modo de referencia histórica.', 'Schema', [dbo], 'table', [cat_estado_pago], 'column', [fecha_creacion]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_pago', 'CONSTRAINT', 'PK_cast_estado_pago')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Define la identidad a nivel físico de cada estado de pago, fundamental para conciliación y auditoría. Su existencia garantiza integridad referencial con documentos contables. Provee buenos selectores de planes de ejecución. Es constante en el tiempo y no debe reciclarse.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_pago', 'CONSTRAINT', 'PK_cast_estado_pago' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Define la identidad a nivel físico de cada estado de pago, fundamental para conciliación y auditoría. Su existencia garantiza integridad referencial con documentos contables. Provee buenos selectores de planes de ejecución. Es constante en el tiempo y no debe reciclarse.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_pago', 'CONSTRAINT', 'PK_cast_estado_pago' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_pago', 'CONSTRAINT', 'UQ_cat_estado_pago_Nombre')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita entradas duplicadas (p. ej., dos “pagado”). Al residir en el motor, la validación es inmediata y transaccional. Mejora el rendimiento de consultas por nombre y elimina ambigüedad en reporting financiero. Su mantenimiento es automático.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_pago', 'CONSTRAINT', 'UQ_cat_estado_pago_Nombre' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita entradas duplicadas (p. ej., dos “pagado”). Al residir en el motor, la validación es inmediata y transaccional. Mejora el rendimiento de consultas por nombre y elimina ambigüedad en reporting financiero. Su mantenimiento es automático.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_pago', 'CONSTRAINT', 'UQ_cat_estado_pago_Nombre' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_pago', 'CONSTRAINT', 'CK_cat_estado_pago_EstadoBit')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Restringe el dominio a 0/1, simplificando lógicas de proceso y segmentación. El motor rechaza escrituras fuera del rango, incluso si provienen de cargas externas. Ayuda a mantener el dato maestro limpio y coherente con auditorías.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_pago', 'CONSTRAINT', 'CK_cat_estado_pago_EstadoBit' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Restringe el dominio a 0/1, simplificando lógicas de proceso y segmentación. El motor rechaza escrituras fuera del rango, incluso si provienen de cargas externas. Ayuda a mantener el dato maestro limpio y coherente con auditorías.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_pago', 'CONSTRAINT', 'CK_cat_estado_pago_EstadoBit' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_pago', 'CONSTRAINT', 'CK_cat_estado_pago_NombreNotBlank')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Bloquea cadenas vacías en las etiquetas de estado de pago. Esta defensa de nivel físico asegura que los informes y validaciones contables operen sobre descriptores válidos. El coste computacional es mínimo y no afecta el throughput. Configuración portable entre ambientes.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_pago', 'CONSTRAINT', 'CK_cat_estado_pago_NombreNotBlank' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Bloquea cadenas vacías en las etiquetas de estado de pago. Esta defensa de nivel físico asegura que los informes y validaciones contables operen sobre descriptores válidos. El coste computacional es mínimo y no afecta el throughput. Configuración portable entre ambientes.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_pago', 'CONSTRAINT', 'CK_cat_estado_pago_NombreNotBlank' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_pago', 'CONSTRAINT', 'CK_cat_estado_pago_NombreLista')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Vocabulario controlado que alinea el estado de pago con políticas de finanzas. Evita divergencias terminológicas entre sistemas. Facilita conciliaciones y cierres periódicos. Cualquier modificación se controla con cambios de DDL versionados.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_pago', 'CONSTRAINT', 'CK_cat_estado_pago_NombreLista' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Vocabulario controlado que alinea el estado de pago con políticas de finanzas. Evita divergencias terminológicas entre sistemas. Facilita conciliaciones y cierres periódicos. Cualquier modificación se controla con cambios de DDL versionados.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_pago', 'CONSTRAINT', 'CK_cat_estado_pago_NombreLista' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'cat_estado_registro', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Catálogo unificado de estado de registro (p. ej., activo, inactivo, bloqueado) para entidades maestras como Cliente, Empleado y Proveedor. Sustituye listas dispersas y consolida la gobernanza del dato, reduciendo variantes terminológicas. Permite desactivar valores sin borrar, preservando historia. Mejora la coherencia de reportes y facilita políticas comunes de alta/baja. Es la referencia única para el estado genérico de participación de los maestros.', 'SCHEMA', 'dbo', 'table', 'cat_estado_registro' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Catálogo unificado de estado de registro (p. ej., activo, inactivo, bloqueado) para entidades maestras como Cliente, Empleado y Proveedor. Sustituye listas dispersas y consolida la gobernanza del dato, reduciendo variantes terminológicas. Permite desactivar valores sin borrar, preservando historia. Mejora la coherencia de reportes y facilita políticas comunes de alta/baja. Es la referencia única para el estado genérico de participación de los maestros.', 'SCHEMA', 'dbo', 'table', 'cat_estado_registro' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Clave técnica que identifica unívocamente el estado de un registro maestro. Evita depender de textos y estabiliza relaciones con entidades hijas. No se reutiliza para otro significado, preservando trazabilidad histórica. Actúa como ancla para políticas comunes de activación y desactivación. Soporta auditorías y control interno.', 'Schema', [dbo], 'table', [cat_estado_registro], 'column', [id_estado_reg]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Etiqueta normalizada del estado (activo, inactivo, bloqueado), única para evitar ambigüedad. Su gestión centralizada garantiza homogeneidad entre maestros. No se usa como clave relacional; su función es comunicativa. Cambios de rótulo se documentan sin alterar la identidad técnica. Facilita filtros y reportes coherentes.', 'Schema', [dbo], 'table', [cat_estado_registro], 'column', [nombre]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Aclaración del significado y uso del estado, con ejemplos y condiciones de cambio. Alinea expectativas entre áreas, reduciendo errores por interpretaciones. No participa en validaciones; es documental y de capacitación. Debe mantenerse conforme a políticas vigentes. Aporta valor en auditorías.', 'Schema', [dbo], 'table', [cat_estado_registro], 'column', [descripcion]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Indica si el estado puede asignarse en nuevas altas, preservando referencias en históricos. Permite retirar opciones sin borrar registros. Las interfaces deben respetar esta señal al ofrecer valores. No reinterpreta registros previos; regula el uso futuro. Contribuye al orden y limpieza del dominio.', 'Schema', [dbo], 'table', [cat_estado_registro], 'column', [es_activo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Registro de alta lógica en el catálogo, útil para control de cambios y evidencia histórica. No impone comportamientos; brinda contexto. Ayuda a trazar cuándo se adoptó una etiqueta particular. Complementa procesos de revisión del dominio maestro.', 'Schema', [dbo], 'table', [cat_estado_registro], 'column', [fecha_creacion]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_registro', 'CONSTRAINT', 'PK_cat_estado_registro')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'PK para el estado general (activo/inactivo) de entidades maestras. Proporciona acceso eficiente por FK, robustece el modelo y simplifica gobernanza de datos. Es estable y soporta auditoría. Sus propiedades físicas mejoran los planes de consulta.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_registro', 'CONSTRAINT', 'PK_cat_estado_registro' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'PK para el estado general (activo/inactivo) de entidades maestras. Proporciona acceso eficiente por FK, robustece el modelo y simplifica gobernanza de datos. Es estable y soporta auditoría. Sus propiedades físicas mejoran los planes de consulta.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_registro', 'CONSTRAINT', 'PK_cat_estado_registro' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_registro', 'CONSTRAINT', 'UQ_cat_estado_registro_Nombre')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Garantiza etiquetas únicas, reduciendo duplicidad en segmentaciones. Al estar en el motor, evita inconsistencias derivadas de integraciones. Incrementa la confiabilidad de reportes que pivotan por estado. Su índice ayuda al rendimiento.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_registro', 'CONSTRAINT', 'UQ_cat_estado_registro_Nombre' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Garantiza etiquetas únicas, reduciendo duplicidad en segmentaciones. Al estar en el motor, evita inconsistencias derivadas de integraciones. Incrementa la confiabilidad de reportes que pivotan por estado. Su índice ayuda al rendimiento.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_registro', 'CONSTRAINT', 'UQ_cat_estado_registro_Nombre' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_registro', 'CONSTRAINT', 'CK_cat_estado_registro_EstadoBit')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Controla dominio binario para la propia vigencia del catálogo. Mantiene homogeneidad y simplifica filtros. Verificación muy barata aplicada de forma transaccional. Minimiza la lógica correctiva posterior.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_registro', 'CONSTRAINT', 'CK_cat_estado_registro_EstadoBit' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Controla dominio binario para la propia vigencia del catálogo. Mantiene homogeneidad y simplifica filtros. Verificación muy barata aplicada de forma transaccional. Minimiza la lógica correctiva posterior.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_registro', 'CONSTRAINT', 'CK_cat_estado_registro_EstadoBit' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_registro', 'CONSTRAINT', 'CK_cat_estado_registro_NombreNotBlank')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Impide registrar etiquetas vacías, garantizando integridad semántica en la base. Reduce problemas en exportaciones y validaciones por lotes. Costo ínfimo y alto retorno en calidad de datos.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_registro', 'CONSTRAINT', 'CK_cat_estado_registro_NombreNotBlank' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Impide registrar etiquetas vacías, garantizando integridad semántica en la base. Reduce problemas en exportaciones y validaciones por lotes. Costo ínfimo y alto retorno en calidad de datos.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_registro', 'CONSTRAINT', 'CK_cat_estado_registro_NombreNotBlank' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_registro', 'CONSTRAINT', 'CK_cat_estado_registro_NombreLista')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Establece un conjunto cerrado simple que alinea definiciones en toda la plataforma. Facilita reglas de negocio uniformes y reduce casos borde. El cambio de esta lista debe estar gobernado por DDL versionado.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_registro', 'CONSTRAINT', 'CK_cat_estado_registro_NombreLista' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Establece un conjunto cerrado simple que alinea definiciones en toda la plataforma. Facilita reglas de negocio uniformes y reduce casos borde. El cambio de esta lista debe estar gobernado por DDL versionado.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_registro', 'CONSTRAINT', 'CK_cat_estado_registro_NombreLista' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'cat_estado_repuesto', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Catálogo maestro que define la vigencia y condición de los repuestos, unificando etiquetas como activo, inactivo o descontinuado. Su objetivo es estabilizar el dato a nivel de abastecimiento, ventas e inventario, evitando variantes que compliquen reportes o integraciones. Admite desactivar valores sin eliminar registros, manteniendo historia. Mejora la calidad de clasificación y la trazabilidad de cambios. Provee contexto estandarizado para auditorías y decisiones de portafolio.', 'SCHEMA', 'dbo', 'table', 'cat_estado_repuesto' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Catálogo maestro que define la vigencia y condición de los repuestos, unificando etiquetas como activo, inactivo o descontinuado. Su objetivo es estabilizar el dato a nivel de abastecimiento, ventas e inventario, evitando variantes que compliquen reportes o integraciones. Admite desactivar valores sin eliminar registros, manteniendo historia. Mejora la calidad de clasificación y la trazabilidad de cambios. Provee contexto estandarizado para auditorías y decisiones de portafolio.', 'SCHEMA', 'dbo', 'table', 'cat_estado_repuesto' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Clave técnica única para identificar el estado de un repuesto, evitando dependencia de etiquetas. Su estabilidad facilita relaciones consistentes con procesos de compra y venta. Debe ser no reutilizable a fin de preservar la trazabilidad del dominio. Es el ancla para auditorías y análisis de disponibilidad. Permite interoperabilidad con otros módulos sin romper referencialidad.', 'Schema', [dbo], 'table', [cat_estado_repuesto], 'column', [id_estado_rep]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Etiqueta compacta y normalizada que indica la vigencia o condición del repuesto. Debe ser única para eliminar ambigüedad en consultas y reportes. Su administración central evita variantes tipográficas y promueve homogeneidad en la operación. No se usa como clave relacional; es un descriptor de negocio. Cambios en el rótulo se documentan sin alterar la identidad técnica.', 'Schema', [dbo], 'table', [cat_estado_repuesto], 'column', [nombre]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Aclaración de uso para cada estado, incluyendo criterios de asignación y ejemplos. Mejora la comprensión entre compras, almacén y ventas, reduciendo errores de clasificación. No participa en validaciones; su aporte es documental y de capacitación. Debe mantenerse al día conforme cambien políticas. Facilita auditoría contextual de decisiones.', 'Schema', [dbo], 'table', [cat_estado_repuesto], 'column', [descripcion]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Indica si el estado se ofrece en selecciones futuras, preservando referencias en registros históricos. Permite “retirar” sin borrar, manteniendo orden y limpieza del dominio. Las interfaces deben filtrar valores inactivos. No modifica la semántica de repuestos ya clasificados; regula el uso futuro. Es parte de la gobernanza del dato maestro.', 'Schema', [dbo], 'table', [cat_estado_repuesto], 'column', [es_activo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Momento de alta lógica del valor en el catálogo. Es útil para trazar evolución y demostrar control de cambios. No impone efectos automáticos; contextualiza la incorporación del estado. Sirve de respaldo en auditorías y políticas internas de revisión. Debe registrarse en el momento de creación del registro.', 'Schema', [dbo], 'table', [cat_estado_repuesto], 'column', [fecha_creacion]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_repuesto', 'CONSTRAINT', 'PK_cat_estado_repuesto')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Clave primaria que define la identidad física de cada estado aplicable a repuestos. Optimiza accesos por FKs, evita duplicidad de registros y soporta estrategias de indexación clustered. La PK impide colisiones de identificadores durante cargas concurrentes. Es fundamental para preservar integridad referencial con módulos de inventario y compras. Su estabilidad en el tiempo permite auditorías históricas reproducibles.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_repuesto', 'CONSTRAINT', 'PK_cat_estado_repuesto' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Clave primaria que define la identidad física de cada estado aplicable a repuestos. Optimiza accesos por FKs, evita duplicidad de registros y soporta estrategias de indexación clustered. La PK impide colisiones de identificadores durante cargas concurrentes. Es fundamental para preservar integridad referencial con módulos de inventario y compras. Su estabilidad en el tiempo permite auditorías históricas reproducibles.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_repuesto', 'CONSTRAINT', 'PK_cat_estado_repuesto' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_repuesto', 'CONSTRAINT', 'UQ_cat_estado_repuesto_Nombre')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Restringe a nivel de motor las etiquetas repetidas (p. ej., dos “activo”). Este índice único mejora la selectividad de consultas por nombre y previene inconsistencias al exportar catálogos. Al eliminar ambigüedad en el dato maestro, disminuye también la lógica de saneamiento en procesos batch. Cualquier intento de duplicación falla atómicamente en la transacción. Compatible con estrategias de reconstrucción de índices.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_repuesto', 'CONSTRAINT', 'UQ_cat_estado_repuesto_Nombre' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Restringe a nivel de motor las etiquetas repetidas (p. ej., dos “activo”). Este índice único mejora la selectividad de consultas por nombre y previene inconsistencias al exportar catálogos. Al eliminar ambigüedad en el dato maestro, disminuye también la lógica de saneamiento en procesos batch. Cualquier intento de duplicación falla atómicamente en la transacción. Compatible con estrategias de reconstrucción de índices.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_repuesto', 'CONSTRAINT', 'UQ_cat_estado_repuesto_Nombre' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_repuesto', 'CONSTRAINT', 'CK_cat_estado_repuesto_EstadoBit')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Asegura que solo se almacenen valores válidos para el indicador de vigencia. La comprobación se aplica en inserciones y actualizaciones, garantizando uniformidad binaria del campo y facilitando segmentaciones eficientes. Resulta útil para implementar soft delete o catálogos “congelados”. Su implementación nativa evita dependencias de validación a nivel aplicación.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_repuesto', 'CONSTRAINT', 'CK_cat_estado_repuesto_EstadoBit' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Asegura que solo se almacenen valores válidos para el indicador de vigencia. La comprobación se aplica en inserciones y actualizaciones, garantizando uniformidad binaria del campo y facilitando segmentaciones eficientes. Resulta útil para implementar soft delete o catálogos “congelados”. Su implementación nativa evita dependencias de validación a nivel aplicación.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_repuesto', 'CONSTRAINT', 'CK_cat_estado_repuesto_EstadoBit' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_repuesto', 'CONSTRAINT', 'CK_cat_estado_repuesto_NombreNotBlank')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Bloquea el ingreso de descripciones vacías. El motor salva la consistencia documental al nivel de almacenamiento, útil cuando existen múltiples orígenes de datos. Es una defensa adicional frente a cargas CSV/Excel. Permite explotar UQs e índices sin “ruido” de strings vacíos. Impacto ínfimo en coste de escritura.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_repuesto', 'CONSTRAINT', 'CK_cat_estado_repuesto_NombreNotBlank' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Bloquea el ingreso de descripciones vacías. El motor salva la consistencia documental al nivel de almacenamiento, útil cuando existen múltiples orígenes de datos. Es una defensa adicional frente a cargas CSV/Excel. Permite explotar UQs e índices sin “ruido” de strings vacíos. Impacto ínfimo en coste de escritura.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_repuesto', 'CONSTRAINT', 'CK_cat_estado_repuesto_NombreNotBlank' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_repuesto', 'CONSTRAINT', 'CK_cat_estado_repuesto_NombreLista')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Define un conjunto controlado orientado a procesos de inventario y mantenimiento. Al estar en DDL, esta regla se ejecuta de forma sincrónica y transaccional, descartando inconsistencias en tiempo real. Simplifica reglas de cálculo y flujos de aprobación. Su mantenimiento es centralizado, minimizando divergencias entre ambientes. ', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_repuesto', 'CONSTRAINT', 'CK_cat_estado_repuesto_NombreLista' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Define un conjunto controlado orientado a procesos de inventario y mantenimiento. Al estar en DDL, esta regla se ejecuta de forma sincrónica y transaccional, descartando inconsistencias en tiempo real. Simplifica reglas de cálculo y flujos de aprobación. Su mantenimiento es centralizado, minimizando divergencias entre ambientes. ', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_repuesto', 'CONSTRAINT', 'CK_cat_estado_repuesto_NombreLista' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'cat_estado_vehiculo', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Catálogo maestro que define el conjunto permitido de estados operativos para las unidades. Su objetivo es eliminar variantes tipográficas y asegurar una codificación única y estable del dato de estado a lo largo del tiempo. La tabla permite activar/desactivar valores sin perder historia, soportando transiciones como disponibilidad, reserva o venta. Centraliza la semántica del proceso para informes homogéneos y auditorías. Su uso normaliza la captura y evita inconsistencias entre áreas operativas y comerciales.', 'SCHEMA', 'dbo', 'table', 'cat_estado_vehiculo' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Catálogo maestro que define el conjunto permitido de estados operativos para las unidades. Su objetivo es eliminar variantes tipográficas y asegurar una codificación única y estable del dato de estado a lo largo del tiempo. La tabla permite activar/desactivar valores sin perder historia, soportando transiciones como disponibilidad, reserva o venta. Centraliza la semántica del proceso para informes homogéneos y auditorías. Su uso normaliza la captura y evita inconsistencias entre áreas operativas y comerciales.', 'SCHEMA', 'dbo', 'table', 'cat_estado_vehiculo' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identificador lógico único del estado de vehículo dentro del dominio de referencia. Se utiliza como clave primaria para asegurar unicidad y permitir la relación consistente desde entidades operativas (p. ej., Vehículo) sin acoplarse a etiquetas textuales. Debe ser estable en el tiempo y no reutilizable, preservando la trazabilidad histórica de los valores. Su asignación responde a criterios administrativos del catálogo y no a atributos del negocio. Actúa como ancla semántica para reportes y auditorías, evitando dependencias de nombres o traducciones.', 'Schema', [dbo], 'table', [cat_estado_vehiculo], 'column', [id_estado_vehiculo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Etiqueta normalizada y legible del estado (ej.: disponible, reservado, vendido) que los usuarios reconocerán en interfaces y reportes. Debe ser única dentro del catálogo para evitar ambigüedad y favorecer la uniformidad semántica en todo el sistema. Se gestiona centralizadamente para prevenir variantes tipográficas y cambios no controlados. Su función es comunicativa; no debe usarse como clave técnica en relaciones. Cambios en esta etiqueta deben registrarse como actualización del catálogo sin romper la historia del identificador.', 'Schema', [dbo], 'table', [cat_estado_vehiculo], 'column', [nombre]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Texto explicativo que documenta el alcance, condiciones de uso y límites de cada estado del vehículo. Ayuda a estandarizar la interpretación entre áreas (comercial, taller, inventario) y reduce incidencias por significados implícitos. Puede incluir ejemplos y notas sobre transiciones permitidas o prohibidas. No participa en relaciones ni en lógica transaccional, pero enriquece la documentación generada automáticamente. Su mantenimiento es opcional, recomendado para capacitación y auditoría.', 'Schema', [dbo], 'table', [cat_estado_vehiculo], 'column', [descripcion]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Indicador lógico que determina si el valor del estado está vigente para nuevas asignaciones en las entidades hijas. Permite descontinuar opciones sin eliminar registros, preservando la consistencia de históricos y la integridad referencial. Debe usarse por las interfaces para filtrar opciones disponibles al usuario. No modifica la semántica de registros ya históricos; actúa como política de disponibilidad hacia futuro. Su administración es responsabilidad del custodio del catálogo.', 'Schema', [dbo], 'table', [cat_estado_vehiculo], 'column', [es_activo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha lógica de alta del valor en el catálogo, útil para auditorías, controles de cambio y análisis de adopción. No implica temporalidad del uso en registros hijos, sino el momento en que el dominio incorporó formalmente el estado. Facilita reconstruir líneas de tiempo del catálogo y validar prácticas de gobernanza de datos. Puede emplearse para políticas internas (por ejemplo, congelar cambios tras cierto período). Se mantiene como dato informativo, sin efectos automáticos sobre relaciones.', 'Schema', [dbo], 'table', [cat_estado_vehiculo], 'column', [fecha_creacion]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_vehiculo', 'CONSTRAINT', 'PK_cast_estado_vehiculo')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Clave primaria física en dbo.cat_estado_vehiculo que garantiza unicidad y direcciona la indexación clustered por defecto. Su definición a nivel DDL fuerza la no duplicidad de id_estado_vehiculo y habilita planes de ejecución eficientes en joins y FKs desde Tbl_Vehiculo. Esta PK es estable y no debe reciclarse para preservar la trazabilidad. Cualquier intento de insertar o actualizar un registro con un identificador ya existente fallará en tiempo de ejecución. Es la base para integridad referencial y desempeño de consultas.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_vehiculo', 'CONSTRAINT', 'PK_cast_estado_vehiculo' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Clave primaria física en dbo.cat_estado_vehiculo que garantiza unicidad y direcciona la indexación clustered por defecto. Su definición a nivel DDL fuerza la no duplicidad de id_estado_vehiculo y habilita planes de ejecución eficientes en joins y FKs desde Tbl_Vehiculo. Esta PK es estable y no debe reciclarse para preservar la trazabilidad. Cualquier intento de insertar o actualizar un registro con un identificador ya existente fallará en tiempo de ejecución. Es la base para integridad referencial y desempeño de consultas.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_vehiculo', 'CONSTRAINT', 'PK_cast_estado_vehiculo' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_vehiculo', 'CONSTRAINT', 'UQ_cat_estado_vehiculo_Nombre')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Índice único sobre nombre que impide duplicados a nivel de motor. SQL Server valida la unicidad antes de confirmar la transacción, evitando ambigüedades semánticas en selectores y reportes. Esta restricción también habilita planes de consulta más selectivos al explotar el índice subyacente. Reduce costos de mantenimiento preventivo, porque el sistema evita inconsistencias en origen. Se recomienda normalizar espacios y mayúsculas en capa de aplicación para maximizar su eficacia.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_vehiculo', 'CONSTRAINT', 'UQ_cat_estado_vehiculo_Nombre' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Índice único sobre nombre que impide duplicados a nivel de motor. SQL Server valida la unicidad antes de confirmar la transacción, evitando ambigüedades semánticas en selectores y reportes. Esta restricción también habilita planes de consulta más selectivos al explotar el índice subyacente. Reduce costos de mantenimiento preventivo, porque el sistema evita inconsistencias en origen. Se recomienda normalizar espacios y mayúsculas en capa de aplicación para maximizar su eficacia.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_vehiculo', 'CONSTRAINT', 'UQ_cat_estado_vehiculo_Nombre' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_vehiculo', 'CONSTRAINT', 'CK_cat_estado_vehiculo_EstadoBit')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Regla de validación física que restringe el dominio de estado a valores binarios (0/1). SQL Server evaluará la expresión para cada fila afectada e impedirá escrituras inválidas, asegurando que la lógica de “vigente/no vigente” sea consistente a nivel de almacenamiento. Esta constraint simplifica filtros y particiones lógicas sin crear columnas auxiliares. Además, reduce el riesgo de valores “huérfanos” por errores de carga masiva. Su costo de evaluación es mínimo y constante.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_vehiculo', 'CONSTRAINT', 'CK_cat_estado_vehiculo_EstadoBit' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Regla de validación física que restringe el dominio de estado a valores binarios (0/1). SQL Server evaluará la expresión para cada fila afectada e impedirá escrituras inválidas, asegurando que la lógica de “vigente/no vigente” sea consistente a nivel de almacenamiento. Esta constraint simplifica filtros y particiones lógicas sin crear columnas auxiliares. Además, reduce el riesgo de valores “huérfanos” por errores de carga masiva. Su costo de evaluación es mínimo y constante.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_vehiculo', 'CONSTRAINT', 'CK_cat_estado_vehiculo_EstadoBit' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_vehiculo', 'CONSTRAINT', 'CK_cat_estado_vehiculo_NombreNotBlank')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita cadenas vacías o compuestas solo por espacios en nombre mediante evaluación directa en el motor. La validación en DDL garantiza calidad de datos incluso si una integración ignora reglas de UI. Esto repercute en informes más limpios y en la estabilidad de claves alternativas. Al ser una función escalar simple, el impacto en rendimiento es despreciable. La constraint se ejecuta por fila y se replica automáticamente en operaciones bulk con transacción.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_vehiculo', 'CONSTRAINT', 'CK_cat_estado_vehiculo_NombreNotBlank' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita cadenas vacías o compuestas solo por espacios en nombre mediante evaluación directa en el motor. La validación en DDL garantiza calidad de datos incluso si una integración ignora reglas de UI. Esto repercute en informes más limpios y en la estabilidad de claves alternativas. Al ser una función escalar simple, el impacto en rendimiento es despreciable. La constraint se ejecuta por fila y se replica automáticamente en operaciones bulk con transacción.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_vehiculo', 'CONSTRAINT', 'CK_cat_estado_vehiculo_NombreNotBlank' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_vehiculo', 'CONSTRAINT', 'CK_cat_estado_vehiculo_NombreLista')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Lista cerrada implementada en el nivel físico para asegurar vocabulario controlado. El motor bloquea cualquier valor fuera del conjunto declarado, manteniendo homogénea la semántica de estado de inventario. Esta medida simplifica validaciones downstream y reduce transformaciones en ETL. Si la política cambia, la constraint se ajusta coordinadamente y se versiona su DDL. Al ser una verificación por conjunto pequeño, el coste es constante y muy bajo.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_vehiculo', 'CONSTRAINT', 'CK_cat_estado_vehiculo_NombreLista' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Lista cerrada implementada en el nivel físico para asegurar vocabulario controlado. El motor bloquea cualquier valor fuera del conjunto declarado, manteniendo homogénea la semántica de estado de inventario. Esta medida simplifica validaciones downstream y reduce transformaciones en ETL. Si la política cambia, la constraint se ajusta coordinadamente y se versiona su DDL. Al ser una verificación por conjunto pequeño, el coste es constante y muy bajo.', 'SCHEMA', 'dbo', 'TABLE', 'cat_estado_vehiculo', 'CONSTRAINT', 'CK_cat_estado_vehiculo_NombreLista' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'cat_forma_envio', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Catálogo de modalidades logísticas empleadas en compras y recepción de mercadería. Establece un conjunto controlado de opciones (por ejemplo, retiro, mensajería, paquetería, transporte propio), evitando tipificaciones libres y mejorando la coordinación operativa. Su centralización facilita la estandarización de reportes de tiempos y costos de envío, y permite activar o desactivar alternativas sin perder historia.', 'SCHEMA', 'dbo', 'table', 'cat_forma_envio' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Catálogo de modalidades logísticas empleadas en compras y recepción de mercadería. Establece un conjunto controlado de opciones (por ejemplo, retiro, mensajería, paquetería, transporte propio), evitando tipificaciones libres y mejorando la coordinación operativa. Su centralización facilita la estandarización de reportes de tiempos y costos de envío, y permite activar o desactivar alternativas sin perder historia.', 'SCHEMA', 'dbo', 'table', 'cat_forma_envio' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identificador lógico único de la modalidad de envío utilizada en órdenes de compra u operaciones logísticas. Proporciona un ancla técnica estable para relacionar documentos sin depender de descripciones textuales susceptibles a cambios. Debe ser no reutilizable, facilitando trazabilidad histórica y auditorías. Su función es sostener la integridad relacional y la interoperabilidad con otros módulos. Constituye el pivote del dominio logístico en el modelo.', 'Schema', [dbo], 'table', [cat_forma_envio], 'column', [id_forma_envio]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Denominación normalizada de la modalidad (ej.: retiro, mensajería, paquetería, transporte propio), visible en interfaces y reportes. La unicidad evita confusión y asegura comparabilidad de indicadores operativos. Se administra centralmente para impedir variantes y mantener la consistencia en toda la organización. No es clave relacional; su rol es comunicacional. Cambios en el rótulo no invalidan la identidad del valor.', 'Schema', [dbo], 'table', [cat_forma_envio], 'column', [nombre]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Detalle explicativo sobre alcance, condiciones y restricciones de uso de cada forma de envío. Facilita acuerdos entre compras, logística y recepción, reduciendo malentendidos operativos. Puede incluir ejemplos y notas de costos o tiempos típicos a nivel informativo. No incide en reglas de integridad, pero fortalece la documentación y el entrenamiento. Se recomienda mantenerla actualizada ante cambios procedimentales.', 'Schema', [dbo], 'table', [cat_forma_envio], 'column', [descripcion]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Marca de disponibilidad para asignaciones nuevas, permitiendo retirar opciones sin borrar registros y conservando la historia. Las interfaces deben filtrar las formas inactivas al momento de selección. No reinterpreta documentos previos; regula uso futuro. Es una herramienta de gobierno del dato maestro para mantener el catálogo ordenado. Su gestión corresponde al área responsable del proceso logístico.', 'Schema', [dbo], 'table', [cat_forma_envio], 'column', [es_activo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha lógica de incorporación de la forma de envío al catálogo de referencia. Sirve de respaldo en auditorías y facilita análisis evolutivo del dominio. No implica caducidad automática ni afecta relaciones existentes; es un dato contextual y estable. Puede apoyar políticas de revisión o certificación periódica. Contribuye a la transparencia en la administración del catálogo.', 'Schema', [dbo], 'table', [cat_forma_envio], 'column', [fecha_creacion]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_forma_envio', 'CONSTRAINT', 'PK_cat_forma_envio')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Identidad física de la modalidad logística. Optimiza joins en órdenes y recepciones. Evita duplicidades y mejora planes de consulta. Es estable para histórico y auditoría. Soporte directo a integridad referencial.', 'SCHEMA', 'dbo', 'TABLE', 'cat_forma_envio', 'CONSTRAINT', 'PK_cat_forma_envio' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Identidad física de la modalidad logística. Optimiza joins en órdenes y recepciones. Evita duplicidades y mejora planes de consulta. Es estable para histórico y auditoría. Soporte directo a integridad referencial.', 'SCHEMA', 'dbo', 'TABLE', 'cat_forma_envio', 'CONSTRAINT', 'PK_cat_forma_envio' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_forma_envio', 'CONSTRAINT', 'UQ_cat_forma_envio_Nombre')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Asegura un solo rótulo por modalidad, eliminando ambigüedades en costos y SLA. Índice útil en filtros por nombre. Validación hecha por el motor con semántica ACID. Reduce mantenimiento correctivo.', 'SCHEMA', 'dbo', 'TABLE', 'cat_forma_envio', 'CONSTRAINT', 'UQ_cat_forma_envio_Nombre' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Asegura un solo rótulo por modalidad, eliminando ambigüedades en costos y SLA. Índice útil en filtros por nombre. Validación hecha por el motor con semántica ACID. Reduce mantenimiento correctivo.', 'SCHEMA', 'dbo', 'TABLE', 'cat_forma_envio', 'CONSTRAINT', 'UQ_cat_forma_envio_Nombre' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_forma_envio', 'CONSTRAINT', 'CK_cat_forma_envio_EstadoBit')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Vigencia binaria que habilita “ocultar” métodos sin borrado físico. La verificación es nativa, rápida y confiable. Mejora consistencia entre entornos. Simplifica lógica de aplicación.', 'SCHEMA', 'dbo', 'TABLE', 'cat_forma_envio', 'CONSTRAINT', 'CK_cat_forma_envio_EstadoBit' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Vigencia binaria que habilita “ocultar” métodos sin borrado físico. La verificación es nativa, rápida y confiable. Mejora consistencia entre entornos. Simplifica lógica de aplicación.', 'SCHEMA', 'dbo', 'TABLE', 'cat_forma_envio', 'CONSTRAINT', 'CK_cat_forma_envio_EstadoBit' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_forma_envio', 'CONSTRAINT', 'CK_cat_forma_envio_NombreNotBlank')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita strings vacíos que afectan reportes y selectores. Garantiza datos usables en toda la plataforma. Evaluación constante de costo marginal. Buen patrón repetible.', 'SCHEMA', 'dbo', 'TABLE', 'cat_forma_envio', 'CONSTRAINT', 'CK_cat_forma_envio_NombreNotBlank' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita strings vacíos que afectan reportes y selectores. Garantiza datos usables en toda la plataforma. Evaluación constante de costo marginal. Buen patrón repetible.', 'SCHEMA', 'dbo', 'TABLE', 'cat_forma_envio', 'CONSTRAINT', 'CK_cat_forma_envio_NombreNotBlank' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_forma_envio', 'CONSTRAINT', 'CK_cat_forma_envio_NombreLista')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Lista cerrada alineada a tu operación logística. El motor impide valores fuera del set, asegurando uniformidad analítica. Cambios se gobiernan en DDL. Impacto de ejecución mínimo.', 'SCHEMA', 'dbo', 'TABLE', 'cat_forma_envio', 'CONSTRAINT', 'CK_cat_forma_envio_NombreLista' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Lista cerrada alineada a tu operación logística. El motor impide valores fuera del set, asegurando uniformidad analítica. Cambios se gobiernan en DDL. Impacto de ejecución mínimo.', 'SCHEMA', 'dbo', 'TABLE', 'cat_forma_envio', 'CONSTRAINT', 'CK_cat_forma_envio_NombreLista' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'cat_metodo_pago', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Catálogo unificado de métodos de pago aceptados por la organización. Centraliza la terminología y evita variantes (por ejemplo, efectivo, tarjeta, transferencia, crédito, contado), simplificando conciliaciones y reportes. Permite incorporar nuevos medios sin alterar tablas operativas y aplicar políticas diferenciadas por método. Su administración consolidada mejora la consistencia contable y la interoperabilidad entre módulos de ventas y compras.', 'SCHEMA', 'dbo', 'table', 'cat_metodo_pago' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Catálogo unificado de métodos de pago aceptados por la organización. Centraliza la terminología y evita variantes (por ejemplo, efectivo, tarjeta, transferencia, crédito, contado), simplificando conciliaciones y reportes. Permite incorporar nuevos medios sin alterar tablas operativas y aplicar políticas diferenciadas por método. Su administración consolidada mejora la consistencia contable y la interoperabilidad entre módulos de ventas y compras.', 'SCHEMA', 'dbo', 'table', 'cat_metodo_pago' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Clave técnica única para identificar métodos de pago aceptados por la organización. Habilita referencias desde módulos de ventas y compras sin acoplarse a rótulos cambiantes. Debe permanecer estable y no reutilizarse para otros significados, facilitando trazabilidad financiera. Permite incorporar nuevos métodos sin impactar relaciones existentes. Es el punto de anclaje del dominio y base de interoperabilidad.', 'Schema', [dbo], 'table', [cat_metodo_pago], 'column', [id_metodo_pago]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Nombre normalizado del método (ej.: contado, crédito, transferencia, tarjeta), expuesto en interfaces y reportes. Requiere unicidad para evitar ambigüedad y consolidar métricas comparables. Su gestión centralizada minimiza variaciones terminológicas entre áreas y documentos. No se usa como clave relacional; es un descriptor amigable. Cambios en el rótulo no afectan la identidad del método.', 'Schema', [dbo], 'table', [cat_metodo_pago], 'column', [nombre]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Aclaración semántica y operativa del método de pago, incluyendo condiciones, restricciones o notas de uso. Favorece interpretación homogénea y reduce errores de captura o clasificación. Puede registrar prácticas internas (plazos, verificación requerida) a nivel informativo. No participa en reglas de integridad; su valor es documental. Enriquece la salida de documentación y la capacitación del usuario.', 'Schema', [dbo], 'table', [cat_metodo_pago], 'column', [descripcion]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Indicador de disponibilidad para nuevas transacciones, preservando la consistencia histórica de documentos antiguos. Permite retirar métodos sin eliminar registros, facilitando gobierno del dominio. Las interfaces deben ocultar métodos inactivos en selección. No altera transacciones pasadas; actúa sobre asignaciones futuras. Su administración recae en el custodio del catálogo.', 'Schema', [dbo], 'table', [cat_metodo_pago], 'column', [es_activo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha de alta lógica del método en el dominio de referencia. Resulta útil para auditorías, control de cambios y análisis de adopción. No establece validez temporal en documentos; contextualiza el momento de incorporación. Puede servir para políticas de revisión periódica del catálogo. Es un dato informativo y estable.', 'Schema', [dbo], 'table', [cat_metodo_pago], 'column', [fecha_creacion]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_metodo_pago', 'CONSTRAINT', 'PK_cat_metodo_pago')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'PK que sustenta identidad de métodos de pago en el repositorio. Simplifica integridad de documentos y conciliaciones. Provee rutas de acceso eficientes en joins. Estabilidad requerida para análisis financieros.', 'SCHEMA', 'dbo', 'TABLE', 'cat_metodo_pago', 'CONSTRAINT', 'PK_cat_metodo_pago' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'PK que sustenta identidad de métodos de pago en el repositorio. Simplifica integridad de documentos y conciliaciones. Provee rutas de acceso eficientes en joins. Estabilidad requerida para análisis financieros.', 'SCHEMA', 'dbo', 'TABLE', 'cat_metodo_pago', 'CONSTRAINT', 'PK_cat_metodo_pago' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_metodo_pago', 'CONSTRAINT', 'UQ_cat_metodo_pago_Nombre')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Bloquea duplicidad de etiquetas (“crédito”, “contado”). Índice útil para filtros por nombre. Validación nativa del motor, evita errores en importaciones. Mejora consistencia en tableros financieros.', 'SCHEMA', 'dbo', 'TABLE', 'cat_metodo_pago', 'CONSTRAINT', 'UQ_cat_metodo_pago_Nombre' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Bloquea duplicidad de etiquetas (“crédito”, “contado”). Índice útil para filtros por nombre. Validación nativa del motor, evita errores en importaciones. Mejora consistencia en tableros financieros.', 'SCHEMA', 'dbo', 'TABLE', 'cat_metodo_pago', 'CONSTRAINT', 'UQ_cat_metodo_pago_Nombre' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_metodo_pago', 'CONSTRAINT', 'CK_cat_metodo_pago_EstadoBit')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Dominio 0/1 con aplicación transaccional. Habilita control de vigencia sin borrar historia. Simplifica queries y políticas. Evaluación rápida y segura.', 'SCHEMA', 'dbo', 'TABLE', 'cat_metodo_pago', 'CONSTRAINT', 'CK_cat_metodo_pago_EstadoBit' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Dominio 0/1 con aplicación transaccional. Habilita control de vigencia sin borrar historia. Simplifica queries y políticas. Evaluación rápida y segura.', 'SCHEMA', 'dbo', 'TABLE', 'cat_metodo_pago', 'CONSTRAINT', 'CK_cat_metodo_pago_EstadoBit' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_metodo_pago', 'CONSTRAINT', 'CK_cat_metodo_pago_NombreNotBlank')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Garantiza que las etiquetas de método sean no vacías, preservando la integridad del catálogo. Ayuda a evitar fallos en emisión/consulta. Operación de coste mínimo, gran impacto en calidad.', 'SCHEMA', 'dbo', 'TABLE', 'cat_metodo_pago', 'CONSTRAINT', 'CK_cat_metodo_pago_NombreNotBlank' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Garantiza que las etiquetas de método sean no vacías, preservando la integridad del catálogo. Ayuda a evitar fallos en emisión/consulta. Operación de coste mínimo, gran impacto en calidad.', 'SCHEMA', 'dbo', 'TABLE', 'cat_metodo_pago', 'CONSTRAINT', 'CK_cat_metodo_pago_NombreNotBlank' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_metodo_pago', 'CONSTRAINT', 'CK_cat_metodo_pago_NombreLista')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Fija un dominio cerrado compatible con tu operación. El motor detiene variaciones no deseadas y mantiene coherente la semántica. Cambios controlados via DDL. Bajo coste y alta confiabilidad.', 'SCHEMA', 'dbo', 'TABLE', 'cat_metodo_pago', 'CONSTRAINT', 'CK_cat_metodo_pago_NombreLista' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Fija un dominio cerrado compatible con tu operación. El motor detiene variaciones no deseadas y mantiene coherente la semántica. Cambios controlados via DDL. Bajo coste y alta confiabilidad.', 'SCHEMA', 'dbo', 'TABLE', 'cat_metodo_pago', 'CONSTRAINT', 'CK_cat_metodo_pago_NombreLista' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'cat_nivel_dificultad_servicio', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Catálogo que define niveles estandarizados de dificultad del servicio (básico, medio, avanzado), utilizados para asignación de técnicos, estimación de tiempos y análisis operativo. Evita etiquetas libres que distorsionen reportes y planificación. Permite desactivar valores sin eliminar historia. Mejora la coherencia entre áreas y la comparabilidad de métricas. Es referencia única para la clasificación de complejidad.', 'SCHEMA', 'dbo', 'table', 'cat_nivel_dificultad_servicio' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Catálogo que define niveles estandarizados de dificultad del servicio (básico, medio, avanzado), utilizados para asignación de técnicos, estimación de tiempos y análisis operativo. Evita etiquetas libres que distorsionen reportes y planificación. Permite desactivar valores sin eliminar historia. Mejora la coherencia entre áreas y la comparabilidad de métricas. Es referencia única para la clasificación de complejidad.', 'SCHEMA', 'dbo', 'table', 'cat_nivel_dificultad_servicio' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identificador técnico del nivel de dificultad, estable y no reutilizable. Permite relaciones consistentes con la entidad Servicio sin depender de textos cambiantes. Es el ancla para reportes y análisis de complejidad. Asegura integridad referencial y trazabilidad de decisiones. Facilita interoperabilidad con planificación y control.', 'Schema', [dbo], 'table', [cat_nivel_dificultad_servicio], 'column', [id_nivel]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Etiqueta del nivel (básico, medio, avanzado), única para evitar ambigüedad. Se utiliza en interfaces y documentos, con administración centralizada para evitar variantes. No es clave relacional; su rol es comunicativo. Cambios de rótulo no alteran la identidad técnica. Favorece lectura homogénea del catálogo.', 'Schema', [dbo], 'table', [cat_nivel_dificultad_servicio], 'column', [nombre]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Texto que contextualiza el alcance del nivel y ejemplos de servicios típicos. Mejora la uniformidad de criterios y reduce discrepancias en planeación. No participa en validaciones; es informativo. Debe mantenerse actualizado según prácticas del taller. Aporta claridad a capacitación y auditorías.', 'Schema', [dbo], 'table', [cat_nivel_dificultad_servicio], 'column', [descripcion]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Indicador de vigencia para nuevas asignaciones, conservando históricos. Permite retirar niveles sin borrar registros. Las pantallas deben filtrar valores inactivos. No reinterpreta clasificaciones pasadas; opera hacia futuro. Es clave para gobernanza del dominio y orden semántico.', 'Schema', [dbo], 'table', [cat_nivel_dificultad_servicio], 'column', [es_activo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha de incorporación del nivel al catálogo, relevante para auditorías y control de cambios. No genera efectos automáticos; brinda contexto. Permite rastrear adopción y evolución de criterios. Debe registrarse de manera consistente.', 'Schema', [dbo], 'table', [cat_nivel_dificultad_servicio], 'column', [fecha_creacion]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_nivel_dificultad_servicio', 'CONSTRAINT', 'PK_cat_nivel_dificultad_servicio')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'PK que define identidad de la complejidad del servicio. Optimiza accesos por FK desde planes y OS. Previene duplicidad por ID y estabiliza cardinalidades. Esencial para análisis históricos y control operativo.', 'SCHEMA', 'dbo', 'TABLE', 'cat_nivel_dificultad_servicio', 'CONSTRAINT', 'PK_cat_nivel_dificultad_servicio' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'PK que define identidad de la complejidad del servicio. Optimiza accesos por FK desde planes y OS. Previene duplicidad por ID y estabiliza cardinalidades. Esencial para análisis históricos y control operativo.', 'SCHEMA', 'dbo', 'TABLE', 'cat_nivel_dificultad_servicio', 'CONSTRAINT', 'PK_cat_nivel_dificultad_servicio' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_nivel_dificultad_servicio', 'CONSTRAINT', 'UQ_cat_nivel_dificultad_servicio_Nombre')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Impide duplicación de rótulos (“medio” repetido). Índice que mejora tiempos de respuesta en consultas por etiqueta. Validación estricta en el motor con rollback automático ante violaciones. Reduce saneamiento a posteriori.', 'SCHEMA', 'dbo', 'TABLE', 'cat_nivel_dificultad_servicio', 'CONSTRAINT', 'UQ_cat_nivel_dificultad_servicio_Nombre' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Impide duplicación de rótulos (“medio” repetido). Índice que mejora tiempos de respuesta en consultas por etiqueta. Validación estricta en el motor con rollback automático ante violaciones. Reduce saneamiento a posteriori.', 'SCHEMA', 'dbo', 'TABLE', 'cat_nivel_dificultad_servicio', 'CONSTRAINT', 'UQ_cat_nivel_dificultad_servicio_Nombre' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_nivel_dificultad_servicio', 'CONSTRAINT', 'CK_cat_nivel_dificultad_servicio_EstadoBit')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Control binario de vigencia que unifica el comportamiento de catálogos. Evita estados intermedios no gestionados. Evaluación muy barata, aplicable en bulk con transacción. Mejora consistencia operativa.', 'SCHEMA', 'dbo', 'TABLE', 'cat_nivel_dificultad_servicio', 'CONSTRAINT', 'CK_cat_nivel_dificultad_servicio_EstadoBit' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Control binario de vigencia que unifica el comportamiento de catálogos. Evita estados intermedios no gestionados. Evaluación muy barata, aplicable en bulk con transacción. Mejora consistencia operativa.', 'SCHEMA', 'dbo', 'TABLE', 'cat_nivel_dificultad_servicio', 'CONSTRAINT', 'CK_cat_nivel_dificultad_servicio_EstadoBit' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_nivel_dificultad_servicio', 'CONSTRAINT', 'CK_cat_nivel_dificultad_servicio_NombreNotBlank')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Asegura nombres no vacíos, condición mínima para catálogos explotables. Evita fallos de renderizado y métricas. La verificación se realiza a nivel de motor, independientemente de UI. Coste despreciable.', 'SCHEMA', 'dbo', 'TABLE', 'cat_nivel_dificultad_servicio', 'CONSTRAINT', 'CK_cat_nivel_dificultad_servicio_NombreNotBlank' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Asegura nombres no vacíos, condición mínima para catálogos explotables. Evita fallos de renderizado y métricas. La verificación se realiza a nivel de motor, independientemente de UI. Coste despreciable.', 'SCHEMA', 'dbo', 'TABLE', 'cat_nivel_dificultad_servicio', 'CONSTRAINT', 'CK_cat_nivel_dificultad_servicio_NombreNotBlank' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_nivel_dificultad_servicio', 'CONSTRAINT', 'CK_cat_nivel_dificultad_servicio_NombreLista')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Lista cerrada que estandariza la complejidad del servicio a efectos de planificación y precios. La constraint impide uso de valores no autorizados, estabilizando indicadores. Cambios futuros se gestionan como evolución de DDL. Baja complejidad y alto control.', 'SCHEMA', 'dbo', 'TABLE', 'cat_nivel_dificultad_servicio', 'CONSTRAINT', 'CK_cat_nivel_dificultad_servicio_NombreLista' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Lista cerrada que estandariza la complejidad del servicio a efectos de planificación y precios. La constraint impide uso de valores no autorizados, estabilizando indicadores. Cambios futuros se gestionan como evolución de DDL. Baja complejidad y alto control.', 'SCHEMA', 'dbo', 'TABLE', 'cat_nivel_dificultad_servicio', 'CONSTRAINT', 'CK_cat_nivel_dificultad_servicio_NombreLista' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'cat_tipo_cliente', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Catálogo que segmenta la naturaleza del cliente (minorista, corporativo, distribuidor, interno) para aplicar políticas comerciales, análisis y reportes homogéneos. Estandariza la clasificación en todo el sistema y evita diferencias de nomenclatura entre áreas. Permite activar o desactivar tipos sin romper históricos. Facilita métricas de rentabilidad y estrategias de atención. Constituye la referencia única para la tipificación comercial del cliente.', 'SCHEMA', 'dbo', 'table', 'cat_tipo_cliente' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Catálogo que segmenta la naturaleza del cliente (minorista, corporativo, distribuidor, interno) para aplicar políticas comerciales, análisis y reportes homogéneos. Estandariza la clasificación en todo el sistema y evita diferencias de nomenclatura entre áreas. Permite activar o desactivar tipos sin romper históricos. Facilita métricas de rentabilidad y estrategias de atención. Constituye la referencia única para la tipificación comercial del cliente.', 'SCHEMA', 'dbo', 'table', 'cat_tipo_cliente' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identificador técnico único que define el tipo de cliente sin depender de textos. Su estabilidad soporta relaciones con Factura, OS y otros procesos. Es no reutilizable para conservar trazabilidad histórica y consistencia en segmentación. Sirve como ancla para tableros de rentabilidad y estrategias de pricing. Asegura integridad referencial.', 'Schema', [dbo], 'table', [cat_tipo_cliente], 'column', [id_tipo_cliente]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Denominación normalizada del tipo (minorista, corporativo, distribuidor, interno). La unicidad elimina ambigüedad, favorece filtros y reportes comparables. Se administra de forma centralizada para evitar variantes. No se usa como clave relacional; su rol es comunicativo. Cambios de rótulo no afectan la identidad técnica.', 'Schema', [dbo], 'table', [cat_tipo_cliente], 'column', [nombre]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Texto que detalla el alcance del tipo, ejemplos y consideraciones de política comercial. Apoya una interpretación uniforme entre áreas y reduce errores de clasificación. No participa en validaciones automáticas; su valor es documental. Debe mantenerse al día con las prácticas de negocio. Facilita auditorías y capacitación.', 'Schema', [dbo], 'table', [cat_tipo_cliente], 'column', [descripcion]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Control de vigencia para nuevas asignaciones, preservando históricos y manteniendo el dominio ordenado. Las interfaces deben ocultar los tipos inactivos al momento de selección. No reinterpreta registros previos; opera sobre futuras altas. Es una herramienta de gobierno del dato y limpieza semántica.', 'Schema', [dbo], 'table', [cat_tipo_cliente], 'column', [es_activo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha de alta del tipo en el catálogo, útil para auditorías y control de cambios. No afecta lógicas ni caducidades; aporta contexto histórico. Permite evidenciar cuándo se introdujo un tipo específico. Complementa políticas de revisión periódica del dominio. Debe registrarse consistentemente.', 'Schema', [dbo], 'table', [cat_tipo_cliente], 'column', [fecha_creacion]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_tipo_cliente', 'CONSTRAINT', 'PK_cat_tipo_cliente')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Identidad física de la clasificación de clientes, clave para segmentación y condiciones comerciales. Favorece integridad referencial con Tbl_Cliente. Mantiene cardinalidades claras en joins. Al ser un ID estable, facilita análisis históricos.', 'SCHEMA', 'dbo', 'TABLE', 'cat_tipo_cliente', 'CONSTRAINT', 'PK_cat_tipo_cliente' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Identidad física de la clasificación de clientes, clave para segmentación y condiciones comerciales. Favorece integridad referencial con Tbl_Cliente. Mantiene cardinalidades claras en joins. Al ser un ID estable, facilita análisis históricos.', 'SCHEMA', 'dbo', 'TABLE', 'cat_tipo_cliente', 'CONSTRAINT', 'PK_cat_tipo_cliente' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_tipo_cliente', 'CONSTRAINT', 'UQ_cat_tipo_cliente_Nombre')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita duplicados en el rótulo del tipo de cliente, saneando el dato maestro. El índice único mejora rendimiento en búsquedas por nombre. Se valida en el motor, disminuyendo dependencia de capas externas. Mantiene consistencia analítica.', 'SCHEMA', 'dbo', 'TABLE', 'cat_tipo_cliente', 'CONSTRAINT', 'UQ_cat_tipo_cliente_Nombre' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita duplicados en el rótulo del tipo de cliente, saneando el dato maestro. El índice único mejora rendimiento en búsquedas por nombre. Se valida en el motor, disminuyendo dependencia de capas externas. Mantiene consistencia analítica.', 'SCHEMA', 'dbo', 'TABLE', 'cat_tipo_cliente', 'CONSTRAINT', 'UQ_cat_tipo_cliente_Nombre' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_tipo_cliente', 'CONSTRAINT', 'CK_cat_tipo_cliente_EstadoBit')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Impone dominio binario para activar/desactivar tipos sin borrar filas. Uniformiza comportamiento en filtros. SQL Server aplica la regla de manera determinista. Soporta cargas concurrentes con control ACID.', 'SCHEMA', 'dbo', 'TABLE', 'cat_tipo_cliente', 'CONSTRAINT', 'CK_cat_tipo_cliente_EstadoBit' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Impone dominio binario para activar/desactivar tipos sin borrar filas. Uniformiza comportamiento en filtros. SQL Server aplica la regla de manera determinista. Soporta cargas concurrentes con control ACID.', 'SCHEMA', 'dbo', 'TABLE', 'cat_tipo_cliente', 'CONSTRAINT', 'CK_cat_tipo_cliente_EstadoBit' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_tipo_cliente', 'CONSTRAINT', 'CK_cat_tipo_cliente_NombreNotBlank')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita cadenas vacías, condición esencial para catálogos visibles en UI. Reduce ruido en transformaciones ETL y dimensiones de BI. Bajo coste de evaluación y alto impacto en calidad.', 'SCHEMA', 'dbo', 'TABLE', 'cat_tipo_cliente', 'CONSTRAINT', 'CK_cat_tipo_cliente_NombreNotBlank' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita cadenas vacías, condición esencial para catálogos visibles en UI. Reduce ruido en transformaciones ETL y dimensiones de BI. Bajo coste de evaluación y alto impacto en calidad.', 'SCHEMA', 'dbo', 'TABLE', 'cat_tipo_cliente', 'CONSTRAINT', 'CK_cat_tipo_cliente_NombreNotBlank' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_tipo_cliente', 'CONSTRAINT', 'CK_cat_tipo_cliente_NombreLista')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Taxonomía cerrada que protege el vocabulario de segmentación. El motor bloquea términos no permitidos, evitando “sinónimos”. Facilita pricing y políticas de crédito. La actualización de la lista se gobierna por cambios en DDL.', 'SCHEMA', 'dbo', 'TABLE', 'cat_tipo_cliente', 'CONSTRAINT', 'CK_cat_tipo_cliente_NombreLista' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Taxonomía cerrada que protege el vocabulario de segmentación. El motor bloquea términos no permitidos, evitando “sinónimos”. Facilita pricing y políticas de crédito. La actualización de la lista se gobierna por cambios en DDL.', 'SCHEMA', 'dbo', 'TABLE', 'cat_tipo_cliente', 'CONSTRAINT', 'CK_cat_tipo_cliente_NombreLista' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'cat_transmision', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Catálogo de tipos de transmisión (manual, automática, CVT), que unifica la clasificación técnica de los vehículos y evita variantes de captura. Facilita análisis y filtros de portafolio, y contribuye a reportes consistentes. Permite desactivar valores sin eliminar historia. Mejora la coherencia entre áreas técnicas y comerciales. Es la fuente única de verdad para esta característica.', 'SCHEMA', 'dbo', 'table', 'cat_transmision' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Catálogo de tipos de transmisión (manual, automática, CVT), que unifica la clasificación técnica de los vehículos y evita variantes de captura. Facilita análisis y filtros de portafolio, y contribuye a reportes consistentes. Permite desactivar valores sin eliminar historia. Mejora la coherencia entre áreas técnicas y comerciales. Es la fuente única de verdad para esta característica.', 'SCHEMA', 'dbo', 'table', 'cat_transmision' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identificador técnico único y estable para el tipo de transmisión, no dependiente de textos. Facilita relaciones consistentes y trazabilidad. No se reutiliza para otro significado, preservando historia. Funciona como pivote para reportes y análisis de portafolio. Refuerza integridad referencial en la entidad Vehículo.', 'Schema', [dbo], 'table', [cat_transmision], 'column', [id_transmision]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Rótulo normalizado del tipo de transmisión, único para evitar confusiones. Visible en interfaces y documentos, bajo control central para impedir variantes. No es clave relacional; su uso es comunicativo. Cambios en el nombre se documentan sin alterar la identidad técnica. Favorece estandarización semántica.', 'Schema', [dbo], 'table', [cat_transmision], 'column', [nombre]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Texto informativo que delimita el alcance de la categoría y ejemplos típicos. Reduce errores de clasificación y apoya la capacitación. No participa en reglas automáticas; es valor documental. Debe mantenerse actualizado según evolución tecnológica. Aporta contexto de auditoría.', 'Schema', [dbo], 'table', [cat_transmision], 'column', [descripcion]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Indicador de vigencia que regula nuevas asignaciones sin afectar históricos. Permite retirar valores sin borrar registros. Las interfaces deben filtrar opciones inactivas. No reinterpreta unidades pasadas; opera hacia futuro. Es herramienta de gobierno del dato maestro.', 'Schema', [dbo], 'table', [cat_transmision], 'column', [es_activo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha de alta del valor, relevante para control de cambios y evidencia histórica. No impacta lógicas; contextualiza adopciones. Facilita seguimiento de evolución del dominio. Debe registrarse en el alta.', 'Schema', [dbo], 'table', [cat_transmision], 'column', [fecha_creacion]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_transmision', 'CONSTRAINT', 'PK_cat_transmision')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Identidad física para el tipo de transmisión, usada por fichas técnicas. Mejora los planes de consulta y preserva integridad. No se reutiliza para mantener historia. Base para FKs desde vehículos.', 'SCHEMA', 'dbo', 'TABLE', 'cat_transmision', 'CONSTRAINT', 'PK_cat_transmision' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Identidad física para el tipo de transmisión, usada por fichas técnicas. Mejora los planes de consulta y preserva integridad. No se reutiliza para mantener historia. Base para FKs desde vehículos.', 'SCHEMA', 'dbo', 'TABLE', 'cat_transmision', 'CONSTRAINT', 'PK_cat_transmision' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_transmision', 'CONSTRAINT', 'UQ_cat_transmision_Nombre')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita la proliferación de etiquetas equivalentes. El índice ayuda a búsquedas y reduce coste de validación en capas superiores. La unicidad se garantiza en el motor con semántica transaccional. Facilita analítica de producto.', 'SCHEMA', 'dbo', 'TABLE', 'cat_transmision', 'CONSTRAINT', 'UQ_cat_transmision_Nombre' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita la proliferación de etiquetas equivalentes. El índice ayuda a búsquedas y reduce coste de validación en capas superiores. La unicidad se garantiza en el motor con semántica transaccional. Facilita analítica de producto.', 'SCHEMA', 'dbo', 'TABLE', 'cat_transmision', 'CONSTRAINT', 'UQ_cat_transmision_Nombre' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_transmision', 'CONSTRAINT', 'CK_cat_transmision_EstadoBit')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Impone dominio 0/1 a vigencia, habilitando soft-deprecate de opciones. Protege la homogeneidad del dato y ayuda a filtros eficientes. Evaluación simple y constante. Portabilidad entre ambientes.', 'SCHEMA', 'dbo', 'TABLE', 'cat_transmision', 'CONSTRAINT', 'CK_cat_transmision_EstadoBit' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Impone dominio 0/1 a vigencia, habilitando soft-deprecate de opciones. Protege la homogeneidad del dato y ayuda a filtros eficientes. Evaluación simple y constante. Portabilidad entre ambientes.', 'SCHEMA', 'dbo', 'TABLE', 'cat_transmision', 'CONSTRAINT', 'CK_cat_transmision_EstadoBit' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_transmision', 'CONSTRAINT', 'CK_cat_transmision_NombreNotBlank')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Defensa de datos frente a entradas vacías. Preserva la calidad del catálogo y evita fallos en listados. Mínimo overhead. Comportamiento determinista.', 'SCHEMA', 'dbo', 'TABLE', 'cat_transmision', 'CONSTRAINT', 'CK_cat_transmision_NombreNotBlank' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Defensa de datos frente a entradas vacías. Preserva la calidad del catálogo y evita fallos en listados. Mínimo overhead. Comportamiento determinista.', 'SCHEMA', 'dbo', 'TABLE', 'cat_transmision', 'CONSTRAINT', 'CK_cat_transmision_NombreNotBlank' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'cat_transmision', 'CONSTRAINT', 'CK_cat_transmision_NombreLista')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Lista cerrada acorde a la operación actual. Asegura vocabulario consistente y analítica estable. Cambios futuros se gestionan modificando el DDL. Baja complejidad de evaluación.', 'SCHEMA', 'dbo', 'TABLE', 'cat_transmision', 'CONSTRAINT', 'CK_cat_transmision_NombreLista' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Lista cerrada acorde a la operación actual. Asegura vocabulario consistente y analítica estable. Cambios futuros se gestionan modificando el DDL. Baja complejidad de evaluación.', 'SCHEMA', 'dbo', 'TABLE', 'cat_transmision', 'CONSTRAINT', 'CK_cat_transmision_NombreLista' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'Tbl_Cliente', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Tabla física que consolida los datos maestros de los clientes registrados en el sistema, integrando tanto los que adquieren productos como los que solicitan servicios. Su clave primaria id_cliente asegura unicidad y estabilidad referencial, vinculando de manera directa los procesos de facturación y órdenes de servicio. Los campos de identificación y contacto se implementan con tipos VARCHAR de longitud controlada, aplicando NOT NULL en los datos obligatorios y validaciones de formato según los requerimientos del sistema. Los atributos estado_cliente y tipo_cliente permiten segmentar el comportamiento comercial y definir políticas de atención diferenciadas. Esta tabla constituye la base de la relación comercial y soporta la trazabilidad operativa de todas las transacciones asociadas a cada cliente.', 'SCHEMA', 'dbo', 'table', 'Tbl_Cliente' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Tabla física que consolida los datos maestros de los clientes registrados en el sistema, integrando tanto los que adquieren productos como los que solicitan servicios. Su clave primaria id_cliente asegura unicidad y estabilidad referencial, vinculando de manera directa los procesos de facturación y órdenes de servicio. Los campos de identificación y contacto se implementan con tipos VARCHAR de longitud controlada, aplicando NOT NULL en los datos obligatorios y validaciones de formato según los requerimientos del sistema. Los atributos estado_cliente y tipo_cliente permiten segmentar el comportamiento comercial y definir políticas de atención diferenciadas. Esta tabla constituye la base de la relación comercial y soporta la trazabilidad operativa de todas las transacciones asociadas a cada cliente.', 'SCHEMA', 'dbo', 'table', 'Tbl_Cliente' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identificador técnico único del cliente dentro del sistema. Se utiliza como clave primaria estable, no reciclable, que permite enlazar sin ambigüedad facturas, órdenes de servicio y cualquier interacción histórica. Su valor no depende del documento de identidad ni del correo, de forma que cambios en esos datos no rompen la referencialidad. Es el eje para reportes de recurrencia, cartera y segmentación comercial. Debe preservarse inalterado para mantener la trazabilidad legal y operativa a lo largo del tiempo. ', 'Schema', [dbo], 'table', [Tbl_Cliente], 'column', [id_cliente]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Primer componente del nombre legal o comercial mostrado en documentos y reportes. Debe respetar convenciones de capitalización para uniformidad. Se valida como no vacío y con caracteres alfabéticos/espacios para mejorar calidad del dato. Se usa en búsquedas y listados operativos. Complementa a “apellido” en clientes naturales.', 'Schema', [dbo], 'table', [Tbl_Cliente], 'column', [nombre]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Atributo que complementa la identificación nominal en clientes naturales; puede omitirse en personas jurídicas. Ayuda a diferenciar homónimos y ordenar listados. Debe mantener coherencia ortográfica. Se usa en composición de nombre completo en reportes y comunicaciones. Su mantenimiento correcto mejora la precisión de segmentación.', 'Schema', [dbo], 'table', [Tbl_Cliente], 'column', [apellido]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Canal de contacto prioritario para coordinación de citas, notificaciones y cobranza. A nivel lógico, se conserva como texto para cubrir extensiones y signos “+”. Se recomienda longitud razonable (7–20). La calidad del teléfono impacta recordatorios y SLA de servicio. Puede auditarse contra eventos de comunicación.', 'Schema', [dbo], 'table', [Tbl_Cliente], 'column', [telefono]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Correo principal para notificaciones formales y facturación electrónica. Se define único para minimizar duplicados y suplantaciones. Debe ser válido y verificable; el formato se documenta con una expresión  a implementar en físico o aplicación. Es clave para segmentación y flujos automatizados. Cambios deben quedar registrados.', 'Schema', [dbo], 'table', [Tbl_Cliente], 'column', [email]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Domicilio fiscal o de correspondencia utilizado en documentos, entregas y visitas técnicas. Se pide completo para facilitar logística y cumplimiento legal. Cambios sustantivos deben conservar trazabilidad. Su consistencia habilita análisis geográficos y cruces con códigos postales. Impacta eficiencia de rutas y precisión de envíos.', 'Schema', [dbo], 'table', [Tbl_Cliente], 'column', [direccion]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Localidad/municipio asociado al domicilio del cliente para segmentaciones y reportes territoriales. Debe ser coherente con la dirección registrada. Se utiliza para análisis de cobertura y planeación comercial. Facilita filtros en consultas y tableros. Mantener estandarización evita dispersiones por sinónimos.', 'Schema', [dbo], 'table', [Tbl_Cliente], 'column', [ciudad]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Clasifica al cliente según su naturaleza para fines fiscales y operativos (p. ej., natural, juridico). Esta distinción afecta formatos de documentos y validaciones (uso/omisión de “apellido”). Debe provenir de lista controlada para evitar variantes. Es útil para segmentar estrategias comerciales y reportes. Se mantiene estable salvo reclasificación formal.', 'Schema', [dbo], 'table', [Tbl_Cliente], 'column', [tipo_cliente]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Situación vigente del cliente (por catálogo controlado) que gobierna si puede generar nuevas transacciones. Cambios de estado deben auditarse con fecha/motivo. Es fundamental para cumplimiento de políticas comerciales/crediticias y bloqueos operativos. Se recomienda lista cerrada (p. ej., activo, inactivo, suspendido, bloqueado). Impacta directamente en procesos de facturación y OS.', 'Schema', [dbo], 'table', [Tbl_Cliente], 'column', [estado_cliente]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha de alta oficial en el sistema, usada para medir antigüedad y crecimiento de cartera. No debe ser futura; cambios se limitan a correcciones justificadas. Importa en promociones o beneficios ligados al tiempo de relación. Permite cortes históricos y auditorías. Es referencia para KPIs de captación.', 'Schema', [dbo], 'table', [Tbl_Cliente], 'column', [fecha_registro]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'PK_Cliente')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Clave primaria numérica y estable que identifica de manera inequívoca a cada cliente y sirve como ancla para las relaciones con facturación y órdenes de servicio. Debe declararse NOT NULL y permanecer inmutable tras su asignación, preservando integridad referencial e histórica. Su semántica es técnica (sustituta), por lo que no depende de datos de negocio potencialmente cambiantes. La unicidad de esta columna evita colisiones de identidad y simplifica auditoría. Su correcta definición es condición para todos los vínculos 1:N que saquen reportes por cliente.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'PK_Cliente' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Clave primaria numérica y estable que identifica de manera inequívoca a cada cliente y sirve como ancla para las relaciones con facturación y órdenes de servicio. Debe declararse NOT NULL y permanecer inmutable tras su asignación, preservando integridad referencial e histórica. Su semántica es técnica (sustituta), por lo que no depende de datos de negocio potencialmente cambiantes. La unicidad de esta columna evita colisiones de identidad y simplifica auditoría. Su correcta definición es condición para todos los vínculos 1:N que saquen reportes por cliente.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'PK_Cliente' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'UQ_Cliente_Email')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Restringe a un único registro por dirección de correo para minimizar duplicidades y suplantaciones en comunicaciones y procesos electrónicos. La unicidad facilita notificaciones confiables, evita colisiones en campañas o recordatorios y mejora la trazabilidad del contacto. Se recomienda combinar con validaciones de formato y disponibilidad operativa. En caso de cambio de correo, debe conservarse historial por políticas de negocio, pero siempre manteniendo una única dirección vigente por fila. Este control impacta positivamente la calidad del maestro de clientes.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'UQ_Cliente_Email' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Restringe a un único registro por dirección de correo para minimizar duplicidades y suplantaciones en comunicaciones y procesos electrónicos. La unicidad facilita notificaciones confiables, evita colisiones en campañas o recordatorios y mejora la trazabilidad del contacto. Se recomienda combinar con validaciones de formato y disponibilidad operativa. En caso de cambio de correo, debe conservarse historial por políticas de negocio, pero siempre manteniendo una única dirección vigente por fila. Este control impacta positivamente la calidad del maestro de clientes.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'UQ_Cliente_Email' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'CHK_Cliente_Id_Positive')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita la creación de filas con identificadores no válidos como cero o valores negativos, reforzando la coherencia de la clave primaria. Este control simplifica diagnósticos y asegura compatibilidad con estrategias de generación secuencial. También previene casos límite al importar datos desde otras fuentes. Aunque la PK ya garantiza unicidad, este check agrega una barrera adicional de calidad. En conjunto con el NOT NULL, asegura que la referencia sea válida y utilizable en todos los procesos.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'CHK_Cliente_Id_Positive' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita la creación de filas con identificadores no válidos como cero o valores negativos, reforzando la coherencia de la clave primaria. Este control simplifica diagnósticos y asegura compatibilidad con estrategias de generación secuencial. También previene casos límite al importar datos desde otras fuentes. Aunque la PK ya garantiza unicidad, este check agrega una barrera adicional de calidad. En conjunto con el NOT NULL, asegura que la referencia sea válida y utilizable en todos los procesos.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'CHK_Cliente_Id_Positive' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'CHK_Cliente_Estado_Lista')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Define un conjunto finito de estados operativos para controlar el ciclo de vida del cliente y las operaciones permitidas. Restringir los valores evita etiquetas improvisadas o inconsistentes que distorsionan reportes y reglas de negocio. La lista cerrada facilita filtros en tableros, bloqueos operativos y métricas de cartera. Cualquier cambio de estado debe pasar por un proceso autorizado y auditable. Esta restricción refuerza la calidad del maestro y la previsibilidad de comportamientos transaccionales.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'CHK_Cliente_Estado_Lista' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Define un conjunto finito de estados operativos para controlar el ciclo de vida del cliente y las operaciones permitidas. Restringir los valores evita etiquetas improvisadas o inconsistentes que distorsionan reportes y reglas de negocio. La lista cerrada facilita filtros en tableros, bloqueos operativos y métricas de cartera. Cualquier cambio de estado debe pasar por un proceso autorizado y auditable. Esta restricción refuerza la calidad del maestro y la previsibilidad de comportamientos transaccionales.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'CHK_Cliente_Estado_Lista' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'CHK_Cliente_Tipo_Lista')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Controla la clasificación comercial del cliente, limitándola a una lista cerrada de categorías válidas: “minorista”, “corporativo”, “distribuidor” e “interno”. Esta diferenciación define condiciones específicas de atención, precios y crédito, reflejando las políticas comerciales de la organización. Restringir el dominio evita tipificaciones erróneas y asegura la consistencia en los reportes y estrategias de segmentación. La restricción también facilita el mantenimiento de catálogos y la coherencia en análisis de rentabilidad. Cualquier nueva categoría debe incorporarse formalmente mediante revisión de diseño, no por modificación directa del dato.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'CHK_Cliente_Tipo_Lista' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Controla la clasificación comercial del cliente, limitándola a una lista cerrada de categorías válidas: “minorista”, “corporativo”, “distribuidor” e “interno”. Esta diferenciación define condiciones específicas de atención, precios y crédito, reflejando las políticas comerciales de la organización. Restringir el dominio evita tipificaciones erróneas y asegura la consistencia en los reportes y estrategias de segmentación. La restricción también facilita el mantenimiento de catálogos y la coherencia en análisis de rentabilidad. Cualquier nueva categoría debe incorporarse formalmente mediante revisión de diseño, no por modificación directa del dato.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'CHK_Cliente_Tipo_Lista' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'CHK_Cliente_Telefono_Longitud')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Asegura que el número de teléfono cumpla longitudes plausibles, considerando extensiones y formatos internacionales, sin imponer patrón estricto por país. Evita registros demasiado cortos o excesivamente largos que entorpezcan comunicaciones y recordatorios. Este control mejora la calidad del dato y reduce rebotes en procesos de contacto. Se complementa con políticas de normalización (espacios, guiones) en la aplicación. Su presencia en el diseño lógico impulsa validaciones consistentes en la captura.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'CHK_Cliente_Telefono_Longitud' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Asegura que el número de teléfono cumpla longitudes plausibles, considerando extensiones y formatos internacionales, sin imponer patrón estricto por país. Evita registros demasiado cortos o excesivamente largos que entorpezcan comunicaciones y recordatorios. Este control mejora la calidad del dato y reduce rebotes en procesos de contacto. Se complementa con políticas de normalización (espacios, guiones) en la aplicación. Su presencia en el diseño lógico impulsa validaciones consistentes en la captura.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'CHK_Cliente_Telefono_Longitud' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'CHK_Cliente_Email_Formato')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Establece una verificación básica para evitar cadenas que evidentemente no corresponden a correos electrónicos, sin llegar a una validación exhaustiva de RFC. Su objetivo es filtrar valores más problemáticos y reducir errores groseros de digitación. La validación fina (regex completa, dominios válidos) se delega a la aplicación o a controles del modelo físico. Al estar definida en el lógico, esta regla queda visible para QA y para la futura implementación, logrando coherencia a lo largo del ciclo.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'CHK_Cliente_Email_Formato' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Establece una verificación básica para evitar cadenas que evidentemente no corresponden a correos electrónicos, sin llegar a una validación exhaustiva de RFC. Su objetivo es filtrar valores más problemáticos y reducir errores groseros de digitación. La validación fina (regex completa, dominios válidos) se delega a la aplicación o a controles del modelo físico. Al estar definida en el lógico, esta regla queda visible para QA y para la futura implementación, logrando coherencia a lo largo del ciclo.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'CHK_Cliente_Email_Formato' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'CHK_Cliente_Fecha_No_Futura')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita capturas con fechas posteriores al día actual, preservando la coherencia temporal del alta. Esta condición mejora la calidad de reportes de captación y antigüedad de cartera, y previene desalineaciones con documentos relacionados. En entornos donde la función de fecha del motor tenga restricciones, la aplicación debe reforzar este control. Mantenerlo en el modelo lógico asegura que el comportamiento esperado quede documentado y se pruebe de forma sistemática. Su incumplimiento debe bloquearse en inserciones y actualizaciones.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'CHK_Cliente_Fecha_No_Futura' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita capturas con fechas posteriores al día actual, preservando la coherencia temporal del alta. Esta condición mejora la calidad de reportes de captación y antigüedad de cartera, y previene desalineaciones con documentos relacionados. En entornos donde la función de fecha del motor tenga restricciones, la aplicación debe reforzar este control. Mantenerlo en el modelo lógico asegura que el comportamiento esperado quede documentado y se pruebe de forma sistemática. Su incumplimiento debe bloquearse en inserciones y actualizaciones.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Cliente', 'CONSTRAINT', 'CHK_Cliente_Fecha_No_Futura' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'Tbl_DetalleFactura', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Contiene las líneas individuales asociadas a cada factura, donde se registran los ítems vendidos o servicios prestados. La clave primaria id_detalle identifica de manera única cada registro. id_factura actúa como clave foránea hacia la tabla de encabezado y las columnas id_servicio, id_repuesto e id_vehiculo representan vínculos exclusivos opcionales según el tipo de ítem facturado. Los campos cantidad, precio_unitario y subtotal se implementan con validaciones de no-negatividad, garantizando precisión en cálculos de totales. Esta tabla mantiene integridad entre la facturación, el inventario y los servicios, asegurando trazabilidad de los valores cobrados y la composición de cada venta.', 'SCHEMA', 'dbo', 'table', 'Tbl_DetalleFactura' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Contiene las líneas individuales asociadas a cada factura, donde se registran los ítems vendidos o servicios prestados. La clave primaria id_detalle identifica de manera única cada registro. id_factura actúa como clave foránea hacia la tabla de encabezado y las columnas id_servicio, id_repuesto e id_vehiculo representan vínculos exclusivos opcionales según el tipo de ítem facturado. Los campos cantidad, precio_unitario y subtotal se implementan con validaciones de no-negatividad, garantizando precisión en cálculos de totales. Esta tabla mantiene integridad entre la facturación, el inventario y los servicios, asegurando trazabilidad de los valores cobrados y la composición de cada venta.', 'SCHEMA', 'dbo', 'table', 'Tbl_DetalleFactura' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Clave primaria que identifica cada línea facturada, ya sea servicio, repuesto o vehículo, con su cantidad y precio unitario fijados. Permite totalizaciones, notas de crédito y auditorías a nivel renglón sin ambigüedades. Garantiza trazabilidad entre el documento y los ítems efectivamente cobrados. Es esencial para análisis de rentabilidad y conciliaciones contra proformas u órdenes. Su valor permanece estable para preservar la historia fiscal.', 'Schema', [dbo], 'table', [Tbl_DetalleFactura], 'column', [id_detalle]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Llave foránea al encabezado Factura, que agrupa todas las líneas del documento. Garantiza que no existan líneas fuera de un contexto fiscal válido y habilita la relación Factura 1 — DetalleFactura 1..*. Su obligatoriedad preserva la integridad referencial y simplifica totalizaciones, impuestos y cierres. La presencia de este vínculo es condición para cualquier registro del detalle. Es el conector natural hacia cartera y reportes de ventas.', 'Schema', [dbo], 'table', [Tbl_DetalleFactura], 'column', [id_factura]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Referencia opcional a Vehiculo cuando la línea represente venta de unidad. Es NULL si la línea es de servicio o repuesto, conservando la exclusividad. Su presencia respalda reportes por unidad vendida, cálculo de comisiones y auditoría de precios. Debe garantizarse por proceso que una misma unidad no se facture en dos documentos activos. La línea puede incorporar condiciones específicas de la transacción.', 'Schema', [dbo], 'table', [Tbl_DetalleFactura], 'column', [id_vehiculo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Referencia opcional al catálogo Repuesto cuando la línea sea venta de pieza. Debe estar NULL si la línea es de servicio o vehículo, manteniendo la regla de exclusividad. Su uso habilita márgenes por producto, rotación y conciliación con inventario. El precio se congela en el detalle para trazabilidad y no debe volverse negativo por descuentos mal aplicados. Evita líneas genéricas sin artículo.', 'Schema', [dbo], 'table', [Tbl_DetalleFactura], 'column', [id_repuesto]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Cantidad facturada del ítem seleccionado; debe ser estrictamente mayor que 0 para evitar líneas nulas o devoluciones mal registradas. Impacta directamente el subtotal y los impuestos calculados. Cambios posteriores requieren documento fiscal de ajuste, no edición directa. En servicios suele ser horas/unidades de labor; en repuestos o vehículos, unidades físicas. Es clave para métricas de volumen y productividad.', 'Schema', [dbo], 'table', [Tbl_DetalleFactura], 'column', [cantidad]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Importe por unidad a la fecha de emisión; debe ser = 0. Congelar el precio en el detalle preserva trazabilidad contable y evita recomputar por modificaciones de listas. Puede ser 0 en casos excepcionales (bonificaciones) documentados formalmente. Afecta márgenes, descuentos y percepciones/impuestos. Su modificación tras emitir la factura solo procede mediante notas de crédito.', 'Schema', [dbo], 'table', [Tbl_DetalleFactura], 'column', [precio_unitario]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Importe de la línea calculado como cantidad × precio_unitario. Debe ser coherente y no negativo; idealmente se valida con un check lógico de igualdad. Sirve de base para totales, impuestos y estados de cuenta. Guardarlo explícitamente simplifica conciliaciones y auditorías, incluso si luego hay descuentos globales. Cambios requieren documentos de corrección para conservar el rastro fiscal.', 'Schema', [dbo], 'table', [Tbl_DetalleFactura], 'column', [subtotal]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Referencia opcional al catálogo Servicio cuando la línea represente mano de obra. Se mantiene NULL en líneas de repuesto o vehículo para sostener la exclusividad del ítem. Congela el precio negociado en el momento de facturación, sin depender de cambios posteriores en tarifas. Permite análisis de ingresos por tipo de servicio y conciliación con lo planificado en Orden de Servicio cuando aplique. No debe apuntar a servicios inactivos.', 'Schema', [dbo], 'table', [Tbl_DetalleFactura], 'column', [id_servicio]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'PK_DetalleFactura')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Define el identificador único por línea, imprescindible para traza, ajustes y relacionamiento con otros procesos. Su estabilidad evita colisiones y permite auditorías detalladas por ítem facturado. No se recicla tras notas de crédito o anulaciones, preservando la historia fiscal. Es el eje técnico del detalle y habilita controles finos sobre cálculos y conciliaciones. Su correcta definición simplifica diagnósticos de inconsistencias.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'PK_DetalleFactura' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Define el identificador único por línea, imprescindible para traza, ajustes y relacionamiento con otros procesos. Su estabilidad evita colisiones y permite auditorías detalladas por ítem facturado. No se recicla tras notas de crédito o anulaciones, preservando la historia fiscal. Es el eje técnico del detalle y habilita controles finos sobre cálculos y conciliaciones. Su correcta definición simplifica diagnósticos de inconsistencias.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'PK_DetalleFactura' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'FK_incluye_DetalleFactura')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Asocia una línea a un servicio válido solo cuando el ítem es mano de obra. Debe mantenerse NULL si se trata de repuesto o vehículo, sosteniendo exclusividad. Permite conciliación con planificación/ejecución del servicio y reportes por concepto. Evita referencias a servicios inexistentes o inactivos. Su naturaleza opcional respeta facturas de productos o vehículos sin mano de obra.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'FK_incluye_DetalleFactura' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Asocia una línea a un servicio válido solo cuando el ítem es mano de obra. Debe mantenerse NULL si se trata de repuesto o vehículo, sosteniendo exclusividad. Permite conciliación con planificación/ejecución del servicio y reportes por concepto. Evita referencias a servicios inexistentes o inactivos. Su naturaleza opcional respeta facturas de productos o vehículos sin mano de obra.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'FK_incluye_DetalleFactura' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'FK_contiene_Factura')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Vincula cada línea a su factura, impidiendo filas huérfanas y materializando la multiplicidad Factura 1 — DetalleFactura 1..*. Sostiene totalizaciones correctas, cálculo de impuestos y cierres contables. Es indispensable para estados de cuenta y reportes de ventas. Asegura consistencia entre el encabezado y las líneas, evitando desalineaciones por edición aislada.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'FK_contiene_Factura' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Vincula cada línea a su factura, impidiendo filas huérfanas y materializando la multiplicidad Factura 1 — DetalleFactura 1..*. Sostiene totalizaciones correctas, cálculo de impuestos y cierres contables. Es indispensable para estados de cuenta y reportes de ventas. Asegura consistencia entre el encabezado y las líneas, evitando desalineaciones por edición aislada.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'FK_contiene_Factura' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'CHK_DetalleFactura_Cantidad_Pos')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita líneas con cantidad nula o negativa, que carecen de sentido económico y distorsionan subtotales e impuestos. La verificación aplica a altas y cambios. Refuerza coherencia de consumo/venta y reduce incidencias por digitación. Es base para cualquier control de cálculos a nivel de línea. Su cumplimiento impacta KPIs de volumen y productividad.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'CHK_DetalleFactura_Cantidad_Pos' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita líneas con cantidad nula o negativa, que carecen de sentido económico y distorsionan subtotales e impuestos. La verificación aplica a altas y cambios. Refuerza coherencia de consumo/venta y reduce incidencias por digitación. Es base para cualquier control de cálculos a nivel de línea. Su cumplimiento impacta KPIs de volumen y productividad.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'CHK_DetalleFactura_Cantidad_Pos' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'CHK_DetalleFactura_Precio_NoNeg')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Impide precios negativos que generarían subtotales incoherentes y márgenes ficticios. Admite valor 0 solo para casos de cortesía/bonificación formalmente documentados. Eleva la calidad del dato y simplifica conciliación con políticas comerciales. Su presencia en el lógico asegura la validación en el físico y en pruebas de QA.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'CHK_DetalleFactura_Precio_NoNeg' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Impide precios negativos que generarían subtotales incoherentes y márgenes ficticios. Admite valor 0 solo para casos de cortesía/bonificación formalmente documentados. Eleva la calidad del dato y simplifica conciliación con políticas comerciales. Su presencia en el lógico asegura la validación en el físico y en pruebas de QA.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'CHK_DetalleFactura_Precio_NoNeg' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'CHK_DetalleFactura_Subtotal_Calculo')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Define la consistencia aritmética de la línea, alineando el importe con la multiplicación de cantidad por precio. En el físico, según el motor, puedes optar por columna calculada o trigger; aquí se documenta la regla de forma explícita. Esta condición reduce diferencias con resúmenes e impuestos y evita ajustes manuales posteriores. Mejora la confiabilidad de reportes y cierres.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'CHK_DetalleFactura_Subtotal_Calculo' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Define la consistencia aritmética de la línea, alineando el importe con la multiplicación de cantidad por precio. En el físico, según el motor, puedes optar por columna calculada o trigger; aquí se documenta la regla de forma explícita. Esta condición reduce diferencias con resúmenes e impuestos y evita ajustes manuales posteriores. Mejora la confiabilidad de reportes y cierres.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'CHK_DetalleFactura_Subtotal_Calculo' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'UQ_DetalleFactura_Factura_Servicio')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita que el mismo servicio se repita en múltiples líneas dentro de una factura, reduciendo dispersión y errores de sumatoria. Aplica solo a filas con id_servicio informado (en físico usarías índice filtrado). Si tu operación permite varias líneas del mismo servicio con condiciones distintas, omite este unique y gobierna la regla en aplicación.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'UQ_DetalleFactura_Factura_Servicio' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita que el mismo servicio se repita en múltiples líneas dentro de una factura, reduciendo dispersión y errores de sumatoria. Aplica solo a filas con id_servicio informado (en físico usarías índice filtrado). Si tu operación permite varias líneas del mismo servicio con condiciones distintas, omite este unique y gobierna la regla en aplicación.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'UQ_DetalleFactura_Factura_Servicio' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'UQ_DetalleFactura_Factura_Repuesto')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Restringe múltiples apariciones del mismo repuesto en una factura, facilitando sumatorias y control de inventario. Igual que el anterior, en físico requerirá índice filtrado si manejas NULL. Ajusta según tu política de captura.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'UQ_DetalleFactura_Factura_Repuesto' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Restringe múltiples apariciones del mismo repuesto en una factura, facilitando sumatorias y control de inventario. Igual que el anterior, en físico requerirá índice filtrado si manejas NULL. Ajusta según tu política de captura.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'UQ_DetalleFactura_Factura_Repuesto' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'UQ_DetalleFactura_Factura_Vehiculo')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Asegura que un vehículo aparezca a lo sumo en una línea por factura, reforzando la unicidad de la transacción por unidad. Complementa tu proceso que impide vender la misma unidad en dos facturas activas. Si decides permitir varias líneas por vehículo con conceptos diferentes, omítelo y documenta la excepción.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'UQ_DetalleFactura_Factura_Vehiculo' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Asegura que un vehículo aparezca a lo sumo en una línea por factura, reforzando la unicidad de la transacción por unidad. Complementa tu proceso que impide vender la misma unidad en dos facturas activas. Si decides permitir varias líneas por vehículo con conceptos diferentes, omítelo y documenta la excepción.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleFactura', 'CONSTRAINT', 'UQ_DetalleFactura_Factura_Vehiculo' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'Tbl_DetalleOrdenCompra', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Tabla que almacena las líneas individuales de cada orden de compra, detallando los repuestos solicitados. La clave primaria id_detalle_orden_compra garantiza identificación única y las claves foráneas id_orden_compra e id_repuesto mantienen la integridad referencial con el encabezado y el catálogo de repuestos. Los campos cantidad, precio_unitario y subtotal se definen con tipos numéricos de precisión DECIMAL y restricciones de dominio positivas. Esta tabla permite realizar controles de recepción parcial, conciliación con facturas de proveedor y análisis de costos unitarios. Es esencial para el control de abastecimiento, asegurando correspondencia exacta entre pedido, recepción y pago.', 'SCHEMA', 'dbo', 'table', 'Tbl_DetalleOrdenCompra' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Tabla que almacena las líneas individuales de cada orden de compra, detallando los repuestos solicitados. La clave primaria id_detalle_orden_compra garantiza identificación única y las claves foráneas id_orden_compra e id_repuesto mantienen la integridad referencial con el encabezado y el catálogo de repuestos. Los campos cantidad, precio_unitario y subtotal se definen con tipos numéricos de precisión DECIMAL y restricciones de dominio positivas. Esta tabla permite realizar controles de recepción parcial, conciliación con facturas de proveedor y análisis de costos unitarios. Es esencial para el control de abastecimiento, asegurando correspondencia exacta entre pedido, recepción y pago.', 'SCHEMA', 'dbo', 'table', 'Tbl_DetalleOrdenCompra' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identificador único de la línea del pedido de compra. Distingue inequívocamente el artículo, cantidad y precio pactados por renglón, permitiendo recepciones parciales y conciliación fina por ítem. Su estabilidad facilita auditorías de valorización y control de desviaciones frente a lo recibido y facturado. Constituye la unidad mínima de compromiso económico en la orden. No se modifica ni se reutiliza tras ser emitida.', 'Schema', [dbo], 'table', [Tbl_DetalleOrdenCompra], 'column', [id_detalle_orden_compra]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Llave foránea al encabezado OrdenCompra que agrupa todas las líneas del pedido. Asegura que ninguna línea exista fuera del contexto de una orden válida y habilita la relación 1:N (una OC tiene muchas líneas). La obligatoriedad preserva la integridad referencial y simplifica reportes por documento. Es fundamental para cierres, recepciones parciales y valorización.', 'Schema', [dbo], 'table', [Tbl_DetalleOrdenCompra], 'column', [id_orden_compra]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identifica el Repuesto específico solicitado en esta línea. Define la unidad de compra y el objeto sobre el que se aplican cantidad y precio. Su presencia evita líneas genéricas sin artículo y asegura que la compra sea conciliable con inventario. Es clave para análisis por ítem, negociación de costos y control de catálogos. La FK impide referencias a repuestos inexistentes o inactivos.', 'Schema', [dbo], 'table', [Tbl_DetalleOrdenCompra], 'column', [id_repuesto]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Cantidad comprometida para el repuesto en esta línea. Debe ser estrictamente > 0 para evitar pedidos nulos o negativos. Su valor impacta la planificación de recepciones, el cálculo de subtotales y la generación de alertas de sobrepedido. Cambios posteriores requieren autorización y pueden afectar la conciliación contra la factura del proveedor. Es un dato crítico para cobertura y rotación.', 'Schema', [dbo], 'table', [Tbl_DetalleOrdenCompra], 'column', [cantidad]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Precio negociado por unidad del repuesto en esta línea, en la moneda operativa del sistema. Debe ser = 0; si es 0, se trata de cortesía o bonificación documentada. Fijarlo en el detalle congela la condición económica del pedido, aún si la lista del proveedor cambia. Afecta márgenes y valorizaciones; su modificación requiere proceso controlado.', 'Schema', [dbo], 'table', [Tbl_DetalleOrdenCompra], 'column', [precio_unitario]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Importe de la línea al momento del pedido, idealmente igual a cantidad × precio_unitario. Se guarda para trazabilidad contable, conciliaciones y comparación contra la factura del proveedor. No debe ser negativo. Si se recalcula por descuentos o cargos, el cambio debe justificarse y conservar rastro. Es base para totalizar la OC y sus reportes.', 'Schema', [dbo], 'table', [Tbl_DetalleOrdenCompra], 'column', [subtotal]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleOrdenCompra', 'CONSTRAINT', 'PK_DetalleOrdenCompra')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Define el identificador único de la línea, imprescindible para referenciar recepciones, ajustes y auditorías. Su estabilidad y unicidad evitan colisiones y ambigüedades al conciliar cantidades y costos. No debe reciclarse, incluso si la OC se anula, para preservar trazabilidad histórica. Es el eje técnico de integridad en el detalle. Simplifica diagnósticos y facilita integraciones con módulos de recepción o contabilidad.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleOrdenCompra', 'CONSTRAINT', 'PK_DetalleOrdenCompra' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Define el identificador único de la línea, imprescindible para referenciar recepciones, ajustes y auditorías. Su estabilidad y unicidad evitan colisiones y ambigüedades al conciliar cantidades y costos. No debe reciclarse, incluso si la OC se anula, para preservar trazabilidad histórica. Es el eje técnico de integridad en el detalle. Simplifica diagnósticos y facilita integraciones con módulos de recepción o contabilidad.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleOrdenCompra', 'CONSTRAINT', 'PK_DetalleOrdenCompra' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleOrdenCompra', 'CONSTRAINT', 'FK_contiene_OrdenCompra')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Establece la dependencia de cada línea respecto a su orden de compra, evitando filas huérfanas. La relación materializa la cardinalidad OrdenCompra 1 — DetalleOrdenCompra 1..*. Permite totalizaciones y controles de estado por documento. Sustenta recepciones parciales y conciliación con la factura del proveedor. Es clave para auditorías del ciclo de compra.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleOrdenCompra', 'CONSTRAINT', 'FK_contiene_OrdenCompra' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Establece la dependencia de cada línea respecto a su orden de compra, evitando filas huérfanas. La relación materializa la cardinalidad OrdenCompra 1 — DetalleOrdenCompra 1..*. Permite totalizaciones y controles de estado por documento. Sustenta recepciones parciales y conciliación con la factura del proveedor. Es clave para auditorías del ciclo de compra.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleOrdenCompra', 'CONSTRAINT', 'FK_contiene_OrdenCompra' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleOrdenCompra', 'CONSTRAINT', 'FK_incluye_DetalleOrdenCompra')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Vincula la línea con el repuesto solicitado, garantizando que el ítem exista en el catálogo y tenga proveedor/responsable. Evita referencias inválidas y mantiene coherencia entre compras e inventario. Habilita análisis por artículo, negociación de costos y control de calidad del maestro. Es indispensable para trazabilidad hacia recepciones y stock.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleOrdenCompra', 'CONSTRAINT', 'FK_incluye_DetalleOrdenCompra' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Vincula la línea con el repuesto solicitado, garantizando que el ítem exista en el catálogo y tenga proveedor/responsable. Evita referencias inválidas y mantiene coherencia entre compras e inventario. Habilita análisis por artículo, negociación de costos y control de calidad del maestro. Es indispensable para trazabilidad hacia recepciones y stock.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleOrdenCompra', 'CONSTRAINT', 'FK_incluye_DetalleOrdenCompra' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleOrdenCompra', 'CONSTRAINT', 'CHK_DetalleOC_Cantidad_Pos')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Impide pedidos con cantidad cero o negativa, que carecen de sentido operativo y distorsionan cálculos de costos. La verificación aplica en altas y cambios, reduciendo errores de captura. Alinea el detalle con políticas de compra y con la contabilidad de recepciones. Mejora la confiabilidad de reportes y evita ajustes innecesarios. Es un control lógico de base para la calidad del dato.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleOrdenCompra', 'CONSTRAINT', 'CHK_DetalleOC_Cantidad_Pos' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Impide pedidos con cantidad cero o negativa, que carecen de sentido operativo y distorsionan cálculos de costos. La verificación aplica en altas y cambios, reduciendo errores de captura. Alinea el detalle con políticas de compra y con la contabilidad de recepciones. Mejora la confiabilidad de reportes y evita ajustes innecesarios. Es un control lógico de base para la calidad del dato.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleOrdenCompra', 'CONSTRAINT', 'CHK_DetalleOC_Cantidad_Pos' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleOrdenCompra', 'CONSTRAINT', 'CHK_DetalleOC_Precio_NoNeg')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita valores negativos que producirían subtotales incoherentes y márgenes ficticios. Acepta valor 0 únicamente cuando el negocio lo justifique (bonificación/cortesía), quedando documentado. Este control eleva la calidad del maestro de compras y agiliza validaciones en conciliación con factura. Es un requisito lógico que debe replicarse en el físico.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleOrdenCompra', 'CONSTRAINT', 'CHK_DetalleOC_Precio_NoNeg' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita valores negativos que producirían subtotales incoherentes y márgenes ficticios. Acepta valor 0 únicamente cuando el negocio lo justifique (bonificación/cortesía), quedando documentado. Este control eleva la calidad del maestro de compras y agiliza validaciones en conciliación con factura. Es un requisito lógico que debe replicarse en el físico.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleOrdenCompra', 'CONSTRAINT', 'CHK_DetalleOC_Precio_NoNeg' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleOrdenCompra', 'CONSTRAINT', 'CHK_DetalleOC_Subtotal_Calculo')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Establece la consistencia matemática de la línea, alineando el subtotal con el producto de cantidad y precio. En el modelo físico podrías optar por columna calculada o validar vía trigger si el motor limita expresiones en CHECK, pero aquí se documenta la regla de negocio explícita. Este control reduce diferencias al conciliar con facturas y evita errores de digitación. Mejora la confiabilidad de totalizaciones y reportes de compras.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleOrdenCompra', 'CONSTRAINT', 'CHK_DetalleOC_Subtotal_Calculo' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Establece la consistencia matemática de la línea, alineando el subtotal con el producto de cantidad y precio. En el modelo físico podrías optar por columna calculada o validar vía trigger si el motor limita expresiones en CHECK, pero aquí se documenta la regla de negocio explícita. Este control reduce diferencias al conciliar con facturas y evita errores de digitación. Mejora la confiabilidad de totalizaciones y reportes de compras.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleOrdenCompra', 'CONSTRAINT', 'CHK_DetalleOC_Subtotal_Calculo' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleOrdenCompra', 'CONSTRAINT', 'UQ_DetalleOC_OC_Repuesto')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita que una misma OC contenga dos líneas del mismo repuesto. Simplifica conciliaciones y previene dispersión de cantidades en múltiples filas. Si tu operación permite dividir el mismo ítem en varias líneas por condiciones distintas, omite este unique y gobierna la regla desde aplicación. Documentarlo aquí te obliga a decidir el criterio de captura y mantenerlo consistente.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleOrdenCompra', 'CONSTRAINT', 'UQ_DetalleOC_OC_Repuesto' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita que una misma OC contenga dos líneas del mismo repuesto. Simplifica conciliaciones y previene dispersión de cantidades en múltiples filas. Si tu operación permite dividir el mismo ítem en varias líneas por condiciones distintas, omite este unique y gobierna la regla desde aplicación. Documentarlo aquí te obliga a decidir el criterio de captura y mantenerlo consistente.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_DetalleOrdenCompra', 'CONSTRAINT', 'UQ_DetalleOC_OC_Repuesto' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'Tbl_Empleado', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Contiene los datos del personal administrativo y operativo que interviene en los procesos del sistema, ya sea en ventas, compras o servicios. Su clave primaria id_empleado garantiza trazabilidad en cada acción ejecutada, permitiendo asociar la emisión de facturas, gestión de órdenes y otras actividades a un responsable definido. Los atributos de identificación y cargo se tipifican como VARCHAR con validaciones de formato, mientras que salario utiliza DECIMAL(12,2) para precisión monetaria. La combinación de fecha_contratacion y estado_empleado facilita el control histórico y la gestión de personal activo. La tabla mantiene integridad referencial con Factura, OrdenServicio y OrdenCompra, contribuyendo al seguimiento del desempeño y cumplimiento de funciones.', 'SCHEMA', 'dbo', 'table', 'Tbl_Empleado' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Contiene los datos del personal administrativo y operativo que interviene en los procesos del sistema, ya sea en ventas, compras o servicios. Su clave primaria id_empleado garantiza trazabilidad en cada acción ejecutada, permitiendo asociar la emisión de facturas, gestión de órdenes y otras actividades a un responsable definido. Los atributos de identificación y cargo se tipifican como VARCHAR con validaciones de formato, mientras que salario utiliza DECIMAL(12,2) para precisión monetaria. La combinación de fecha_contratacion y estado_empleado facilita el control histórico y la gestión de personal activo. La tabla mantiene integridad referencial con Factura, OrdenServicio y OrdenCompra, contribuyendo al seguimiento del desempeño y cumplimiento de funciones.', 'SCHEMA', 'dbo', 'table', 'Tbl_Empleado' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identificador técnico único del empleado, usado como clave primaria y llave de enlace hacia todos los documentos que requieren traza de responsable. Debe ser positivo, no reutilizable y estable en el tiempo para preservar auditoría. Su naturaleza sustitutiva evita depender de datos personales o del cargo, que pueden cambiar. Es el ancla de integridad referencial en relaciones 1:N con procesos de emisión y ejecución.', 'Schema', [dbo], 'table', [Tbl_Empleado], 'column', [id_empleado]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Primer componente del nombre legal del empleado, utilizado en encabezados, firmas y reportes internos. Se exige no vacío y con capitalización/alfanumérica coherente para asegurar uniformidad. Es clave para búsquedas y asignaciones operativas. Debe mantenerse actualizado si hay cambios administrativos. Complementa a apellido para construir el nombre completo visible en documentos.', 'Schema', [dbo], 'table', [Tbl_Empleado], 'column', [nombre]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Segundo componente del nombre legal, requerido para desambiguar homónimos en reportes, asignaciones de tarea y métricas. Se recomienda estandarizar ortografía y acentos para mantener consistencia. Su presencia mejora la claridad en tableros de seguimiento y en auditorías. No se admiten cadenas vacías; su gestión sigue las políticas de RR. HH.', 'Schema', [dbo], 'table', [Tbl_Empleado], 'column', [apellido]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Medio de contacto laboral/operativo para coordinación y notificaciones internas. Se guarda como texto para permitir prefijos internacionales y extensiones. Debe cumplir longitudes plausibles y mantenerse vigente. Es usado por supervisión para comunicación de incidentes o aprobaciones. Su calidad impacta tiempos de respuesta.', 'Schema', [dbo], 'table', [Tbl_Empleado], 'column', [telefono]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Correo corporativo de referencia para comunicaciones formales y accesos. Debe ser único para evitar conflictos de identidad y trazas ambiguas en emisión/ejecución. Se verifica formato mínimo (patrón @.*) a nivel lógico; validaciones más fuertes irán en aplicación o físico. Cambios exigen proceso controlado para no romper la vinculación histórica de documentos.', 'Schema', [dbo], 'table', [Tbl_Empleado], 'column', [email]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Domicilio administrativo del empleado (o sede) relevante para comunicaciones y cumplimiento de políticas internas. Debe registrarse con suficiente detalle para fines de RR. HH. y logística. Su mantenimiento actualizado evita incidencias en notificaciones formales. Contribuye a segmentaciones internas por ubicación cuando aplican. No se aceptan valores vacíos.', 'Schema', [dbo], 'table', [Tbl_Empleado], 'column', [direccion]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha oficial de alta del empleado, usada para antigüedad, elegibilidad y ventanas de evaluación. No debe ser futura; modificaciones posteriores solo por corrección justificada. Se ocupa en cortes históricos y métricas de dotación. Aporta contexto temporal a la trazabilidad de documentos emitidos/ejecutados.', 'Schema', [dbo], 'table', [Tbl_Empleado], 'column', [fecha_contratacion]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Rol/posición del empleado dentro de la organización (p. ej., asesor, cajero, técnico, comprador, jefe de taller). Sirve para políticas de permisos, segregación de funciones y reportes de productividad por rol. Debe provenir de una lista controlada para evitar variantes libres. Los cambios de cargo se registran por motivos administrativos y pueden afectar autorizaciones.', 'Schema', [dbo], 'table', [Tbl_Empleado], 'column', [cargo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Remuneración base del empleado expresada como valor numérico, utilizada para fines administrativos y de control interno. Debe registrarse en la misma moneda operativa del sistema y mantenerse actualizada conforme a movimientos de nómina autorizados. No se permiten valores negativos y su modificación requiere procedimiento formal que preserve trazabilidad (fecha y responsable). Este dato no se expone en documentos comerciales y se considera de acceso restringido según políticas internas. Se declara NOT NULL para evitar registros incompletos que afecten reportes y controles administrativos.', 'Schema', [dbo], 'table', [Tbl_Empleado], 'column', [salario]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Condición operativa del empleado (p. ej., activo, inactivo, suspendido), que gobierna si puede originar o ejecutar operaciones en el sistema. La lista debe ser cerrada y coherente con políticas internas. Cambios requieren justificación y quedan auditados. Su control evita emisiones/ejecuciones por personal no habilitado.', 'Schema', [dbo], 'table', [Tbl_Empleado], 'column', [estado_empleado]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'PK_Empleado')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Clave primaria numérica, positiva y estable que identifica unívocamente a cada empleado. Su definición evita colisiones y soporta integridad referencial con facturas, órdenes y registros de ejecución. No debe reciclarse tras bajas para preservar trazabilidad histórica. Es la base para métricas de productividad y atribución de responsabilidades. Su solidez simplifica auditorías internas y externas ligadas a documentos operativos.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'PK_Empleado' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Clave primaria numérica, positiva y estable que identifica unívocamente a cada empleado. Su definición evita colisiones y soporta integridad referencial con facturas, órdenes y registros de ejecución. No debe reciclarse tras bajas para preservar trazabilidad histórica. Es la base para métricas de productividad y atribución de responsabilidades. Su solidez simplifica auditorías internas y externas ligadas a documentos operativos.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'PK_Empleado' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'CHK_Empleado_Salario_NoNegativo')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Establece el dominio mínimo de salario impidiendo valores negativos, que carecen de sentido en registros de remuneración. La verificación aplica a inserciones y actualizaciones, reforzando la calidad del dato y evitando distorsiones en reportes administrativos. No define un máximo; límites superiores razonables pueden controlarse en la aplicación o políticas de RR. HH. La presencia de este check en el modelo lógico asegura su traslado al físico y su validación en QA. Contribuye a la integridad de indicadores salariales y conciliaciones internas.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'CHK_Empleado_Salario_NoNegativo' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Establece el dominio mínimo de salario impidiendo valores negativos, que carecen de sentido en registros de remuneración. La verificación aplica a inserciones y actualizaciones, reforzando la calidad del dato y evitando distorsiones en reportes administrativos. No define un máximo; límites superiores razonables pueden controlarse en la aplicación o políticas de RR. HH. La presencia de este check en el modelo lógico asegura su traslado al físico y su validación en QA. Contribuye a la integridad de indicadores salariales y conciliaciones internas.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'CHK_Empleado_Salario_NoNegativo' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'UQ_Empleado_Email')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Asegura que cada correo corporativo identifique a un único empleado, evitando conflictos en notificaciones y accesos. La unicidad mejora la traza de quién emite/ejecuta documentos y reduce errores en integraciones. Se recomienda combinar con verificación de formato y políticas de verificación de cuenta. Cambios de email deben gestionarse con control para no perder continuidad histórica. Este control refuerza la calidad del maestro y la seguridad operativa.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'UQ_Empleado_Email' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Asegura que cada correo corporativo identifique a un único empleado, evitando conflictos en notificaciones y accesos. La unicidad mejora la traza de quién emite/ejecuta documentos y reduce errores en integraciones. Se recomienda combinar con verificación de formato y políticas de verificación de cuenta. Cambios de email deben gestionarse con control para no perder continuidad histórica. Este control refuerza la calidad del maestro y la seguridad operativa.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'UQ_Empleado_Email' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'CHK_Empleado_Id_Positive')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Impide valores nulos, cero o negativos en la clave primaria, reforzando la calidad técnica del identificador. Esta regla facilita importaciones, sincronizaciones y diagnósticos, evitando registros anómalos. Complementa la PK y el NOT NULL para asegurar un eje de referencia válido. Su presencia en el lógico obliga a su réplica en el físico. Mejora la estabilidad de relaciones 1:N hacia documentos operativos.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'CHK_Empleado_Id_Positive' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Impide valores nulos, cero o negativos en la clave primaria, reforzando la calidad técnica del identificador. Esta regla facilita importaciones, sincronizaciones y diagnósticos, evitando registros anómalos. Complementa la PK y el NOT NULL para asegurar un eje de referencia válido. Su presencia en el lógico obliga a su réplica en el físico. Mejora la estabilidad de relaciones 1:N hacia documentos operativos.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'CHK_Empleado_Id_Positive' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'CHK_Empleado_Telefono_Longitud')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Establece un rango plausible considerando extensiones y formatos internacionales. Evita capturas demasiado cortas o excesivas que obstaculicen la comunicación. Se aplica en altas y actualizaciones, sosteniendo consistencia del maestro. Complementa normalizaciones en aplicación (espacios, guiones). Mejora la efectividad de recordatorios y coordinación operativa.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'CHK_Empleado_Telefono_Longitud' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Establece un rango plausible considerando extensiones y formatos internacionales. Evita capturas demasiado cortas o excesivas que obstaculicen la comunicación. Se aplica en altas y actualizaciones, sosteniendo consistencia del maestro. Complementa normalizaciones en aplicación (espacios, guiones). Mejora la efectividad de recordatorios y coordinación operativa.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'CHK_Empleado_Telefono_Longitud' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'CHK_Empleado_Email_Formato')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Verificación básica para descartar cadenas evidentemente no válidas como correo; no sustituye validación exhaustiva. Sirve para elevar el piso de calidad del dato y reducir errores de digitación. La validación completa (regex) se delega a la aplicación o al modelo físico. Mantener esta especificación en el lógico asegura pruebas consistentes en QA. Contribuye a comunicaciones confiables con clientes y equipos internos.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'CHK_Empleado_Email_Formato' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Verificación básica para descartar cadenas evidentemente no válidas como correo; no sustituye validación exhaustiva. Sirve para elevar el piso de calidad del dato y reducir errores de digitación. La validación completa (regex) se delega a la aplicación o al modelo físico. Mantener esta especificación en el lógico asegura pruebas consistentes en QA. Contribuye a comunicaciones confiables con clientes y equipos internos.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'CHK_Empleado_Email_Formato' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'CHK_Empleado_Estado')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Define un conjunto finito de estados operativos, alineado con políticas de RR. HH. y controles de permisos. Restringir el dominio evita etiquetas improvisadas y asegura interpretaciones homogéneas en reportes. Cambios de estado deben ser autorizados y auditables. La consistencia del estado previene emisiones/ejecuciones por personal no habilitado. Esta regla refuerza la calidad del maestro y la gobernanza operativa.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'CHK_Empleado_Estado' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Define un conjunto finito de estados operativos, alineado con políticas de RR. HH. y controles de permisos. Restringir el dominio evita etiquetas improvisadas y asegura interpretaciones homogéneas en reportes. Cambios de estado deben ser autorizados y auditables. La consistencia del estado previene emisiones/ejecuciones por personal no habilitado. Esta regla refuerza la calidad del maestro y la gobernanza operativa.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'CHK_Empleado_Estado' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'CHK_Empleado_Cargo_Listado')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Restringe cargo a un conjunto acordado, evitando variantes libres que rompen analítica y permisos por rol. La lista refleja la estructura organizativa y puede ampliarse solo por cambio de diseño. Facilita tableros por rol, asignación de tareas y segregación de funciones (p. ej., quien emite vs. quien ejecuta). La regla eleva la calidad de reportes y simplifica la administración de perfiles.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'CHK_Empleado_Cargo_Listado' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Restringe cargo a un conjunto acordado, evitando variantes libres que rompen analítica y permisos por rol. La lista refleja la estructura organizativa y puede ampliarse solo por cambio de diseño. Facilita tableros por rol, asignación de tareas y segregación de funciones (p. ej., quien emite vs. quien ejecuta). La regla eleva la calidad de reportes y simplifica la administración de perfiles.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'CHK_Empleado_Cargo_Listado' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'CHK_Empleado_Fecha_NoFutura')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita registrar fechas posteriores al día actual, preservando coherencia temporal de la dotación. Es clave para antigüedad, elegibilidad y cortes históricos. Si el motor físico limitara funciones de fecha en CHECK, la aplicación o un trigger replicarán este control. Mantenerlo en el lógico asegura que el requerimiento quede visible en diseño y pruebas. Protege la consistencia de indicadores de RR. HH. y auditorías.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'CHK_Empleado_Fecha_NoFutura' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita registrar fechas posteriores al día actual, preservando coherencia temporal de la dotación. Es clave para antigüedad, elegibilidad y cortes históricos. Si el motor físico limitara funciones de fecha en CHECK, la aplicación o un trigger replicarán este control. Mantenerlo en el lógico asegura que el requerimiento quede visible en diseño y pruebas. Protege la consistencia de indicadores de RR. HH. y auditorías.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Empleado', 'CONSTRAINT', 'CHK_Empleado_Fecha_NoFutura' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'Tbl_Factura', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Representa el documento fiscal de salida emitido en operaciones de venta o prestación de servicios. La clave primaria id_factura asegura la unicidad del documento en el sistema. Contiene relaciones con Cliente, Empleado y opcionalmente con OrdenServicio, preservando la integridad del flujo comercial y operativo. Los atributos monto_total, estado_pago y metodo_pago reflejan el estado financiero de la transacción, con controles para garantizar valores coherentes y fechas válidas (fecha_emision = fecha_vencimiento). observaciones permite registrar notas adicionales. La tabla mantiene consistencia con su detalle asociado, asegurando que los importes facturados concuerden con los ítems registrados. Es un componente esencial para auditorías y control contable.', 'SCHEMA', 'dbo', 'table', 'Tbl_Factura' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Representa el documento fiscal de salida emitido en operaciones de venta o prestación de servicios. La clave primaria id_factura asegura la unicidad del documento en el sistema. Contiene relaciones con Cliente, Empleado y opcionalmente con OrdenServicio, preservando la integridad del flujo comercial y operativo. Los atributos monto_total, estado_pago y metodo_pago reflejan el estado financiero de la transacción, con controles para garantizar valores coherentes y fechas válidas (fecha_emision = fecha_vencimiento). observaciones permite registrar notas adicionales. La tabla mantiene consistencia con su detalle asociado, asegurando que los importes facturados concuerden con los ítems registrados. Es un componente esencial para auditorías y control contable.', 'SCHEMA', 'dbo', 'table', 'Tbl_Factura' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identificador técnico único del documento. Sirve como clave primaria y ancla para las relaciones con DetalleFactura y cobros. Es un valor numérico secuencial que no debe reutilizarse ni modificarse tras la emisión, ya que preserva la trazabilidad del documento y su rastro contable. La PK asegura unicidad y permite enlazar procesos fiscales, auditorías y correcciones futuras sin ambigüedad. Su estabilidad lo convierte en la base del registro histórico de facturación.', 'Schema', [dbo], 'table', [Tbl_Factura], 'column', [id_factura]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Llave foránea que vincula la factura con el empleado responsable de su emisión. Permite identificar al colaborador autorizado para generar documentos, garantizando control interno y segregación de funciones. Facilita reportes de productividad, rendimiento y cumplimiento de metas comerciales. Su obligatoriedad asegura trazabilidad en auditorías y revisiones de cumplimiento. En caso de reasignaciones, se deben documentar formalmente.', 'Schema', [dbo], 'table', [Tbl_Factura], 'column', [id_empleado]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Campo descriptivo opcional que permite registrar notas aclaratorias sobre el documento o condiciones particulares de la venta. No afecta el valor fiscal pero añade contexto operativo o comercial. Se utiliza para observaciones sobre métodos de pago, entregas o acuerdos específicos con el cliente. Su uso mejora la documentación del proceso de facturación.', 'Schema', [dbo], 'table', [Tbl_Factura], 'column', [observaciones]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Llave foránea hacia la entidad Cliente, que identifica al titular del documento. Cada factura debe pertenecer a un cliente existente, evitando facturas sin receptor válido. Este vínculo mantiene integridad referencial y soporte para reportes de ventas, cobranzas y cartera. Su gestión adecuada es fundamental para cumplir obligaciones fiscales y análisis de recurrencia o comportamiento de clientes.', 'Schema', [dbo], 'table', [Tbl_Factura], 'column', [id_cliente]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Referencia opcional a la Orden de Servicio que originó la factura. Se deja NULL cuando la venta no proviene del taller. Permite conciliar el flujo operativo entre servicio ejecutado y cobro realizado, evitando doble facturación. Refuerza trazabilidad del ciclo operativo-financiero y apoya auditorías de eficiencia. Su existencia en el modelo lógico refleja la dependencia opcional sin forzar facturación por orden.', 'Schema', [dbo], 'table', [Tbl_Factura], 'column', [id_ordenServicio]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha oficial de emisión del documento. Determina la vigencia del cobro, cálculo de impuestos y antigüedad en cuentas por cobrar. No puede ser futura ni posterior al cierre contable. Debe mantenerse congruente con el detalle y las transacciones de origen. Su control garantiza precisión en cortes de mes, reportes regulatorios y auditorías de cumplimiento fiscal.', 'Schema', [dbo], 'table', [Tbl_Factura], 'column', [fecha_emision]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Monto total a pagar, resultado de sumar todos los subtotales de las líneas e impuestos aplicables. Debe ser = 0 y representar el valor fiscal del documento. Se congela al momento de emisión y solo puede modificarse mediante una nota de crédito o documento de ajuste. Es la base de los reportes de ventas, ingresos y análisis de facturación. Su precisión es vital para balances contables.', 'Schema', [dbo], 'table', [Tbl_Factura], 'column', [monto_total]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Refleja el estado actual de la factura (por ejemplo: ‘pendiente’, ‘pagada’, ‘anulada’). Controla las operaciones posibles sobre el documento y asegura cumplimiento del flujo contable. El campo debe aceptar solo valores válidos, definidos por política. Las transiciones de estado deben quedar registradas con fecha y responsable, garantizando trazabilidad total. Su consistencia es esencial para reportes financieros.', 'Schema', [dbo], 'table', [Tbl_Factura], 'column', [estado_pago]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Indica el límite de pago del documento. Se calcula según políticas de crédito (por ejemplo, 15 o 30 días después de emisión). Es esencial para gestionar la cartera y los indicadores de morosidad. La fecha no debe ser anterior a la de emisión. Controlar este valor asegura correcta periodificación y facilita reportes de antigüedad de saldos. Cambios posteriores solo deben realizarse con autorización.', 'Schema', [dbo], 'table', [Tbl_Factura], 'column', [fecha_vencimiento]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Factura', 'CONSTRAINT', 'PK_Factura')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Define el identificador único del documento y garantiza su unicidad dentro del sistema. Evita duplicidades y mantiene integridad con las tablas hijas. Su existencia es esencial para auditorías y trazabilidad fiscal. Una vez asignado, el valor no se modifica ni se reutiliza. Proporciona estabilidad a los enlaces referenciales.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Factura', 'CONSTRAINT', 'PK_Factura' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Define el identificador único del documento y garantiza su unicidad dentro del sistema. Evita duplicidades y mantiene integridad con las tablas hijas. Su existencia es esencial para auditorías y trazabilidad fiscal. Una vez asignado, el valor no se modifica ni se reutiliza. Proporciona estabilidad a los enlaces referenciales.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Factura', 'CONSTRAINT', 'PK_Factura' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Factura', 'CONSTRAINT', 'FK_pertenece_Factura')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Enlaza la factura con el cliente titular, asegurando integridad referencial y consistencia comercial. Impide la emisión de documentos sin receptor válido. Facilita reportes de ventas por cliente y análisis de comportamiento. Cualquier cambio de cliente requiere un proceso de anulación o reemisión formal.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Factura', 'CONSTRAINT', 'FK_pertenece_Factura' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Enlaza la factura con el cliente titular, asegurando integridad referencial y consistencia comercial. Impide la emisión de documentos sin receptor válido. Facilita reportes de ventas por cliente y análisis de comportamiento. Cualquier cambio de cliente requiere un proceso de anulación o reemisión formal.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Factura', 'CONSTRAINT', 'FK_pertenece_Factura' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Factura', 'CONSTRAINT', 'FK_emite_Empleado')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Asocia la factura al colaborador que la emitió, garantizando trazabilidad operativa y control de responsabilidades. Su obligatoriedad refuerza las políticas de seguridad y auditoría. Permite reportes de productividad y segregación de funciones. No debe alterarse tras la emisión.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Factura', 'CONSTRAINT', 'FK_emite_Empleado' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Asocia la factura al colaborador que la emitió, garantizando trazabilidad operativa y control de responsabilidades. Su obligatoriedad refuerza las políticas de seguridad y auditoría. Permite reportes de productividad y segregación de funciones. No debe alterarse tras la emisión.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Factura', 'CONSTRAINT', 'FK_emite_Empleado' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Factura', 'CONSTRAINT', 'FK_origina_OrdenServicio')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Define el vínculo opcional entre la factura y la orden que la origina, sin imponer obligatoriedad. Permite trazar el ciclo planificado–ejecutado–facturado. Garantiza coherencia entre operaciones de taller y su representación contable. Su configuración opcional evita facturas erróneas para servicios no planificados.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Factura', 'CONSTRAINT', 'FK_origina_OrdenServicio' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Define el vínculo opcional entre la factura y la orden que la origina, sin imponer obligatoriedad. Permite trazar el ciclo planificado–ejecutado–facturado. Garantiza coherencia entre operaciones de taller y su representación contable. Su configuración opcional evita facturas erróneas para servicios no planificados.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Factura', 'CONSTRAINT', 'FK_origina_OrdenServicio' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Factura', 'CONSTRAINT', 'CHK_Factura_EstadoPago')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Garantiza la validez de los estados permitidos en el flujo contable. Evita que se asignen etiquetas no oficiales o inconsistentes. Controla la secuencia de procesos (emisión, cobro, anulación). Facilita reportes financieros y asegura integridad en cierres de periodo.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Factura', 'CONSTRAINT', 'CHK_Factura_EstadoPago' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Garantiza la validez de los estados permitidos en el flujo contable. Evita que se asignen etiquetas no oficiales o inconsistentes. Controla la secuencia de procesos (emisión, cobro, anulación). Facilita reportes financieros y asegura integridad en cierres de periodo.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Factura', 'CONSTRAINT', 'CHK_Factura_EstadoPago' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Factura', 'CONSTRAINT', 'CHK_Factura_Fechas_Validas')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Verifica que la fecha de emisión nunca sea posterior a la fecha de vencimiento. Este control mantiene coherencia temporal y evita errores en reportes de cartera. Su aplicación es clave para la confiabilidad de análisis de vencimientos. Refuerza políticas de crédito y cumplimiento fiscal.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Factura', 'CONSTRAINT', 'CHK_Factura_Fechas_Validas' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Verifica que la fecha de emisión nunca sea posterior a la fecha de vencimiento. Este control mantiene coherencia temporal y evita errores en reportes de cartera. Su aplicación es clave para la confiabilidad de análisis de vencimientos. Refuerza políticas de crédito y cumplimiento fiscal.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Factura', 'CONSTRAINT', 'CHK_Factura_Fechas_Validas' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Factura', 'CONSTRAINT', 'CHK_Factura_Monto_NoNeg')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita facturas con montos negativos o inconsistentes con las líneas del detalle. Protege los balances y la rentabilidad contable. Su aplicación es simple pero crítica. Asegura que todos los documentos emitidos tengan impacto económico válido. Refuerza la integridad del proceso de facturación.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Factura', 'CONSTRAINT', 'CHK_Factura_Monto_NoNeg' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita facturas con montos negativos o inconsistentes con las líneas del detalle. Protege los balances y la rentabilidad contable. Su aplicación es simple pero crítica. Asegura que todos los documentos emitidos tengan impacto económico válido. Refuerza la integridad del proceso de facturación.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Factura', 'CONSTRAINT', 'CHK_Factura_Monto_NoNeg' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'Tbl_OrdenCompra', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Encabezado de los documentos de compra generados hacia los proveedores. La clave primaria id_orden_compra garantiza unicidad y seguimiento de cada adquisición. Contiene claves foráneas hacia Proveedor y Empleado para registrar el responsable interno y el proveedor externo. Los atributos fecha_orden, fecha_entrega, metodo_pago, forma_envio y estado_orden reflejan la trazabilidad logística y administrativa de cada operación. total_orden y observaciones documentan los valores y condiciones asociadas. Las validaciones de estado aseguran la correcta transición del ciclo de compra (abierta, en_proceso, recibida, cerrada, cancelada). Su diseño permite integraciones con inventario y control presupuestario.', 'SCHEMA', 'dbo', 'table', 'Tbl_OrdenCompra' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Encabezado de los documentos de compra generados hacia los proveedores. La clave primaria id_orden_compra garantiza unicidad y seguimiento de cada adquisición. Contiene claves foráneas hacia Proveedor y Empleado para registrar el responsable interno y el proveedor externo. Los atributos fecha_orden, fecha_entrega, metodo_pago, forma_envio y estado_orden reflejan la trazabilidad logística y administrativa de cada operación. total_orden y observaciones documentan los valores y condiciones asociadas. Las validaciones de estado aseguran la correcta transición del ciclo de compra (abierta, en_proceso, recibida, cerrada, cancelada). Su diseño permite integraciones con inventario y control presupuestario.', 'SCHEMA', 'dbo', 'table', 'Tbl_OrdenCompra' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identificador técnico único de la orden. Actúa como clave primaria estable y no reutilizable para preservar el rastro del ciclo completo (emisión, recepción, cierre o cancelación). Es el ancla para su detalle, recepciones y conciliaciones contra la factura del proveedor. Su estabilidad facilita auditorías, reportes y trazas de aprobación. No depende de numeraciones externas del proveedor.', 'Schema', [dbo], 'table', [Tbl_OrdenCompra], 'column', [id_orden_compra]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Enlace al Proveedor al que se emite la orden. Garantiza que el pedido tenga un destinatario comercial válido y vigente, habilitando evaluaciones de cumplimiento por proveedor. Evita órdenes huérfanas y estandariza reportes de compras. Cambios posteriores requieren procedimiento controlado para no romper la historia. Es fundamental para negociar precios, plazos y garantías.', 'Schema', [dbo], 'table', [Tbl_OrdenCompra], 'column', [id_proveedor]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha en que se genera la orden. No puede ser futura y fija el inicio del ciclo para plazos de entrega, vigencia de precios y cortes de gestión. Debe ser coherente con las recepciones y con la fecha de entrega pactada. Cambios posteriores se limitan a correcciones justificadas. Es base para análisis de tiempos de abastecimiento.', 'Schema', [dbo], 'table', [Tbl_OrdenCompra], 'column', [fecha_orden]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha prevista de entrega pactada con el proveedor. Debe ser igual o posterior a fecha_orden para conservar coherencia temporal. Sirve para seguimiento de cumplimiento, planificación de stock y priorización de trabajos dependientes. Si cambia, se recomienda registrar motivo y nueva promesa. Aporta información clave a indicadores de servicio del proveedor.', 'Schema', [dbo], 'table', [Tbl_OrdenCompra], 'column', [fecha_entrega]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Situación actual del documento (por ejemplo: abierta, en_proceso, parcialmente_recibida, recibida, cerrada, cancelada). Controla qué acciones están permitidas (p. ej., no modificar líneas cuando esté cerrada). Los cambios de estado deben quedar auditados con fecha y responsable. Mantener una codificación consistente mejora KPIs de abastecimiento y cumplimiento.', 'Schema', [dbo], 'table', [Tbl_OrdenCompra], 'column', [estado_orden]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Importe total acordado al crear la OC, suma de sus líneas (precio×cantidad). Debe ser = 0 y quedar congelado para trazabilidad, aun si luego hay cambios con notas o enmiendas. Es base para compromisos de gasto, conciliación con la factura del proveedor y reportes de compras. Cualquier corrección debe dejar rastro.', 'Schema', [dbo], 'table', [Tbl_OrdenCompra], 'column', [total_orden]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Notas complementarias (condiciones especiales, acuerdos de garantías, instrucciones logísticas). No impacta cálculos, pero agrega contexto útil para recepción y auditoría. Debe usarse con criterio y mantenerse alineado a políticas de compras. Ideal para documentar cambios pactados.', 'Schema', [dbo], 'table', [Tbl_OrdenCompra], 'column', [observaciones]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identifica al empleado que crea o autoriza la orden. Aporta trazabilidad de responsabilidades y soporta segregación de funciones. Permite métricas de productividad y control de permisos del proceso de compras. Su obligatoriedad evita documentos sin responsable. Cualquier reasignación debe quedar auditada con fecha y motivo.', 'Schema', [dbo], 'table', [Tbl_OrdenCompra], 'column', [id_empleado]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenCompra', 'CONSTRAINT', 'PK_OrdenCompra')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Garantiza identidad única del documento y su relación con el detalle, recepciones y conciliaciones. No se recicla ni se modifica, preservando historia íntegra del ciclo de compra. Es la base para auditorías y controles internos. Simplifica diagnósticos de inconsistencias y evita colisiones de identidad.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenCompra', 'CONSTRAINT', 'PK_OrdenCompra' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Garantiza identidad única del documento y su relación con el detalle, recepciones y conciliaciones. No se recicla ni se modifica, preservando historia íntegra del ciclo de compra. Es la base para auditorías y controles internos. Simplifica diagnósticos de inconsistencias y evita colisiones de identidad.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenCompra', 'CONSTRAINT', 'PK_OrdenCompra' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenCompra', 'CONSTRAINT', 'FK_crea_Empleado')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Vincula la OC con su responsable, habilitando medición de productividad y segregación de funciones. Evita documentos sin autor válido. Su preservación histórica es esencial para auditorías y controles de cumplimiento. Complementa la relación con proveedor para seguimiento integral del proceso.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenCompra', 'CONSTRAINT', 'FK_crea_Empleado' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Vincula la OC con su responsable, habilitando medición de productividad y segregación de funciones. Evita documentos sin autor válido. Su preservación histórica es esencial para auditorías y controles de cumplimiento. Complementa la relación con proveedor para seguimiento integral del proceso.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenCompra', 'CONSTRAINT', 'FK_crea_Empleado' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenCompra', 'CONSTRAINT', 'FK_recibe_Proveedor')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Impide órdenes sin destinatario comercial válido y materializa la relación Proveedor 1 — OrdenCompra 0..*. Permite evaluar cumplimiento (entregas, tiempos, calidad) por proveedor y negociar condiciones. Asegura consistencia documental para conciliaciones y auditorías. Es clave para rastro de responsabilidades.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenCompra', 'CONSTRAINT', 'FK_recibe_Proveedor' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Impide órdenes sin destinatario comercial válido y materializa la relación Proveedor 1 — OrdenCompra 0..*. Permite evaluar cumplimiento (entregas, tiempos, calidad) por proveedor y negociar condiciones. Asegura consistencia documental para conciliaciones y auditorías. Es clave para rastro de responsabilidades.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenCompra', 'CONSTRAINT', 'FK_recibe_Proveedor' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenCompra', 'CONSTRAINT', 'CHK_OC_Fechas_Coherentes')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Asegura que la OC no se emita a futuro y que la entrega prevista no sea anterior a la emisión. Mantiene coherencia temporal para cortes y SLAs de abastecimiento. Si tu motor físico limita GETDATE() en CHECK, el control se replicará en aplicación/trigger; aquí queda documentado en el lógico para QA. Reduce errores de captura y discusiones con proveedores.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenCompra', 'CONSTRAINT', 'CHK_OC_Fechas_Coherentes' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Asegura que la OC no se emita a futuro y que la entrega prevista no sea anterior a la emisión. Mantiene coherencia temporal para cortes y SLAs de abastecimiento. Si tu motor físico limita GETDATE() en CHECK, el control se replicará en aplicación/trigger; aquí queda documentado en el lógico para QA. Reduce errores de captura y discusiones con proveedores.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenCompra', 'CONSTRAINT', 'CHK_OC_Fechas_Coherentes' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenCompra', 'CONSTRAINT', 'CHK_OC_Total_NoNeg')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita importes negativos que distorsionan compromisos de gasto y conciliaciones con facturas del proveedor. Es un control simple pero esencial para confiabilidad de reportes y cierres. Aplica en altas y modificaciones. Complementa las validaciones de detalle (cantidad>0 y precio_unitario=0).', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenCompra', 'CONSTRAINT', 'CHK_OC_Total_NoNeg' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita importes negativos que distorsionan compromisos de gasto y conciliaciones con facturas del proveedor. Es un control simple pero esencial para confiabilidad de reportes y cierres. Aplica en altas y modificaciones. Complementa las validaciones de detalle (cantidad>0 y precio_unitario=0).', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenCompra', 'CONSTRAINT', 'CHK_OC_Total_NoNeg' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenCompra', 'CONSTRAINT', 'CHK_OC_Estado_Valido')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Controla que el campo estado_orden solo admita valores válidos del ciclo de vida de una orden de compra:
“abierta”, “en_proceso”, “parcialmente_recibida”, “recibida”, “cerrada” o “cancelada”.
Este control evita registros con etiquetas inconsistentes y mejora la trazabilidad del proceso de abastecimiento.
Permite reflejar de forma uniforme el avance de cada orden y garantiza coherencia en reportes, dashboards y auditorías.
En el modelo físico, se implementará como un CHECK de dominio cerrado en SQL Server, asegurando uniformidad entre sistemas y usuarios.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenCompra', 'CONSTRAINT', 'CHK_OC_Estado_Valido' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Controla que el campo estado_orden solo admita valores válidos del ciclo de vida de una orden de compra:
“abierta”, “en_proceso”, “parcialmente_recibida”, “recibida”, “cerrada” o “cancelada”.
Este control evita registros con etiquetas inconsistentes y mejora la trazabilidad del proceso de abastecimiento.
Permite reflejar de forma uniforme el avance de cada orden y garantiza coherencia en reportes, dashboards y auditorías.
En el modelo físico, se implementará como un CHECK de dominio cerrado en SQL Server, asegurando uniformidad entre sistemas y usuarios.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenCompra', 'CONSTRAINT', 'CHK_OC_Estado_Valido' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'Tbl_OrdenServicio', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Tabla que registra las órdenes generadas para ejecutar servicios técnicos o mantenimientos a vehículos. La clave primaria id_ordenServicio identifica de forma única cada proceso operativo. Contiene claves foráneas hacia Cliente, Empleado y Vehiculo, lo que permite vincular responsables, titulares y unidades atendidas. Los campos fecha_orden, estado_orden y observaciones registran el progreso de la orden y permiten monitorear su evolución. El estado sigue un dominio predefinido (cotizada, aprobada, en_proceso, cerrada, cancelada) que guía la ejecución y la facturación posterior. Esta tabla garantiza trazabilidad de todo el flujo operativo y constituye la base del control de servicios realizados.', 'SCHEMA', 'dbo', 'table', 'Tbl_OrdenServicio' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Tabla que registra las órdenes generadas para ejecutar servicios técnicos o mantenimientos a vehículos. La clave primaria id_ordenServicio identifica de forma única cada proceso operativo. Contiene claves foráneas hacia Cliente, Empleado y Vehiculo, lo que permite vincular responsables, titulares y unidades atendidas. Los campos fecha_orden, estado_orden y observaciones registran el progreso de la orden y permiten monitorear su evolución. El estado sigue un dominio predefinido (cotizada, aprobada, en_proceso, cerrada, cancelada) que guía la ejecución y la facturación posterior. Esta tabla garantiza trazabilidad de todo el flujo operativo y constituye la base del control de servicios realizados.', 'SCHEMA', 'dbo', 'table', 'Tbl_OrdenServicio' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identificador técnico único de la orden. Se declara como clave primaria estable y no reutilizable para preservar la historia del trabajo de taller. Sirve de ancla para el detalle operativo (si existe), para la factura que la tome como origen y para reportes de eficiencia. No se modifica tras la creación y permite auditorías completas del ciclo. Es imprescindible para relacionar evidencias (fotos, diagnósticos, aprobaciones) con un solo expediente.', 'Schema', [dbo], 'table', [Tbl_OrdenServicio], 'column', [id_ordenServicio]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Referencia al Vehiculo que recibe el servicio. Asegura la construcción de un historial técnico por unidad y la conciliación de costos de preparación/mantenimiento. Debe apuntar a un vehículo vigente; la orden no debe cerrarse si la unidad cambia de situación en forma incompatible (según tus políticas). Este vínculo es base para análisis por unidad, campañas técnicas y métricas de calidad.', 'Schema', [dbo], 'table', [Tbl_OrdenServicio], 'column', [id_vehiculo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha de apertura de la orden. No puede ser futura y es la referencia temporal para SLA, vencimientos de cotización y cortes operativos. Su corrección solo procede con justificación y rastro de responsable. Debe ser coherente con la cronología del vehículo y con la eventual factura de origen. Habilita reportes de antigüedad y capacidad del taller.', 'Schema', [dbo], 'table', [Tbl_OrdenServicio], 'column', [fecha_orden]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Estado del ciclo de la orden (ej.: abierta, cotizada, aprobada, en_proceso, cerrada, cancelada). Controla qué acciones son válidas en cada etapa (por ejemplo, no facturar líneas nuevas si está cerrada). Cambios de estado requieren guardar fecha y responsable para auditoría. Mantener un dominio cerrado evita etiquetas libres y asegura consistencia de tableros y KPIs.', 'Schema', [dbo], 'table', [Tbl_OrdenServicio], 'column', [estado_orden]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Campo opcional para notas de diagnóstico, autorizaciones o condiciones particulares del trabajo. No afecta cálculos, pero aporta contexto operativo y comercial. Debe usarse con criterios objetivos (no sustituye evidencias formales). Su mantenimiento adecuado facilita auditorías y atención posventa. Puede contener referencias a anexos o documentos externos.', 'Schema', [dbo], 'table', [Tbl_OrdenServicio], 'column', [observaciones]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Llave foránea al Cliente titular de la orden. Garantiza que el trabajo esté asociado a una persona o entidad válida para autorizaciones, comunicaciones y facturación posterior. Su obligatoriedad evita órdenes huérfanas y habilita reportes de recurrencia por cliente. Cambios posteriores (p. ej., traspaso) deben ser excepcionales y quedar auditados. Es clave para el cumplimiento legal y la trazabilidad comercial.', 'Schema', [dbo], 'table', [Tbl_OrdenServicio], 'column', [id_cliente]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identifica al empleado (asesor/técnico responsable) que abre o gestiona la orden. Permite mediciones de productividad, control de cargas de trabajo y segregación de funciones. Es obligatorio para auditar responsabilidades y autorías de cambios. Reasignaciones deben documentarse con fecha y motivo, preservando trazabilidad.', 'Schema', [dbo], 'table', [Tbl_OrdenServicio], 'column', [id_empleado]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicio', 'CONSTRAINT', 'PK_OrdenServicio')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Define la identidad única de cada orden y preserva la trazabilidad completa del expediente. Evita colisiones y asegura la correcta relación con detalles, evidencias y facturas. Su valor no se recicla ni se altera tras la creación, manteniendo historia íntegra. Es pilar de integridad referencial y facilita auditorías y conciliaciones operativas.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicio', 'CONSTRAINT', 'PK_OrdenServicio' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Define la identidad única de cada orden y preserva la trazabilidad completa del expediente. Evita colisiones y asegura la correcta relación con detalles, evidencias y facturas. Su valor no se recicla ni se altera tras la creación, manteniendo historia íntegra. Es pilar de integridad referencial y facilita auditorías y conciliaciones operativas.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicio', 'CONSTRAINT', 'PK_OrdenServicio' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicio', 'CONSTRAINT', 'FK_solicita_Cliente')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Vincula la orden con su titular, evitando órdenes sin dueño válido. Permite reportes por cliente, autorizaciones y posterior facturación. Refuerza el cumplimiento legal y la trazabilidad comercial. Las modificaciones de titular deben ser excepcionales y auditadas. Es un enlace 1:N (Cliente 1 — OrdenServicio 0..*).', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicio', 'CONSTRAINT', 'FK_solicita_Cliente' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Vincula la orden con su titular, evitando órdenes sin dueño válido. Permite reportes por cliente, autorizaciones y posterior facturación. Refuerza el cumplimiento legal y la trazabilidad comercial. Las modificaciones de titular deben ser excepcionales y auditadas. Es un enlace 1:N (Cliente 1 — OrdenServicio 0..*).', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicio', 'CONSTRAINT', 'FK_solicita_Cliente' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicio', 'CONSTRAINT', 'FK_gestiona_Empleado')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Garantiza trazabilidad del responsable que abre/gestiona la orden. Habilita análisis de productividad y control de permisos. Evita órdenes sin responsable asignado. Debe preservarse históricamente para auditorías. Es una relación 1:N (Empleado 1 — OrdenServicio 0..*).', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicio', 'CONSTRAINT', 'FK_gestiona_Empleado' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Garantiza trazabilidad del responsable que abre/gestiona la orden. Habilita análisis de productividad y control de permisos. Evita órdenes sin responsable asignado. Debe preservarse históricamente para auditorías. Es una relación 1:N (Empleado 1 — OrdenServicio 0..*).', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicio', 'CONSTRAINT', 'FK_gestiona_Empleado' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicio', 'CONSTRAINT', 'FK_recibe_Vehiculo')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Asocia el trabajo al vehículo intervenido y permite construir historial técnico por unidad. Impide órdenes sobre unidades inexistentes y facilita controles de consistencia (por ejemplo, evitar cierre si el vehículo está en estado incompatible, según política). Materializa la relación 1:N (Vehiculo 1 — OrdenServicio 0..*). Soporta métricas de mantenimiento y calidad.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicio', 'CONSTRAINT', 'FK_recibe_Vehiculo' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Asocia el trabajo al vehículo intervenido y permite construir historial técnico por unidad. Impide órdenes sobre unidades inexistentes y facilita controles de consistencia (por ejemplo, evitar cierre si el vehículo está en estado incompatible, según política). Materializa la relación 1:N (Vehiculo 1 — OrdenServicio 0..*). Soporta métricas de mantenimiento y calidad.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicio', 'CONSTRAINT', 'FK_recibe_Vehiculo' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicio', 'CONSTRAINT', 'CHK_OS_Fecha_NoFutura')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita órdenes con fecha posterior al día actual, manteniendo coherencia temporal del expediente. Es clave para cálculos de antigüedad, SLA y cortes de gestión. Si el motor físico no admite GETDATE() en CHECK, la política se aplica por aplicación/trigger; documentarlo aquí asegura su verificación en QA. Reduce errores de digitación.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicio', 'CONSTRAINT', 'CHK_OS_Fecha_NoFutura' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita órdenes con fecha posterior al día actual, manteniendo coherencia temporal del expediente. Es clave para cálculos de antigüedad, SLA y cortes de gestión. Si el motor físico no admite GETDATE() en CHECK, la política se aplica por aplicación/trigger; documentarlo aquí asegura su verificación en QA. Reduce errores de digitación.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicio', 'CONSTRAINT', 'CHK_OS_Fecha_NoFutura' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'Tbl_OrdenServicioDetalle', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Representa las líneas que componen cada orden de servicio, vinculadas al encabezado a través de id_ordenServicio. La clave primaria id_ordendetalle identifica cada ítem planificado o ejecutado dentro de una orden. Los campos id_servicio e id_repuesto son claves foráneas alternativas que determinan el tipo de concepto incluido, garantizando integridad mediante una regla de exclusividad (solo uno por línea). cantidad, precio_unitario y subtotal manejan los valores asociados a cada ítem, asegurando coherencia con el costo final. Esta estructura soporta el análisis detallado del trabajo realizado y la conciliación posterior con los documentos de facturación.', 'SCHEMA', 'dbo', 'table', 'Tbl_OrdenServicioDetalle' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Representa las líneas que componen cada orden de servicio, vinculadas al encabezado a través de id_ordenServicio. La clave primaria id_ordendetalle identifica cada ítem planificado o ejecutado dentro de una orden. Los campos id_servicio e id_repuesto son claves foráneas alternativas que determinan el tipo de concepto incluido, garantizando integridad mediante una regla de exclusividad (solo uno por línea). cantidad, precio_unitario y subtotal manejan los valores asociados a cada ítem, asegurando coherencia con el costo final. Esta estructura soporta el análisis detallado del trabajo realizado y la conciliación posterior con los documentos de facturación.', 'SCHEMA', 'dbo', 'table', 'Tbl_OrdenServicioDetalle' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identificador único de cada línea asociada al encabezado de la orden de servicio. Permite distinguir con precisión el ítem planificado (servicio o repuesto), su cantidad y su precio unitario congelado. Facilita aprobaciones, conciliaciones con la factura y análisis de desviaciones entre lo presupuestado y lo ejecutado. Aporta granularidad para auditorías y cálculos de rentabilidad por concepto. Su valor es inmutable tras la creación de la línea.', 'Schema', [dbo], 'table', [Tbl_OrdenServicioDetalle], 'column', [id_ordendetalle]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Cantidad planificada para el ítem seleccionado; debe ser > 0 para impedir líneas nulas o negativas. En servicios suele representar horas/unidades de labor; en repuestos, unidades físicas. Impacta el costo estimado de la orden y las comparaciones contra lo ejecutado y facturado. Cambios tras la aprobación exigen autorización documentada. Es un dato crítico para planificación y control.', 'Schema', [dbo], 'table', [Tbl_OrdenServicioDetalle], 'column', [cantidad]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Llave foránea al encabezado OrdenServicio que agrupa todas las líneas. Asegura que ninguna línea exista fuera del contexto de una orden válida y habilita la relación OrdenServicio 1 — OrdenServicioDetalle 1..*. Este vínculo es indispensable para totalizaciones, aprobación por bloque y posterior conciliación con la facturación. Evita “líneas sueltas” sin expediente operativo.', 'Schema', [dbo], 'table', [Tbl_OrdenServicioDetalle], 'column', [id_ordenServicio]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Precio negociado por unidad a nivel de línea. Debe ser = 0; si es 0, se trata de cortesía/bonificación aprobada. Fijarlo aquí guarda la condición económica aprobada de la OS y facilita conciliaciones posteriores con la factura. Afecta directamente los totales de la orden y su rentabilidad estimada. Modificaciones posteriores requieren rastro de responsable y motivo.', 'Schema', [dbo], 'table', [Tbl_OrdenServicioDetalle], 'column', [precio_unitario]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Referencia al catálogo Servicio cuando la línea es de mano de obra. Debe permanecer NULL si la línea es de repuesto, cumpliendo la exclusividad por fila. Congelar aquí el precio de referencia evita recálculos si cambian tarifas después de la aprobación. Permite análisis de tiempos/costos por concepto y trazabilidad hacia la ejecución real. No debe apuntar a servicios inactivos.', 'Schema', [dbo], 'table', [Tbl_OrdenServicioDetalle], 'column', [id_servicio]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Referencia al catálogo Repuesto cuando la línea corresponde a una pieza. Se mantiene NULL si la línea es de servicio, preservando la exclusividad. El uso correcto de esta FK habilita control de disponibilidad, costos y conciliación con compras/stock. Evita líneas genéricas sin artículo específico y mejora KPIs de rotación y margen. No debe apuntar a repuestos inactivos.', 'Schema', [dbo], 'table', [Tbl_OrdenServicioDetalle], 'column', [id_repuesto]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicioDetalle', 'CONSTRAINT', 'PK_OrdenServicioDetalle')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Asegura identidad única por línea, evitando colisiones en aprobaciones, ejecuciones y conciliaciones con la factura. No se recicla para preservar historia y trazabilidad del expediente. Es el punto de referencia para diagnósticos y auditorías del proceso de taller. Su definición simplifica integraciones y consultas de detalle.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicioDetalle', 'CONSTRAINT', 'PK_OrdenServicioDetalle' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Asegura identidad única por línea, evitando colisiones en aprobaciones, ejecuciones y conciliaciones con la factura. No se recicla para preservar historia y trazabilidad del expediente. Es el punto de referencia para diagnósticos y auditorías del proceso de taller. Su definición simplifica integraciones y consultas de detalle.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicioDetalle', 'CONSTRAINT', 'PK_OrdenServicioDetalle' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicioDetalle', 'CONSTRAINT', 'FK_contiene_OrdenServicio')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Materializa la dependencia de cada línea respecto a su orden, evitando filas huérfanas. Permite totalizar y gestionar aprobaciones por documento, y sirve de base para conciliaciones con la facturación. La relación establece la multiplicidad OrdenServicio 1 — OrdenServicioDetalle 1..* y refuerza la integridad operativa del expediente.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicioDetalle', 'CONSTRAINT', 'FK_contiene_OrdenServicio' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Materializa la dependencia de cada línea respecto a su orden, evitando filas huérfanas. Permite totalizar y gestionar aprobaciones por documento, y sirve de base para conciliaciones con la facturación. La relación establece la multiplicidad OrdenServicio 1 — OrdenServicioDetalle 1..* y refuerza la integridad operativa del expediente.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicioDetalle', 'CONSTRAINT', 'FK_contiene_OrdenServicio' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicioDetalle', 'CONSTRAINT', 'FK_incluye_OrdenServicioDetalle')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Vincula la línea con un servicio existente únicamente cuando corresponde a mano de obra. Debe ser NULL si la línea es de repuesto para mantener la exclusividad. Habilita análisis por concepto y coherencia entre planificación, ejecución y cobro. Impide referencias a servicios inexistentes o inactivos.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicioDetalle', 'CONSTRAINT', 'FK_incluye_OrdenServicioDetalle' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Vincula la línea con un servicio existente únicamente cuando corresponde a mano de obra. Debe ser NULL si la línea es de repuesto para mantener la exclusividad. Habilita análisis por concepto y coherencia entre planificación, ejecución y cobro. Impide referencias a servicios inexistentes o inactivos.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicioDetalle', 'CONSTRAINT', 'FK_incluye_OrdenServicioDetalle' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicioDetalle', 'CONSTRAINT', 'CHK_OSDet_Item_Exclusivo')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Implementa la regla de negocio central del detalle: exactamente uno de los dos campos (id_servicio, id_repuesto) debe estar informado por fila. Evita ambigüedad semántica, errores de cálculo y dobles imputaciones. Se ejecuta en altas y cambios, y complementa las FKs opcionales. Su documentación en lógico obliga a replicarlo en el físico mediante CHECK o lógica de aplicación/trigger.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicioDetalle', 'CONSTRAINT', 'CHK_OSDet_Item_Exclusivo' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Implementa la regla de negocio central del detalle: exactamente uno de los dos campos (id_servicio, id_repuesto) debe estar informado por fila. Evita ambigüedad semántica, errores de cálculo y dobles imputaciones. Se ejecuta en altas y cambios, y complementa las FKs opcionales. Su documentación en lógico obliga a replicarlo en el físico mediante CHECK o lógica de aplicación/trigger.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicioDetalle', 'CONSTRAINT', 'CHK_OSDet_Item_Exclusivo' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicioDetalle', 'CONSTRAINT', 'CHK_OSDet_Cantidad_Pos')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Impide líneas con cantidad nula o negativa, que distorsionarían los costos estimados y la planificación de consumos. Se aplica en inserciones y actualizaciones. Este control mejora la calidad del dato y evita ajustes innecesarios en conciliaciones. Es esencial para métricas de productividad y cobertura.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicioDetalle', 'CONSTRAINT', 'CHK_OSDet_Cantidad_Pos' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Impide líneas con cantidad nula o negativa, que distorsionarían los costos estimados y la planificación de consumos. Se aplica en inserciones y actualizaciones. Este control mejora la calidad del dato y evita ajustes innecesarios en conciliaciones. Es esencial para métricas de productividad y cobertura.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicioDetalle', 'CONSTRAINT', 'CHK_OSDet_Cantidad_Pos' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicioDetalle', 'CONSTRAINT', 'CHK_OSDet_Precio_NoNeg')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita valores negativos que producirían costos inconsistentes. Permite 0 solo con justificación (bonificación/garantía) y aprobación documentada. Su presencia eleva la confiabilidad de reportes y el control de políticas comerciales. Debe replicarse en el físico.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicioDetalle', 'CONSTRAINT', 'CHK_OSDet_Precio_NoNeg' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita valores negativos que producirían costos inconsistentes. Permite 0 solo con justificación (bonificación/garantía) y aprobación documentada. Su presencia eleva la confiabilidad de reportes y el control de políticas comerciales. Debe replicarse en el físico.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_OrdenServicioDetalle', 'CONSTRAINT', 'CHK_OSDet_Precio_NoNeg' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'Tbl_Proveedor', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Almacena la información de los proveedores que abastecen repuestos, insumos o materiales a la organización. La clave primaria id_proveedor asegura una identificación única, utilizada en la trazabilidad de órdenes de compra y gestión de inventario. Los datos de contacto y ubicación se normalizan mediante VARCHAR con restricciones de longitud adecuadas para SQL Server, asegurando compatibilidad con procesos de auditoría y comunicación. El campo tipo_proveedor define si el proveedor es local o internacional, afectando las condiciones logísticas y fiscales. estado_proveedor regula la vigencia del registro y permite desactivar relaciones sin eliminar datos históricos. Este diseño garantiza consistencia en el ciclo de abastecimiento y evaluación de desempeño de proveedores.', 'SCHEMA', 'dbo', 'table', 'Tbl_Proveedor' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Almacena la información de los proveedores que abastecen repuestos, insumos o materiales a la organización. La clave primaria id_proveedor asegura una identificación única, utilizada en la trazabilidad de órdenes de compra y gestión de inventario. Los datos de contacto y ubicación se normalizan mediante VARCHAR con restricciones de longitud adecuadas para SQL Server, asegurando compatibilidad con procesos de auditoría y comunicación. El campo tipo_proveedor define si el proveedor es local o internacional, afectando las condiciones logísticas y fiscales. estado_proveedor regula la vigencia del registro y permite desactivar relaciones sin eliminar datos históricos. Este diseño garantiza consistencia en el ciclo de abastecimiento y evaluación de desempeño de proveedores.', 'SCHEMA', 'dbo', 'table', 'Tbl_Proveedor' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identificador técnico único que distingue de forma inequívoca a cada proveedor registrado en el sistema. Se utiliza como clave primaria y como punto de referencia para relaciones con órdenes de compra y control de pagos. No debe repetirse ni alterarse tras su asignación para preservar trazabilidad histórica. Garantiza la integridad referencial y la consistencia de las operaciones. Es un campo obligatorio y su generación debe ser controlada o automática para evitar errores humanos.', 'Schema', [dbo], 'table', [Tbl_Proveedor], 'column', [id_proveedor]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Contiene la razón social o nombre comercial del proveedor, utilizado en reportes, contratos y documentos fiscales. Es obligatorio, y debe coincidir con la denominación legal registrada en la documentación del proveedor. Su correcta escritura asegura la identificación exacta del proveedor y evita duplicados. Los registros deben mantenerse uniformes para facilitar búsquedas, auditorías y evaluaciones.', 'Schema', [dbo], 'table', [Tbl_Proveedor], 'column', [nombre]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Código postal asociado a la dirección del proveedor, utilizado para fines de localización, correspondencia y reportes estadísticos. Debe cumplir formato numérico o alfanumérico dependiendo del país. Este dato complementa la información geográfica del proveedor y facilita integraciones con sistemas externos de logística.', 'Schema', [dbo], 'table', [Tbl_Proveedor], 'column', [codigo_postal]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Nombre de la persona de contacto responsable de la comunicación directa con la empresa. Es esencial para agilizar cotizaciones, reclamos o consultas. Este dato permite identificar a la persona encargada de responder en nombre del proveedor y facilita la coordinación operativa. Debe mantenerse actualizado para garantizar la efectividad de los procesos de compra.', 'Schema', [dbo], 'table', [Tbl_Proveedor], 'column', [contacto_principal]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Clasifica al proveedor según su origen o alcance, distinguiendo entre local e internacional. Esta información determina el tratamiento logístico, fiscal y aduanero que se aplicará en cada compra. Su valor debe provenir de un conjunto controlado para mantener coherencia entre registros. Es un campo clave para reportes de gestión y cumplimiento normativo.', 'Schema', [dbo], 'table', [Tbl_Proveedor], 'column', [tipo_proveedor]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha en que el proveedor fue registrado o actualizado en el sistema. No puede ser futura y se usa para cálculos de antigüedad, vigencia contractual y control de auditorías. Su mantenimiento correcto garantiza reportes históricos confiables. Este campo refuerza la trazabilidad del maestro de proveedores.', 'Schema', [dbo], 'table', [Tbl_Proveedor], 'column', [fecha_registro]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Número telefónico principal para contacto operativo o comercial. Se define como texto para permitir formatos internacionales, prefijos y extensiones. Es esencial para la comunicación efectiva en procesos de compras y seguimiento logístico. Debe tener longitud válida (entre 7 y 20 caracteres) y actualizarse cuando cambie la información del proveedor. No se permiten valores vacíos o inconsistentes.', 'Schema', [dbo], 'table', [Tbl_Proveedor], 'column', [telefono]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Dirección de correo principal del proveedor para correspondencia formal y envío de órdenes o facturas electrónicas. Debe tener formato válido (%@%.%) y ser único en la base de datos. Permite comunicación eficiente y trazabilidad documental. Es un campo obligatorio, ya que la mayoría de los procesos de compra utilizan comunicación digital. Cualquier cambio requiere verificación previa para mantener la integridad del registro.', 'Schema', [dbo], 'table', [Tbl_Proveedor], 'column', [email]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Domicilio físico o fiscal del proveedor, necesario para procesos logísticos, auditorías y validación de documentación legal. Debe ser completo, actual y verificable. Este dato permite segmentar la ubicación geográfica de los proveedores y facilita reportes por región. La ausencia o inexactitud del dato puede afectar la entrega o validación de pedidos.', 'Schema', [dbo], 'table', [Tbl_Proveedor], 'column', [direccion]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Nombre de la ciudad donde se ubica el proveedor o su sede principal. Es fundamental para la planificación de entregas y análisis de cobertura geográfica. Su consistencia es importante para cálculos de tiempos de entrega y reportes logísticos. La información debe mantenerse estandarizada y sin abreviaturas no oficiales.', 'Schema', [dbo], 'table', [Tbl_Proveedor], 'column', [ciudad]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Define la situación actual del proveedor dentro del sistema. Solo puede tomar valores como “activo”, “inactivo” o “bloqueado”, reflejando su disponibilidad para recibir órdenes. Este campo permite controlar las operaciones y evitar transacciones con proveedores suspendidos. Cambios en el estado deben quedar documentados para conservar trazabilidad.', 'Schema', [dbo], 'table', [Tbl_Proveedor], 'column', [estado_proveedor]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'PK_Proveedor')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Define la clave principal del proveedor, asegurando unicidad y referencia estable en todas las operaciones de compra. Es la base para las relaciones con órdenes y contratos, evitando duplicados o pérdidas de trazabilidad. No debe alterarse tras la creación del registro. Garantiza integridad lógica y coherencia entre dependencias.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'PK_Proveedor' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Define la clave principal del proveedor, asegurando unicidad y referencia estable en todas las operaciones de compra. Es la base para las relaciones con órdenes y contratos, evitando duplicados o pérdidas de trazabilidad. No debe alterarse tras la creación del registro. Garantiza integridad lógica y coherencia entre dependencias.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'PK_Proveedor' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'UQ_Proveedor_Email')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita duplicidad en direcciones de correo entre proveedores, reduciendo errores en notificaciones automáticas y pedidos electrónicos. La restricción de unicidad refuerza la confiabilidad del maestro y asegura que cada registro se corresponda con una fuente legítima. Cualquier cambio debe validarse antes de guardar.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'UQ_Proveedor_Email' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita duplicidad en direcciones de correo entre proveedores, reduciendo errores en notificaciones automáticas y pedidos electrónicos. La restricción de unicidad refuerza la confiabilidad del maestro y asegura que cada registro se corresponda con una fuente legítima. Cualquier cambio debe validarse antes de guardar.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'UQ_Proveedor_Email' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'CHK_Proveedor_Tipo')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Limita el dominio de tipo_proveedor a los valores válidos definidos por la política comercial. Evita capturas arbitrarias o incoherentes y mantiene uniformidad en reportes. Este control también asegura el cumplimiento de normativas fiscales aplicables según la procedencia del proveedor.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'CHK_Proveedor_Tipo' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Limita el dominio de tipo_proveedor a los valores válidos definidos por la política comercial. Evita capturas arbitrarias o incoherentes y mantiene uniformidad en reportes. Este control también asegura el cumplimiento de normativas fiscales aplicables según la procedencia del proveedor.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'CHK_Proveedor_Tipo' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'CHK_Proveedor_Estado')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Controla el estado operativo del proveedor, permitiendo únicamente valores reconocidos por las políticas internas. Evita errores en órdenes de compra y mantiene consistencia en los procesos de auditoría. Su registro histórico documenta la disponibilidad del proveedor para operaciones.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'CHK_Proveedor_Estado' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Controla el estado operativo del proveedor, permitiendo únicamente valores reconocidos por las políticas internas. Evita errores en órdenes de compra y mantiene consistencia en los procesos de auditoría. Su registro histórico documenta la disponibilidad del proveedor para operaciones.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'CHK_Proveedor_Estado' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'CHK_Proveedor_EmailFormato')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Verifica que el campo email contenga el patrón mínimo esperado de una dirección de correo. Este control previene errores de digitación y refuerza la calidad del dato. No reemplaza una validación completa, pero reduce errores recurrentes y mejora la consistencia de los registros.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'CHK_Proveedor_EmailFormato' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Verifica que el campo email contenga el patrón mínimo esperado de una dirección de correo. Este control previene errores de digitación y refuerza la calidad del dato. No reemplaza una validación completa, pero reduce errores recurrentes y mejora la consistencia de los registros.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'CHK_Proveedor_EmailFormato' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'CHK_Proveedor_TelefonoLongitud')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Garantiza que los números de contacto tengan longitud realista, previniendo registros incompletos o erróneos. Mejora la calidad del dato y asegura disponibilidad de medios de contacto válidos para comunicación directa.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'CHK_Proveedor_TelefonoLongitud' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Garantiza que los números de contacto tengan longitud realista, previniendo registros incompletos o erróneos. Mejora la calidad del dato y asegura disponibilidad de medios de contacto válidos para comunicación directa.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'CHK_Proveedor_TelefonoLongitud' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'CHK_Proveedor_FechaNoFutura')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita que se ingresen fechas futuras en el registro, manteniendo coherencia temporal. Este control permite trazabilidad confiable y exactitud en reportes históricos. Facilita auditorías y previene errores de digitación o carga masiva.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'CHK_Proveedor_FechaNoFutura' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita que se ingresen fechas futuras en el registro, manteniendo coherencia temporal. Este control permite trazabilidad confiable y exactitud en reportes históricos. Facilita auditorías y previene errores de digitación o carga masiva.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'CHK_Proveedor_FechaNoFutura' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'CHK_Proveedor_CodigoPostalFormato')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Controla que el código postal tenga longitud coherente con los estándares comunes, evitando datos truncados o incorrectos. Favorece integraciones con sistemas logísticos externos y asegura consistencia geográfica.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'CHK_Proveedor_CodigoPostalFormato' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Controla que el código postal tenga longitud coherente con los estándares comunes, evitando datos truncados o incorrectos. Favorece integraciones con sistemas logísticos externos y asegura consistencia geográfica.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Proveedor', 'CONSTRAINT', 'CHK_Proveedor_CodigoPostalFormato' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'Tbl_Repuesto', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Tabla que almacena el inventario detallado de repuestos disponibles para la venta o mantenimiento de vehículos. La clave primaria id_repuesto asegura identificación única e inmutable. Se incluyen campos descriptivos (nombre, descripcion, categoria) y de control operativo (precio_unitario, stock_actual, stock_minimo), con checks de valores positivos que garantizan coherencia contable y física. id_proveedor funciona como clave foránea hacia la tabla de proveedores, preservando la trazabilidad del origen de cada producto. fecha_ingreso y ubicacion_almacen permiten controlar la rotación y logística interna, mientras que estado_repuesto define la disponibilidad del ítem. Esta tabla constituye un punto central para los procesos de compra, venta y control de stock.', 'SCHEMA', 'dbo', 'table', 'Tbl_Repuesto' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Tabla que almacena el inventario detallado de repuestos disponibles para la venta o mantenimiento de vehículos. La clave primaria id_repuesto asegura identificación única e inmutable. Se incluyen campos descriptivos (nombre, descripcion, categoria) y de control operativo (precio_unitario, stock_actual, stock_minimo), con checks de valores positivos que garantizan coherencia contable y física. id_proveedor funciona como clave foránea hacia la tabla de proveedores, preservando la trazabilidad del origen de cada producto. fecha_ingreso y ubicacion_almacen permiten controlar la rotación y logística interna, mientras que estado_repuesto define la disponibilidad del ítem. Esta tabla constituye un punto central para los procesos de compra, venta y control de stock.', 'SCHEMA', 'dbo', 'table', 'Tbl_Repuesto' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identificador único del artículo de inventario, independiente de códigos comerciales o descripciones. Permite enlazar compras, consumo planificado/real y ventas sin ambigüedad, aun si cambian nombres o codificaciones. Es esencial para control de stock, rotación y márgenes por ítem. Garantiza consistencia en conciliaciones entre abastecimiento, taller y facturación. Debe conservarse inmutable para mantener la historia de costos y movimientos.', 'Schema', [dbo], 'table', [Tbl_Repuesto], 'column', [id_repuesto]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Código comercial legible usado en catálogos, etiquetas y documentos externos; puede corresponder al SKU interno o al código del proveedor normalizado. Su unicidad evita duplicidades de publicación y reduce errores en picking, compras y ventas. Debe definirse siguiendo una convención estable (por ejemplo, prefijos por familia). Cambios requieren procedimiento controlado para no romper referencias en sistemas satélite. Es clave para búsquedas rápidas en mostrador y en almacén.', 'Schema', [dbo], 'table', [Tbl_Repuesto], 'column', [codigo_repuesto]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Denominación comercial del repuesto, utilizada en listas de precios, consultas y documentos. Debe ser clara, sin abreviaturas ambiguas, y mantener capitalización uniforme para mejorar búsquedas. Conviene incluir rasgos diferenciales (capacidad, tamaño o serie) para distinguir variantes cercanas. Es base para catálogos y publicaciones a clientes. No se admiten cadenas vacías ni nombres genéricos que induzcan a error.', 'Schema', [dbo], 'table', [Tbl_Repuesto], 'column', [nombre]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Detalle ampliado del artículo con especificaciones, compatibilidades o notas de uso. Aunque opcional, mejora la precisión de ventas y evita devoluciones por selección incorrecta. Debe mantenerse coherente con fichas técnicas del proveedor. Se recomienda evitar lenguaje promocional y enfocarse en características objetivas. Útil en integraciones con comercio electrónico o soporte técnico.', 'Schema', [dbo], 'table', [Tbl_Repuesto], 'column', [descripcion]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Precio vigente por unidad a la fecha de alta o última actualización. Debe ser = 0 y expresarse en la moneda operativa del sistema. Cuando cambie el precio, se debe conservar rastro de vigencia (histórico) en el físico o en un módulo de listas/tarifas; a nivel lógico se congela en documentos de venta/compra para trazabilidad. Es insumo para márgenes, ofertas y val', 'Schema', [dbo], 'table', [Tbl_Repuesto], 'column', [precio_unitario]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Cantidad disponible en inventario físico/contable. No puede ser negativa; representa existencias listas para venta o consumo. Debe actualizarse por entradas, salidas y ajustes autorizados, manteniendo conciliación con compras y ventas. Su valor es crítico para promesas de entrega y planificación de compras. Participa en alertas de ruptura cuando cae por debajo del mínimo.', 'Schema', [dbo], 'table', [Tbl_Repuesto], 'column', [stock_actual]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Estatus operativo que define su disponibilidad (ej.: activo, inactivo, descontinuado). Controla si puede figurar en compras o ventas y si admite movimientos. Cambios de estado deben quedar justificados (fin de vida, sustitución, error de alta). Previene selección de ítems obsoletos en documentos. Es fundamental para higiene del catálogo y cumplimiento de políticas de producto.', 'Schema', [dbo], 'table', [Tbl_Repuesto], 'column', [estado_repuesto]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Umbral inferior recomendado para reabastecimiento. No debe ser negativo y, por política, suele ser = 0. No se impone que stock_actual = stock_minimo como constraint duro (para permitir detectar quiebres); más bien se usa para alertar a compras. Sustenta reportes de puntos de pedido, cobertura y rotación. Ajustes requieren revisión de demanda y tiempo de reposición.', 'Schema', [dbo], 'table', [Tbl_Repuesto], 'column', [stock_minimo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Llave foránea conceptual al proveedor principal del repuesto. Garantiza que cada artículo tenga una fuente de suministro responsable para compras, garantías y consultas técnicas. Su mantenimiento permite evaluar desempeño por proveedor y negociar condiciones. No debe apuntar a registros inactivos o bloqueados. En el físico se implementa como FK a Proveedor(id_proveedor).', 'Schema', [dbo], 'table', [Tbl_Repuesto], 'column', [id_proveedor]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha de alta del repuesto en el sistema (o de su última configuración inicial). No debe ser futura; sirve para cortes históricos, análisis de antigüedad del catálogo y ventanas de promoción. Cambios posteriores solo por corrección con evidencia. Se utiliza además para auditorías de creación y actualización del maestro.', 'Schema', [dbo], 'table', [Tbl_Repuesto], 'column', [fecha_ingreso]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Referencia de localización interna (pasillo, estante, bin) que facilita picking y conteos cíclicos. Debe seguir una nomenclatura establecida para evitar ambigüedades. Su precisión reduce tiempos operativos y errores de despacho. Cambios de layout deben acompañarse de actualización masiva controlada. Evita búsquedas manuales y pérdidas.', 'Schema', [dbo], 'table', [Tbl_Repuesto], 'column', [ubicacion_almacen]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Clasificación del repuesto por familia o línea de producto (ej.: frenos, filtros, suspensión). Debe provenir de un conjunto controlado para asegurar consistencia analítica y reglas de precios/bonificaciones por familia. La categoría correcta facilita reabastecimiento, organización de almacén y reportes de rotación. Impacta agrupaciones y dashboards de abastecimiento.', 'Schema', [dbo], 'table', [Tbl_Repuesto], 'column', [categoria]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'FK_Repuesto_Proveedor')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Cada Repuesto se asocia a un único Proveedor responsable de su suministro, mientras que un Proveedor puede abastecer múltiples Repuestos. La multiplicidad resultante es Proveedor 1 — Repuesto 0..*. Esta relación asegura trazabilidad entre los ítems de inventario y su fuente comercial. El vínculo evita registros huérfanos sin proveedor asignado y facilita auditorías, evaluación de desempeño y negociación de precios. A nivel lógico, el FK id_proveedor se declara en la entidad Repuesto, representando dependencia funcional y operativa hacia el proveedor activo correspondiente.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'FK_Repuesto_Proveedor' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Cada Repuesto se asocia a un único Proveedor responsable de su suministro, mientras que un Proveedor puede abastecer múltiples Repuestos. La multiplicidad resultante es Proveedor 1 — Repuesto 0..*. Esta relación asegura trazabilidad entre los ítems de inventario y su fuente comercial. El vínculo evita registros huérfanos sin proveedor asignado y facilita auditorías, evaluación de desempeño y negociación de precios. A nivel lógico, el FK id_proveedor se declara en la entidad Repuesto, representando dependencia funcional y operativa hacia el proveedor activo correspondiente.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'FK_Repuesto_Proveedor' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'PK_Repuesto')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Identificador único y estable del catálogo de repuestos. Sirve de ancla para relaciones con compras, ventas y servicios, evitando colisiones de identidad. No debe reciclarse tras bajas para preservar trazabilidad histórica. Su definición como PK simplifica auditorías y conciliaciones inter-módulo. Es el pilar de la integridad referencial de esta entidad.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'PK_Repuesto' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Identificador único y estable del catálogo de repuestos. Sirve de ancla para relaciones con compras, ventas y servicios, evitando colisiones de identidad. No debe reciclarse tras bajas para preservar trazabilidad histórica. Su definición como PK simplifica auditorías y conciliaciones inter-módulo. Es el pilar de la integridad referencial de esta entidad.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'PK_Repuesto' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'UQ_Repuesto_Codigo')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Asegura que cada código comercial identifique un solo repuesto, eliminando duplicados en catálogos, etiquetas y publicaciones. La unicidad reduce errores en picking, compras y ventas y mejora la experiencia de búsqueda. Se recomienda emparejarla con convención de codificación y revisiones cuando se produzcan reemplazos. Mantiene la consistencia del catálogo y de las integraciones externas.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'UQ_Repuesto_Codigo' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Asegura que cada código comercial identifique un solo repuesto, eliminando duplicados en catálogos, etiquetas y publicaciones. La unicidad reduce errores en picking, compras y ventas y mejora la experiencia de búsqueda. Se recomienda emparejarla con convención de codificación y revisiones cuando se produzcan reemplazos. Mantiene la consistencia del catálogo y de las integraciones externas.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'UQ_Repuesto_Codigo' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'CHK_Repuesto_Precio_NoNegativo')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Impide registrar precios negativos que distorsionan márgenes y valorizaciones. La verificación aplica en altas y actualizaciones, elevando la calidad del dato. No impone tope máximo; políticas comerciales pueden controlarlo en aplicación. Su presencia en el lógico guía la implementación física y las pruebas de QA. Evita errores de digitación y cálculos incoherentes.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'CHK_Repuesto_Precio_NoNegativo' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Impide registrar precios negativos que distorsionan márgenes y valorizaciones. La verificación aplica en altas y actualizaciones, elevando la calidad del dato. No impone tope máximo; políticas comerciales pueden controlarlo en aplicación. Su presencia en el lógico guía la implementación física y las pruebas de QA. Evita errores de digitación y cálculos incoherentes.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'CHK_Repuesto_Precio_NoNegativo' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'CHK_Repuesto_Stock_NoNegativo')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita saldos negativos que no tienen sentido sin ajustes formales. Protege la consistencia de inventario y las promesas de disponibilidad. Se evalúa en movimientos de entrada/salida y en correcciones. Ayuda a detectar diferencias entre físico y contable. Su inclusión en el diseño lógico asegura réplica en el físico.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'CHK_Repuesto_Stock_NoNegativo' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita saldos negativos que no tienen sentido sin ajustes formales. Protege la consistencia de inventario y las promesas de disponibilidad. Se evalúa en movimientos de entrada/salida y en correcciones. Ayuda a detectar diferencias entre físico y contable. Su inclusión en el diseño lógico asegura réplica en el físico.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'CHK_Repuesto_Stock_NoNegativo' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'CHK_Repuesto_StockMin_NoNegativo')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Impone un límite inferior válido para el punto de reorden, evitando umbrales negativos que invaliden alertas. No obliga a que el stock actual supere el mínimo (para permitir detectar quiebres), pero sí garantiza que el umbral sea coherente. Contribuye a la planificación de compras y a reportes de cobertura. Su control es clave para mantener el catálogo operativo.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'CHK_Repuesto_StockMin_NoNegativo' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Impone un límite inferior válido para el punto de reorden, evitando umbrales negativos que invaliden alertas. No obliga a que el stock actual supere el mínimo (para permitir detectar quiebres), pero sí garantiza que el umbral sea coherente. Contribuye a la planificación de compras y a reportes de cobertura. Su control es clave para mantener el catálogo operativo.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'CHK_Repuesto_StockMin_NoNegativo' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'CHK_Repuesto_Estado_Lista')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Restringe el atributo de estado a un conjunto finito de valores reconocidos por la política de producto. Evita etiquetas improvisadas y garantiza uniformidad de reportes y reglas operativas. El cambio de estado debe ser excepcional y trazable. Previene la selección de ítems obsoletos en transacciones. Mejora la higiene del maestro.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'CHK_Repuesto_Estado_Lista' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Restringe el atributo de estado a un conjunto finito de valores reconocidos por la política de producto. Evita etiquetas improvisadas y garantiza uniformidad de reportes y reglas operativas. El cambio de estado debe ser excepcional y trazable. Previene la selección de ítems obsoletos en transacciones. Mejora la higiene del maestro.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'CHK_Repuesto_Estado_Lista' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'CHK_Repuesto_Categoria_Lista')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Limita categoria a una lista cerrada para mantener consistencia analítica y de precios por familia. Evita proliferación de sinónimos que fragmenten reportes. La lista puede evolucionar por decisión de diseño, no en operación. Su control mejora búsquedas, organización de almacén y KPIs de rotación. Fundamental para segmentación y planificación.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'CHK_Repuesto_Categoria_Lista' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Limita categoria a una lista cerrada para mantener consistencia analítica y de precios por familia. Evita proliferación de sinónimos que fragmenten reportes. La lista puede evolucionar por decisión de diseño, no en operación. Su control mejora búsquedas, organización de almacén y KPIs de rotación. Fundamental para segmentación y planificación.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'CHK_Repuesto_Categoria_Lista' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'CHK_Repuesto_Fecha_NoFutura')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Prohíbe altas con fechas futuras para mantener coherencia temporal del catálogo. Aporta confiabilidad a cortes históricos, vigencias y auditorías. Debe validarse en inserciones y actualizaciones. Si el motor físico limita funciones de fecha en CHECK, la aplicación o un trigger replicarán el control. Documentarlo aquí asegura su verificación en QA.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'CHK_Repuesto_Fecha_NoFutura' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Prohíbe altas con fechas futuras para mantener coherencia temporal del catálogo. Aporta confiabilidad a cortes históricos, vigencias y auditorías. Debe validarse en inserciones y actualizaciones. Si el motor físico limita funciones de fecha en CHECK, la aplicación o un trigger replicarán el control. Documentarlo aquí asegura su verificación en QA.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Repuesto', 'CONSTRAINT', 'CHK_Repuesto_Fecha_NoFutura' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'Tbl_Servicio', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Contiene el catálogo de los servicios técnicos que puede ofrecer el taller o la empresa automotriz. La clave primaria id_servicio permite establecer relaciones con las órdenes de servicio y los detalles de facturación. Los atributos nombre, descripcion, costo, duracion_horas y garantia_meses caracterizan el alcance y valor de cada trabajo, con DECIMAL(10,2) para la precisión de costos y INT para tiempos y garantías. El campo requiere_repuesto funciona como indicador lógico de si el servicio depende de componentes físicos, mientras que nivel_dificultad categoriza la complejidad operativa para planificación y asignación de técnicos. fecha_creacion y observaciones facilitan el control histórico y operativo. Es la base para los procesos de cotización, ejecución y control de rentabilidad de servicios.', 'SCHEMA', 'dbo', 'table', 'Tbl_Servicio' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Contiene el catálogo de los servicios técnicos que puede ofrecer el taller o la empresa automotriz. La clave primaria id_servicio permite establecer relaciones con las órdenes de servicio y los detalles de facturación. Los atributos nombre, descripcion, costo, duracion_horas y garantia_meses caracterizan el alcance y valor de cada trabajo, con DECIMAL(10,2) para la precisión de costos y INT para tiempos y garantías. El campo requiere_repuesto funciona como indicador lógico de si el servicio depende de componentes físicos, mientras que nivel_dificultad categoriza la complejidad operativa para planificación y asignación de técnicos. fecha_creacion y observaciones facilitan el control histórico y operativo. Es la base para los procesos de cotización, ejecución y control de rentabilidad de servicios.', 'SCHEMA', 'dbo', 'table', 'Tbl_Servicio' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identificador técnico único del servicio. Se usa como clave primaria y ancla de todas las referencias desde OrdenServicioDetalle y DetalleFactura. No se reutiliza ni se modifica tras su creación, preservando trazabilidad histórica de tarifas y políticas. Permite auditorías y conciliaciones por concepto. Su estabilidad evita depender de cambios en el nombre comercial.', 'Schema', [dbo], 'table', [Tbl_Servicio], 'column', [id_servicio]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Indica si la ejecución requiere repuestos (ej.: ''si''/''no''). Esta bandera guía la planificación de materiales, evita proformas incompletas y posibilita validaciones de stock. Debe estar alineada con el alcance definido en el catálogo. Cambios implican revisar procedimientos asociados. Mejora la coherencia entre OS/Factura y consumo real.', 'Schema', [dbo], 'table', [Tbl_Servicio], 'column', [requiere_repuesto]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Clasificación operativa del esfuerzo (ej.: ''baja'', ''media'', ''alta''). Se usa para asignar técnicos, estimar tiempos adicionales o aplicar recargos según política. Mantener un dominio cerrado asegura homogeneidad analítica y evita etiquetas libres. Es base para métricas de productividad y para capacitación. Cambios requieren consenso del área técnica.', 'Schema', [dbo], 'table', [Tbl_Servicio], 'column', [nivel_dificultad]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha en que el servicio fue incorporado al catálogo. No debe ser futura. Es útil para cortes históricos, auditorías y análisis de vigencia de tarifas. Cambios posteriores se limitan a correcciones justificadas. Ayuda a reconstruir contextos cuando se comparan cotizaciones antiguas.', 'Schema', [dbo], 'table', [Tbl_Servicio], 'column', [fecha_creacion]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Notas adicionales, condiciones particulares o advertencias operativas. No afecta cálculos pero aporta contexto de ejecución y comercial. Debe usarse con criterio y mantenerse consistente con políticas. Útil para aclaraciones internas o mensajes en documentos.', 'Schema', [dbo], 'table', [Tbl_Servicio], 'column', [observaciones]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Denominación comercial del servicio. Debe ser clara, específica y sin abreviaturas ambiguas para facilitar búsquedas y lectura en documentos. Es la etiqueta visible en cotizaciones y facturas, por lo que conviene mantener normas de estilo y capitalización. Evita términos genéricos que se confundan con otros servicios. Es crítico para reportes y para diferenciar variantes similares.', 'Schema', [dbo], 'table', [Tbl_Servicio], 'column', [nombre]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Detalle explicativo del alcance, pasos o condiciones del servicio. Aunque opcional, mejora la precisión de ventas y reduce reclamos por expectativas incorrectas. Debe mantenerse técnica y objetivamente, sin lenguaje promocional. Sirve como apoyo al personal nuevo y para documentación de procesos. Ayuda en integraciones con portales o apps.', 'Schema', [dbo], 'table', [Tbl_Servicio], 'column', [descripcion]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Precio de lista de la mano de obra (importe por unidad) vigente a la fecha de creación. Debe ser = 0 y se usa como referencia para proformas; el valor efectivo se congela en OS/Factura. Las actualizaciones requieren procedimiento controlado para preservar el rastro de cambios. Impacta márgenes y análisis de rentabilidad. Su correcta captura es esencial para KPIs comerciales.', 'Schema', [dbo], 'table', [Tbl_Servicio], 'column', [costo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Estimación de horas/persona requeridas. Debe ser = 0; si se usa planificación, sirve para asignación de recursos y citas. No representa la duración real ejecutada, que puede variar por diagnóstico; sin embargo, fija expectativas y soporta promesas de entrega. En dashboards, ayuda a medir precisión de la planificación y productividad. Cambios requieren revisión del proceso.', 'Schema', [dbo], 'table', [Tbl_Servicio], 'column', [duracion_horas]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Meses de garantía ofrecidos por el servicio. Debe ser = 0 y alinearse con la política comercial y legal vigente. Un valor de cero indica que no aplica garantía adicional. Su registro uniforme reduce disputas y facilita posventa. Afecta comunicaciones a cliente y hojas de trabajo.', 'Schema', [dbo], 'table', [Tbl_Servicio], 'column', [garantia_meses]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'PK_Servicio')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Define la identidad única del servicio, imprescindible para integridad referencial con OS/Factura. Evita colisiones y asegura trazabilidad histórica de precios y políticas. No se recicla tras bajas para mantener historia limpia. Su presencia simplifica auditorías y conciliaciones. Es el eje técnico del catálogo.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'PK_Servicio' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Define la identidad única del servicio, imprescindible para integridad referencial con OS/Factura. Evita colisiones y asegura trazabilidad histórica de precios y políticas. No se recicla tras bajas para mantener historia limpia. Su presencia simplifica auditorías y conciliaciones. Es el eje técnico del catálogo.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'PK_Servicio' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'CHK_Servicio_Costo_NoNeg')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Impide valores negativos que distorsionarían márgenes y proformas. Permite 0 solo en casos excepcionales (cortesía/garantía) documentados. La verificación aplica en altas y actualizaciones. Su existencia eleva la confiabilidad de KPIs y conciliaciones. Debe replicarse en el físico.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'CHK_Servicio_Costo_NoNeg' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Impide valores negativos que distorsionarían márgenes y proformas. Permite 0 solo en casos excepcionales (cortesía/garantía) documentados. La verificación aplica en altas y actualizaciones. Su existencia eleva la confiabilidad de KPIs y conciliaciones. Debe replicarse en el físico.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'CHK_Servicio_Costo_NoNeg' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'CHK_Servicio_Duracion_NoNeg')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita tiempos negativos o inconsistentes. Aporta coherencia a la planificación de recursos y estimaciones de cita. Mejora la calidad de dashboards y reportes operativos. Su cumplimiento reduce conflictos por tiempos declarados. Es un control mínimo pero crucial.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'CHK_Servicio_Duracion_NoNeg' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita tiempos negativos o inconsistentes. Aporta coherencia a la planificación de recursos y estimaciones de cita. Mejora la calidad de dashboards y reportes operativos. Su cumplimiento reduce conflictos por tiempos declarados. Es un control mínimo pero crucial.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'CHK_Servicio_Duracion_NoNeg' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'CHK_Servicio_Garantia_NoNeg')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Previene valores imposibles en la garantía ofrecida. Permite 0 para casos sin cobertura adicional. Refuerza la claridad hacia clientes y el cumplimiento con políticas comerciales. Aporta consistencia a indicadores de posventa. Se evalúa tanto en creación como en modificaciones.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'CHK_Servicio_Garantia_NoNeg' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Previene valores imposibles en la garantía ofrecida. Permite 0 para casos sin cobertura adicional. Refuerza la claridad hacia clientes y el cumplimiento con políticas comerciales. Aporta consistencia a indicadores de posventa. Se evalúa tanto en creación como en modificaciones.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'CHK_Servicio_Garantia_NoNeg' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'CHK_Servicio_Requiere_Lista')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Restringe el atributo a un conjunto finito, evitando variantes (‘sí’, ‘SI’, ‘No’) que quiebren reportes y reglas. Su control es clave para planificación de materiales y validaciones de stock. Mejora la coherencia entre catálogo, OS y factura. Debe mantenerse alineado a la política operativa.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'CHK_Servicio_Requiere_Lista' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Restringe el atributo a un conjunto finito, evitando variantes (‘sí’, ‘SI’, ‘No’) que quiebren reportes y reglas. Su control es clave para planificación de materiales y validaciones de stock. Mejora la coherencia entre catálogo, OS y factura. Debe mantenerse alineado a la política operativa.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'CHK_Servicio_Requiere_Lista' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'CHK_Servicio_Dificultad_Lista')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Uniforma la clasificación operativa, base para asignación de técnicos, tiempos y posibles recargos. Evita etiquetas libres que fragmenten analítica. Su definición clara mejora comparabilidad histórica y planificación. Cambios de catálogo deben ser gobernados, no decididos en captura.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'CHK_Servicio_Dificultad_Lista' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Uniforma la clasificación operativa, base para asignación de técnicos, tiempos y posibles recargos. Evita etiquetas libres que fragmenten analítica. Su definición clara mejora comparabilidad histórica y planificación. Cambios de catálogo deben ser gobernados, no decididos en captura.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'CHK_Servicio_Dificultad_Lista' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'CHK_Servicio_Fecha_NoFutura')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita servicios con fecha posterior al día actual, garantizando cronología coherente del catálogo. Es importante para cortes históricos y auditorías. Si el motor físico limita funciones de fecha en CHECK, el control se replica en aplicación/trigger; documentarlo aquí asegura su verificación en QA. Reduce errores de digitación.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'CHK_Servicio_Fecha_NoFutura' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita servicios con fecha posterior al día actual, garantizando cronología coherente del catálogo. Es importante para cortes históricos y auditorías. Si el motor físico limita funciones de fecha en CHECK, el control se replica en aplicación/trigger; documentarlo aquí asegura su verificación en QA. Reduce errores de digitación.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'CHK_Servicio_Fecha_NoFutura' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'UQ_Servicio_Nombre')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita duplicados exactos de nombres que confunden ventas y reportes. Úsalo si tu operación exige un nombre único; si permites variantes con el mismo nombre y distinta descripción, omite este unique y gobierna la diferencia con convenciones de nomenclatura. Documentarlo en lógico te obliga a decidir la política.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'UQ_Servicio_Nombre' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita duplicados exactos de nombres que confunden ventas y reportes. Úsalo si tu operación exige un nombre único; si permites variantes con el mismo nombre y distinta descripción, omite este unique y gobierna la diferencia con convenciones de nomenclatura. Documentarlo en lógico te obliga a decidir la política.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Servicio', 'CONSTRAINT', 'UQ_Servicio_Nombre' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'Tbl_Vehiculo', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Tabla que gestiona el inventario de vehículos pertenecientes al taller o a los clientes, diferenciando unidades internas y externas. Su clave primaria id_vehiculo es un identificador técnico invariable que permite relacionar mantenimientos, ventas y órdenes de servicio. Los atributos placa y numero_chasis se declaran con VARCHAR de tamaño controlado y restricciones de unicidad para asegurar trazabilidad por unidad física. Los atributos de características (marca, modelo, anio, color, kilometraje, combustible, transmision y categoria) permiten describir de forma completa cada vehículo. estado_vehiculo mantiene un dominio limitado a “disponible”, “reservado” y “vendido”, reflejando el ciclo comercial y operativo. Esta entidad es clave para auditorías de inventario, reportes de rotación y control de disponibilidad.', 'SCHEMA', 'dbo', 'table', 'Tbl_Vehiculo' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Tabla que gestiona el inventario de vehículos pertenecientes al taller o a los clientes, diferenciando unidades internas y externas. Su clave primaria id_vehiculo es un identificador técnico invariable que permite relacionar mantenimientos, ventas y órdenes de servicio. Los atributos placa y numero_chasis se declaran con VARCHAR de tamaño controlado y restricciones de unicidad para asegurar trazabilidad por unidad física. Los atributos de características (marca, modelo, anio, color, kilometraje, combustible, transmision y categoria) permiten describir de forma completa cada vehículo. estado_vehiculo mantiene un dominio limitado a “disponible”, “reservado” y “vendido”, reflejando el ciclo comercial y operativo. Esta entidad es clave para auditorías de inventario, reportes de rotación y control de disponibilidad.', 'SCHEMA', 'dbo', 'table', 'Tbl_Vehiculo' 
end
GO

EXEC sp_addextendedproperty 'MS_Description', 'Clave primaria que distingue cada unidad del inventario o taller, independientemente de placa o número de chasis. Asegura la construcción de un historial técnico por vehículo y su correcta vinculación con órdenes de servicio y ventas. Permite auditar cambios de estado (disponible, reservado, vendido) sin perder continuidad. Es fundamental para reportes por unidad, campañas técnicas y trazabilidad comercial. Su valor no se recicla ni se altera tras la creación.', 'Schema', [dbo], 'table', [Tbl_Vehiculo], 'column', [id_vehiculo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Columna textual que almacena la matrícula del vehículo cuando exista; se permite NULL para unidades aún no registradas. Debe ser única entre valores informados para eliminar colisiones de identidad y facilitar búsquedas exactas. Conviene normalizar mayúsculas/espacios en la aplicación para mantener uniformidad de captura. Su estabilidad respalda controles legales y consultas operativas de taller. Cambios en este campo deben ser poco frecuentes y registrados para conservar el rastro de modificaciones.', 'Schema', [dbo], 'table', [Tbl_Vehiculo], 'column', [placa]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Identificador de chasis/VIN que distingue inequívocamente la unidad dentro del sistema. Se define NOT NULL y UNIQUE para impedir duplicidades y reforzar controles antifraude. Es fundamental para conciliaciones con documentos de transporte, compra y venta, así como para verificaciones técnicas. La longitud y el formato se validan en la aplicación para evitar capturas incompletas o erróneas. Su estabilidad asegura correspondencia entre inventario físico y registros del sistema.', 'Schema', [dbo], 'table', [Tbl_Vehiculo], 'column', [numero_chasis]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Nombre del fabricante capturado como texto y requerido para clasificar y filtrar. Debe escribirse de forma consistente siguiendo una lista operativa de valores aceptados para mantener calidad de reportes. Su presencia facilita análisis de rotación y comparativas comerciales por fabricante. También contribuye a búsquedas rápidas por parte de usuarios no técnicos. No se permiten cadenas vacías; debe existir un valor informativo.', 'Schema', [dbo], 'table', [Tbl_Vehiculo], 'column', [marca]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Designación del modelo de la unidad, requerida para segmentaciones y consultas combinadas con marca y año. Se almacena como texto y debe respetar una nomenclatura uniforme para evitar duplicados por variaciones ortográficas. Interviene en reportes de demanda y en publicaciones comerciales del inventario. Su captura correcta facilita comparación entre configuraciones en oferta. No se aceptan valores en blanco ni marcadores genéricos.', 'Schema', [dbo], 'table', [Tbl_Vehiculo], 'column', [modelo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Año de fabricación o del modelo representado como número entero. Debe ser NOT NULL y cumplir un rango razonable documentado a nivel lógico (por ejemplo, desde 1980 hasta el año actual+1) para prevenir valores fuera de contexto. Su validez incide en tasaciones, garantías y comparativas internas por generación. No se permiten ceros ni negativos; se espera un entero coherente con la realidad del negocio. Las consultas por año combinadas con marca y modelo son frecuentes.', 'Schema', [dbo], 'table', [Tbl_Vehiculo], 'column', [anio]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Color principal de la carrocería capturado como texto y requerido para distinguir unidades en inventario. Se sugiere utilizar un conjunto operativo de valores aceptados para evitar sinónimos o variantes que compliquen la analítica. Es útil para búsquedas por preferencias del cliente y para logística de exhibición. No se aceptan cadenas vacías, de modo que el valor represente un atributo real del vehículo. Favorece reportes estandarizados y consistentes.', 'Schema', [dbo], 'table', [Tbl_Vehiculo], 'column', [color]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Tipo de combustible expresado en texto y obligatorio en el registro. Debe restringirse a un conjunto cerrado de valores operativos (por ejemplo: ''gasolina'', ''diesel'', ''hibrido'', ''electrico'') para asegurar uniformidad. Este dominio textual facilita filtros y evita divergencias semánticas en reportes. No se permiten cadenas vacías ni valores no listados. Su consistencia simplifica segmentaciones y comparativas internas.', 'Schema', [dbo], 'table', [Tbl_Vehiculo], 'column', [combustible]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Lectura del odómetro expresada como número entero no negativo. Se documenta un CHECK lógico que impida valores menores a cero para mantener integridad. Este dato interviene en consultas de clasificación de unidades y comunicaciones operativas. No se exige un máximo, pero la validación de plausibilidad se maneja a nivel de aplicación. Actualizaciones posteriores deben conservar coherencia con el historial de la unidad.', 'Schema', [dbo], 'table', [Tbl_Vehiculo], 'column', [kilometraje]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Tipo de transmisión, almacenado como texto obligatorio con valores acotados operativamente (por ejemplo: ''manual'', ''automatica'', ''cvt'', ''secuencial''). La restricción a un conjunto cerrado previene variantes innecesarias y facilita la estandarización de consultas. No se aceptan cadenas vacías ni valores fuera de la lista definida por el negocio. Este dato contribuye a búsquedas y publicaciones uniformes. Se emplea en reportes de oferta y preferencias.', 'Schema', [dbo], 'table', [Tbl_Vehiculo], 'column', [transmision]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Clasificación comercial del vehículo almacenada como texto obligatorio, restringida a una lista operativa (por ejemplo: ''sedan'', ''suv'', ''pickup'', ''hatchback'', ''comercial''). La limitación a valores definidos asegura calidad analítica y comparabilidad entre períodos. No se aceptan cadenas vacías ni etiquetas improvisadas que rompan la consistencia. Se usa para segmentar inventario y medir rotación por familia. Facilita la preparación de listados comerciales coherentes.', 'Schema', [dbo], 'table', [Tbl_Vehiculo], 'column', [categoria]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Precio de referencia de la unidad expresado como número, requerido y no negativo. Se documenta un CHECK a nivel lógico que impida capturas inferiores a cero para preservar coherencia económica. Este valor participa en consultas de valorización, márgenes y reportes de oferta. No requiere valores por defecto y puede actualizarse bajo control de la operación. Conviene revisar límites máximos razonables en la aplicación para evitar errores de digitación.', 'Schema', [dbo], 'table', [Tbl_Vehiculo], 'column', [precio_venta]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Estado comercial actual del vehículo y obligatorio para controlar disponibilidad. Se define un CHECK de lista cerrada (por ejemplo: ''disponible'', ''reservado'', ''vendido'') para impedir estados no contemplados. No se admiten cadenas vacías ni variantes fuera del conjunto. Este dato es clave en paneles y filtros de inventario. Las transiciones entre estados deben ser consistentes con los procesos del negocio.', 'Schema', [dbo], 'table', [Tbl_Vehiculo], 'column', [id_estado_vehiculo]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Fecha de alta en inventario registrada como tipo fecha y requerida. Se documenta un CHECK lógico que impida fechas futuras respecto al día de captura, preservando la cronología de eventos. Es relevante para reportes de antigüedad de stock y planificación de ventas. No requiere valor por defecto salvo que la operación lo disponga expresamente. Su modificación posterior debe ser excepcional y controlada.', 'Schema', [dbo], 'table', [Tbl_Vehiculo], 'column', [fecha_ingreso]
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'UQ_Vehiculo_numero_chasis')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Restricción de unicidad sobre numero_chasis para impedir duplicidades de identificación entre unidades. Este campo es obligatorio y, en consecuencia, la unicidad se aplica a todos los registros. La regla garantiza la correspondencia 1:1 entre un VIN/chasis y un vehículo, reforzando controles antifraude y coherencia documental. Debe combinarse con NOT NULL en la columna. Cualquier corrección del valor exige procedimiento controlado para no romper trazabilidad histórica.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'UQ_Vehiculo_numero_chasis' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Restricción de unicidad sobre numero_chasis para impedir duplicidades de identificación entre unidades. Este campo es obligatorio y, en consecuencia, la unicidad se aplica a todos los registros. La regla garantiza la correspondencia 1:1 entre un VIN/chasis y un vehículo, reforzando controles antifraude y coherencia documental. Debe combinarse con NOT NULL en la columna. Cualquier corrección del valor exige procedimiento controlado para no romper trazabilidad histórica.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'UQ_Vehiculo_numero_chasis' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'UQ_Vehiculo_placa_NN')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Unicidad de la columna placa solo para valores informados. En el modelo lógico se documenta que múltiples registros pueden carecer de placa (NULL), pero cuando existe un valor debe ser único. Esta regla evita colisiones de identidad y mejora búsquedas. La implementación física se resolverá como índice único que ignore NULL, pero a nivel lógico se deja expresado que la unicidad aplica a valores no nulos. La columna puede permanecer NULLABLE en vehículos nuevos.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'UQ_Vehiculo_placa_NN' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Unicidad de la columna placa solo para valores informados. En el modelo lógico se documenta que múltiples registros pueden carecer de placa (NULL), pero cuando existe un valor debe ser único. Esta regla evita colisiones de identidad y mejora búsquedas. La implementación física se resolverá como índice único que ignore NULL, pero a nivel lógico se deja expresado que la unicidad aplica a valores no nulos. La columna puede permanecer NULLABLE en vehículos nuevos.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'UQ_Vehiculo_placa_NN' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_Precio_NoNegativo')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Regla de dominio que impide registrar valores negativos en precio_venta. Garantiza coherencia económica y evita errores de digitación que distorsionen reportes de valorización o márgenes. Aplica a todos los registros y es consistente con políticas de pricing. La regla se evaluará en el motor en el modelo físico; en el lógico queda especificada para asegurar su trazabilidad de diseño. No establece máximos; validaciones de plausibilidad se gestionan en la aplicación.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_Precio_NoNegativo' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Regla de dominio que impide registrar valores negativos en precio_venta. Garantiza coherencia económica y evita errores de digitación que distorsionen reportes de valorización o márgenes. Aplica a todos los registros y es consistente con políticas de pricing. La regla se evaluará en el motor en el modelo físico; en el lógico queda especificada para asegurar su trazabilidad de diseño. No establece máximos; validaciones de plausibilidad se gestionan en la aplicación.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_Precio_NoNegativo' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_Km_NoNegativo')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Evita valores menores a cero en kilometraje, preservando la integridad de un indicador operativo clave. Corrige capturas erróneas frecuentes en procesos manuales y mantiene estable la analítica por tipo de unidad. Se verifica al insertar y actualizar, evitando regresiones ilógicas del odómetro. La ausencia de límite máximo se alinea con la naturaleza acumulativa del campo. La presencia de esta regla en el diseño lógico facilita su control en QA y en el modelo físico.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_Km_NoNegativo' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Evita valores menores a cero en kilometraje, preservando la integridad de un indicador operativo clave. Corrige capturas erróneas frecuentes en procesos manuales y mantiene estable la analítica por tipo de unidad. Se verifica al insertar y actualizar, evitando regresiones ilógicas del odómetro. La ausencia de límite máximo se alinea con la naturaleza acumulativa del campo. La presencia de esta regla en el diseño lógico facilita su control en QA y en el modelo físico.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_Km_NoNegativo' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_Anio_Rango')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Restringe anio a un intervalo coherente con el dominio, evitando valores fuera de contexto (muy antiguos o excesivamente futuros). Se adopta un mínimo de 1980 y un máximo dinámico equivalente a año actual + 1; en este diagrama lógico se concreta como 2026 para asegurar claridad operativa. La condición reduce outliers y mejora la calidad de reportes y comparativas. En la implementación física, el límite superior puede revisarse de forma periódica o trasladarse a validación de aplicación. La existencia del CHECK en el lógico asegura su trazabilidad en el diseño.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_Anio_Rango' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Restringe anio a un intervalo coherente con el dominio, evitando valores fuera de contexto (muy antiguos o excesivamente futuros). Se adopta un mínimo de 1980 y un máximo dinámico equivalente a año actual + 1; en este diagrama lógico se concreta como 2026 para asegurar claridad operativa. La condición reduce outliers y mejora la calidad de reportes y comparativas. En la implementación física, el límite superior puede revisarse de forma periódica o trasladarse a validación de aplicación. La existencia del CHECK en el lógico asegura su trazabilidad en el diseño.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_Anio_Rango' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_Combustible')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Restringe combustible a un conjunto controlado para mantener uniformidad y calidad analítica. Evita sinónimos y variaciones ortográficas que degradan filtros y agregaciones. La lista se mantiene estable y solo cambia por decisión de diseño, no en operación diaria. Su aplicación reduce ambigüedad y favorece comparabilidad histórica. La presencia en el modelo lógico asegura su réplica en la capa física.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_Combustible' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Restringe combustible a un conjunto controlado para mantener uniformidad y calidad analítica. Evita sinónimos y variaciones ortográficas que degradan filtros y agregaciones. La lista se mantiene estable y solo cambia por decisión de diseño, no en operación diaria. Su aplicación reduce ambigüedad y favorece comparabilidad histórica. La presencia en el modelo lógico asegura su réplica en la capa física.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_Combustible' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_Transmision')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Establece un conjunto acotado de etiquetas válidas para transmision. Previene variantes no homologadas que dificulten las consultas y los listados. La uniformidad en este campo mejora la presentación de inventario y publicaciones comerciales. Se evalúa en inserciones y actualizaciones para sostener la consistencia. La definición explícita aquí facilita la implementación posterior del CHECK en SQL Server.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_Transmision' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Establece un conjunto acotado de etiquetas válidas para transmision. Previene variantes no homologadas que dificulten las consultas y los listados. La uniformidad en este campo mejora la presentación de inventario y publicaciones comerciales. Se evalúa en inserciones y actualizaciones para sostener la consistencia. La definición explícita aquí facilita la implementación posterior del CHECK en SQL Server.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_Transmision' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_Categoria')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Controla categoria con una lista cerrada, asegurando segmentaciones confiables y reportes comparables. Evita etiquetas improvisadas o sinónimos que fragmentan el análisis. Su verificación en altas y cambios sostiene la integridad del dato. La regla simplifica filtros operativos y tableros de gestión. Documentarla en el lógico asegura su traslado directo a la base física.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_Categoria' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Controla categoria con una lista cerrada, asegurando segmentaciones confiables y reportes comparables. Evita etiquetas improvisadas o sinónimos que fragmentan el análisis. Su verificación en altas y cambios sostiene la integridad del dato. La regla simplifica filtros operativos y tableros de gestión. Documentarla en el lógico asegura su traslado directo a la base física.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_Categoria' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_VIN_Longitud')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Exige que numero_chasis tenga exactamente 17 caracteres, acorde con el estándar de VIN. Evita capturas incompletas o con dígitos extra que impedirían validaciones y conciliaciones. Se aplica en inserciones y actualizaciones, reforzando controles de calidad y antifraude. La regla complementa la unicidad, proporcionando una verificación sintáctica básica. Su especificación en el lógico facilita su implementación como CHECK en el físico.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_VIN_Longitud' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Exige que numero_chasis tenga exactamente 17 caracteres, acorde con el estándar de VIN. Evita capturas incompletas o con dígitos extra que impedirían validaciones y conciliaciones. Se aplica en inserciones y actualizaciones, reforzando controles de calidad y antifraude. La regla complementa la unicidad, proporcionando una verificación sintáctica básica. Su especificación en el lógico facilita su implementación como CHECK en el físico.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_VIN_Longitud' 
   end 

GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_FechaIngreso_NoFutura')) 
   begin 
 	EXEC sys.sp_updateextendedproperty 'MS_Description', 'Prohíbe registrar fecha_ingreso posterior al día actual para preservar coherencia temporal del inventario. La regla es útil para cierres, antigüedad de stock y auditorías. En EA queda documentada en el modelo lógico con esta expresión clara; en el motor físico (SQL Server 2012) la parte dependiente de la fecha actual puede requerir validación en la aplicación o trigger. Su presencia en el diseño obliga a considerar y probar el control en los flujos de carga.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_FechaIngreso_NoFutura' 
   end 
 else 
   begin 
 	EXEC sys.sp_addextendedproperty    'MS_Description', 'Prohíbe registrar fecha_ingreso posterior al día actual para preservar coherencia temporal del inventario. La regla es útil para cierres, antigüedad de stock y auditorías. En EA queda documentada en el modelo lógico con esta expresión clara; en el motor físico (SQL Server 2012) la parte dependiente de la fecha actual puede requerir validación en la aplicación o trigger. Su presencia en el diseño obliga a considerar y probar el control en los flujos de carga.', 'SCHEMA', 'dbo', 'TABLE', 'Tbl_Vehiculo', 'CONSTRAINT', 'CHK_Vehiculo_FechaIngreso_NoFutura' 
   end 

GO
